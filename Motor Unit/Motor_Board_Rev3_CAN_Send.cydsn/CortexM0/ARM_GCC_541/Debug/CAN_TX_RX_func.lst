ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CAN_TX_RX_func.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_SendMsg,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_SendMsg
  22              		.code	16
  23              		.thumb_func
  24              		.type	CAN_SendMsg, %function
  25              	CAN_SendMsg:
  26              	.LFB34:
  27              		.file 1 "Generated_Source\\PSoC4\\CAN_TX_RX_func.c"
   1:Generated_Source\PSoC4/CAN_TX_RX_func.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * File Name: CAN_TX_RX_func.c
   3:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Version 3.0
   4:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
   5:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Description:
   6:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  There are functions process "Full" Receive and Transmit mailboxes:
   7:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *     - CAN_SendMsg0-7();
   8:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg0-15();
   9:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  Transmission of message, and receive routine for "Basic" mailboxes:
  10:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *     - CAN_SendMsg();
  11:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *     - CAN_TxCancel();
  12:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *     - CAN_ReceiveMsg();
  13:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
  14:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  Note:
  15:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *   None
  16:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
  17:Generated_Source\PSoC4/CAN_TX_RX_func.c **** ********************************************************************************
  18:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *******************************************************************************/
  23:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
  24:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #include "CAN.h"
  25:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
  27:Generated_Source\PSoC4/CAN_TX_RX_func.c **** /* `#START TX_RX_FUNCTION` */
  28:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
  29:Generated_Source\PSoC4/CAN_TX_RX_func.c **** /* `#END` */
  30:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 2


  31:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
  32:Generated_Source\PSoC4/CAN_TX_RX_func.c **** /*******************************************************************************
  33:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_SendMsg
  34:Generated_Source\PSoC4/CAN_TX_RX_func.c **** ********************************************************************************
  35:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
  36:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Summary:
  37:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  This function is Send Message from one of Basic mailboxes. The function loops
  38:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  through the transmit message buffer designed as Basic CAN mailboxes for the
  39:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  first free available and sends from it. The number of retries is limited.
  40:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
  41:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Parameters:
  42:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  message: The pointer to a structure that contains all required data to send
  43:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *           messages.
  44:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
  45:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Return:
  46:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  Indication if message has been sent.
  47:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *   Define                             Description
  48:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *    CYRET_SUCCESS                      The function passed successfully
  49:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *    CAN_FAIL              The function failed
  50:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
  51:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *******************************************************************************/
  52:Generated_Source\PSoC4/CAN_TX_RX_func.c **** uint8 CAN_SendMsg(const CAN_TX_MSG *message) 
  53:Generated_Source\PSoC4/CAN_TX_RX_func.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 3, -24
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 4F46     		mov	r7, r9
  42 0004 4646     		mov	r6, r8
  43 0006 C0B4     		push	{r6, r7}
  44              		.cfi_def_cfa_offset 32
  45              		.cfi_offset 8, -32
  46              		.cfi_offset 9, -28
  47 0008 0400     		movs	r4, r0
  48              	.LVL1:
  54:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 i, j, shift;
  55:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 retry = 0u;
  56:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  49              		.loc 1 56 0
  50 000a 0120     		movs	r0, #1
  51              	.LVL2:
  55:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 result = CAN_FAIL;
  52              		.loc 1 55 0
  53 000c 0023     		movs	r3, #0
  54 000e 9846     		mov	r8, r3
  57:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint32 regTemp;
  58:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
  59:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     while (retry < CAN_RETRY_NUMBER)
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 3


  55              		.loc 1 59 0
  56 0010 91E0     		b	.L2
  57              	.LVL3:
  58              	.L18:
  60:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     {
  61:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         shift = 1u;    /* Start from first mailbox */
  62:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         for (i = 0u; i < CAN_NUMBER_OF_TX_MAILBOXES; i++)
  63:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         {
  64:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             /* Find Basic TX mailboxes */
  65:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX_MAILBOX_TYPE & shift) == 0u)
  66:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
  67:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* Find free mailbox */
  68:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #if (CY_PSOC3 || CY_PSOC5)
  69:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG.byte[2] & shift) == 0u)
  70:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #else  /* CY_PSOC4 */
  71:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     if ((CAN_BUF_SR_REG &
  59              		.loc 1 71 0
  60 0012 4C4B     		ldr	r3, .L23
  61 0014 1B68     		ldr	r3, [r3]
  72:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  62              		.loc 1 72 0
  63 0016 3204     		lsls	r2, r6, #16
  71:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         (uint32) ((uint32) shift << CAN_TWO_BYTE_OFFSET)) == 0u)
  64              		.loc 1 71 0
  65 0018 1A42     		tst	r2, r3
  66 001a 7AD1     		bne	.L3
  67              	.LVL4:
  73:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #endif /* CY_PSOC3 || CY_PSOC5 */
  74:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     {
  75:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         regTemp = 0u;
  76:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
  77:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         /* Set message parameters */
  78:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         if (message->rtr != CAN_STANDARD_MESSAGE)
  68              		.loc 1 78 0
  69 001c 2379     		ldrb	r3, [r4, #4]
  70 001e 002B     		cmp	r3, #0
  71 0020 01D1     		bne	.L21
  75:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
  72              		.loc 1 75 0
  73 0022 0027     		movs	r7, #0
  74 0024 01E0     		b	.L4
  75              	.L21:
  79:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         {
  80:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             regTemp = CAN_TX_RTR_MASK;    /* RTR message Enable */
  76              		.loc 1 80 0
  77 0026 8027     		movs	r7, #128
  78 0028 BF03     		lsls	r7, r7, #14
  79              	.L4:
  80              	.LVL5:
  81:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         }
  82:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
  83:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         if (message->ide == CAN_STANDARD_MESSAGE)
  81              		.loc 1 83 0
  82 002a 6379     		ldrb	r3, [r4, #5]
  83 002c 002B     		cmp	r3, #0
  84 002e 07D1     		bne	.L5
  84:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         {
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 4


  85:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_STANDARD_MSG(i, message->id);
  85              		.loc 1 85 0
  86 0030 2B01     		lsls	r3, r5, #4
  87 0032 454A     		ldr	r2, .L23+4
  88 0034 9446     		mov	ip, r2
  89 0036 6344     		add	r3, r3, ip
  90 0038 2268     		ldr	r2, [r4]
  91 003a 5205     		lsls	r2, r2, #21
  92 003c 5A60     		str	r2, [r3, #4]
  93 003e 09E0     		b	.L6
  94              	.L5:
  86:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         }
  87:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         else
  88:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         {
  89:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_IDE_MASK;
  95              		.loc 1 89 0
  96 0040 8023     		movs	r3, #128
  97 0042 5B03     		lsls	r3, r3, #13
  98 0044 1F43     		orrs	r7, r3
  99              	.LVL6:
  90:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             CAN_SET_TX_ID_EXTENDED_MSG(i, message->id);
 100              		.loc 1 90 0
 101 0046 2B01     		lsls	r3, r5, #4
 102 0048 3F4A     		ldr	r2, .L23+4
 103 004a 9446     		mov	ip, r2
 104 004c 6344     		add	r3, r3, ip
 105 004e 2268     		ldr	r2, [r4]
 106 0050 D200     		lsls	r2, r2, #3
 107 0052 5A60     		str	r2, [r3, #4]
 108              	.L6:
  91:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         }
  92:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
  93:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         if (message->dlc < CAN_TX_DLC_MAX_VALUE)
 109              		.loc 1 93 0
 110 0054 A379     		ldrb	r3, [r4, #6]
 111 0056 072B     		cmp	r3, #7
 112 0058 03D8     		bhi	.L7
  94:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         {
  95:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             regTemp |= ((uint32) message->dlc) << CAN_TWO_BYTE_OFFSET;
 113              		.loc 1 95 0
 114 005a 1B04     		lsls	r3, r3, #16
 115 005c 1F43     		orrs	r7, r3
 116              	.LVL7:
 117 005e B946     		mov	r9, r7
 118              	.LVL8:
 119 0060 03E0     		b	.L8
 120              	.L7:
  96:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         }
  97:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         else
  98:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         {
  99:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_DLC_UPPER_VALUE;
 121              		.loc 1 99 0
 122 0062 8023     		movs	r3, #128
 123 0064 1B03     		lsls	r3, r3, #12
 124 0066 1F43     		orrs	r7, r3
 125              	.LVL9:
 126 0068 B946     		mov	r9, r7
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 5


 127              	.LVL10:
 128              	.L8:
 100:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         }
 101:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 102:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         if (message->irq != CAN_TRANSMIT_INT_DISABLE)
 129              		.loc 1 102 0
 130 006a E379     		ldrb	r3, [r4, #7]
 131 006c 002B     		cmp	r3, #0
 132 006e 03D0     		beq	.L9
 103:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         {
 104:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             regTemp |= CAN_TX_INT_ENABLE_MASK;    /* Transmit Interrupt Enable */
 133              		.loc 1 104 0
 134 0070 0423     		movs	r3, #4
 135 0072 4A46     		mov	r2, r9
 136 0074 1A43     		orrs	r2, r3
 137 0076 9146     		mov	r9, r2
 138              	.LVL11:
 139              	.L9:
 105:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         }
 106:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 107:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         for (j = 0u; (j < message->dlc) && (j < CAN_TX_DLC_MAX_VALUE); j++)
 140              		.loc 1 107 0
 141 0078 0023     		movs	r3, #0
 142 007a 2AE0     		b	.L10
 143              	.LVL12:
 144              	.L14:
 108:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         {
 109:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             #if (CY_PSOC3 || CY_PSOC5)
 110:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j) = message->msg->byte[j];
 111:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             #else /* CY_PSOC4 */
 112:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                                 CAN_TX_DATA_BYTE(i, j, message->msg->byte[j]);
 145              		.loc 1 112 0
 146 007c 032B     		cmp	r3, #3
 147 007e 13D9     		bls	.L11
 148              		.loc 1 112 0 is_stmt 0 discriminator 1
 149 0080 2801     		lsls	r0, r5, #4
 150 0082 324A     		ldr	r2, .L23+8
 151 0084 9446     		mov	ip, r2
 152 0086 6044     		add	r0, r0, ip
 153 0088 0268     		ldr	r2, [r0]
 154 008a 9446     		mov	ip, r2
 155 008c 5907     		lsls	r1, r3, #29
 156 008e CA1A     		subs	r2, r1, r3
 157 0090 D100     		lsls	r1, r2, #3
 158 0092 3831     		adds	r1, r1, #56
 159 0094 FF22     		movs	r2, #255
 160 0096 8A40     		lsls	r2, r2, r1
 161 0098 6746     		mov	r7, ip
 162 009a 9743     		bics	r7, r2
 163 009c E268     		ldr	r2, [r4, #12]
 164 009e D25C     		ldrb	r2, [r2, r3]
 165 00a0 8A40     		lsls	r2, r2, r1
 166 00a2 3A43     		orrs	r2, r7
 167 00a4 0260     		str	r2, [r0]
 168 00a6 12E0     		b	.L12
 169              	.L11:
 170              		.loc 1 112 0 discriminator 2
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 6


 171 00a8 2801     		lsls	r0, r5, #4
 172 00aa 274A     		ldr	r2, .L23+4
 173 00ac 9446     		mov	ip, r2
 174 00ae 6044     		add	r0, r0, ip
 175 00b0 8268     		ldr	r2, [r0, #8]
 176 00b2 9446     		mov	ip, r2
 177 00b4 5907     		lsls	r1, r3, #29
 178 00b6 CA1A     		subs	r2, r1, r3
 179 00b8 D100     		lsls	r1, r2, #3
 180 00ba 1831     		adds	r1, r1, #24
 181 00bc FF22     		movs	r2, #255
 182 00be 8A40     		lsls	r2, r2, r1
 183 00c0 6746     		mov	r7, ip
 184 00c2 9743     		bics	r7, r2
 185 00c4 E268     		ldr	r2, [r4, #12]
 186 00c6 D25C     		ldrb	r2, [r2, r3]
 187 00c8 8A40     		lsls	r2, r2, r1
 188 00ca 3A43     		orrs	r2, r7
 189 00cc 8260     		str	r2, [r0, #8]
 190              	.L12:
 107:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         {
 191              		.loc 1 107 0 is_stmt 1 discriminator 2
 192 00ce 0133     		adds	r3, r3, #1
 193              	.LVL13:
 194 00d0 DBB2     		uxtb	r3, r3
 195              	.LVL14:
 196              	.L10:
 107:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         {
 197              		.loc 1 107 0 is_stmt 0 discriminator 1
 198 00d2 A279     		ldrb	r2, [r4, #6]
 199 00d4 9342     		cmp	r3, r2
 200 00d6 01D2     		bcs	.L13
 107:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         {
 201              		.loc 1 107 0 discriminator 3
 202 00d8 072B     		cmp	r3, #7
 203 00da CFD9     		bls	.L14
 204              	.L13:
 113:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             #endif /* CY_PSOC3 || CY_PSOC5 */
 114:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         }
 115:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 116:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         /* Disable isr */
 117:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     CyIntDisable(CAN_ISR_NUMBER);
 205              		.loc 1 117 0 is_stmt 1
 206 00dc 1D20     		movs	r0, #29
 207 00de FFF7FEFF 		bl	CyIntDisable
 208              	.LVL15:
 118:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 119:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         /* WPN[23] and WPN[3] set to 1 for write to CAN Control reg */
 120:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         CY_SET_REG32(CAN_TX_CMD_PTR(i), (regTemp | CAN_TX_WPN_SET));
 209              		.loc 1 120 0
 210 00e2 2B01     		lsls	r3, r5, #4
 211 00e4 184A     		ldr	r2, .L23+4
 212 00e6 9446     		mov	ip, r2
 213 00e8 6344     		add	r3, r3, ip
 214 00ea 194A     		ldr	r2, .L23+12
 215 00ec 4F46     		mov	r7, r9
 216 00ee 1743     		orrs	r7, r2
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 7


 217 00f0 1F60     		str	r7, [r3]
 121:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 122:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         #if (CY_PSOC3 || CY_PSOC5)
 123:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             CY_SET_REG32(CAN_TX_CMD_PTR(i), CAN_SEND_MESSAGE);
 124:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         #else /* CY_PSOC4 */
 125:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             if (message->sst != CAN_STANDARD_MESSAGE)
 218              		.loc 1 125 0
 219 00f2 227A     		ldrb	r2, [r4, #8]
 220 00f4 002A     		cmp	r2, #0
 221 00f6 04D0     		beq	.L15
 126:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             {
 127:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                                 /* Single Shot Transmission */
 128:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE |
 222              		.loc 1 128 0
 223 00f8 1968     		ldr	r1, [r3]
 224 00fa 0322     		movs	r2, #3
 225 00fc 0A43     		orrs	r2, r1
 226 00fe 1A60     		str	r2, [r3]
 227 0100 03E0     		b	.L16
 228              	.L15:
 129:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                                 CAN_TX_ABORT_MASK;
 130:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             }
 131:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             else
 132:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             {
 133:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                                 CAN_TX_CMD_REG(i) |= CAN_SEND_MESSAGE;
 229              		.loc 1 133 0
 230 0102 1968     		ldr	r1, [r3]
 231 0104 0122     		movs	r2, #1
 232 0106 0A43     		orrs	r2, r1
 233 0108 1A60     		str	r2, [r3]
 234              	.L16:
 134:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                             }
 135:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         #endif /* CY_PSOC3 || CY_PSOC5 */
 136:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 137:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         /* Enable isr */
 138:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     CyIntEnable(CAN_ISR_NUMBER);
 235              		.loc 1 138 0
 236 010a 1D20     		movs	r0, #29
 237 010c FFF7FEFF 		bl	CyIntEnable
 238              	.LVL16:
 139:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 140:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                         result = CYRET_SUCCESS;
 239              		.loc 1 140 0
 240 0110 0020     		movs	r0, #0
 241              	.LVL17:
 242              	.L3:
 141:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     }
 142:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 143:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             shift <<= 1u;
 243              		.loc 1 143 0
 244 0112 7600     		lsls	r6, r6, #1
 245              	.LVL18:
 246 0114 F6B2     		uxtb	r6, r6
 247              	.LVL19:
 144:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if (result == CYRET_SUCCESS)
 248              		.loc 1 144 0
 249 0116 0028     		cmp	r0, #0
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 8


 250 0118 07D0     		beq	.L17
  62:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         {
 251              		.loc 1 62 0 discriminator 2
 252 011a 0135     		adds	r5, r5, #1
 253              	.LVL20:
 254 011c EDB2     		uxtb	r5, r5
 255              	.LVL21:
 256 011e 01E0     		b	.L20
 257              	.LVL22:
 258              	.L22:
 259 0120 0126     		movs	r6, #1
 260 0122 0025     		movs	r5, #0
 261              	.L20:
 262              	.LVL23:
  62:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         {
 263              		.loc 1 62 0 is_stmt 0 discriminator 1
 264 0124 072D     		cmp	r5, #7
 265 0126 00D8     		bhi	.LCB268
 266 0128 73E7     		b	.L18	@long jump
 267              	.LCB268:
 268              	.L17:
 145:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 146:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 break;
 147:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 148:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         }
 149:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         if (result == CYRET_SUCCESS)
 269              		.loc 1 149 0 is_stmt 1
 270 012a 0028     		cmp	r0, #0
 271 012c 06D0     		beq	.L19
 150:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         {
 151:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             break;
 152:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         }
 153:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         else
 154:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         {
 155:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             retry++;
 272              		.loc 1 155 0
 273 012e 4346     		mov	r3, r8
 274 0130 0133     		adds	r3, r3, #1
 275 0132 DBB2     		uxtb	r3, r3
 276 0134 9846     		mov	r8, r3
 277              	.LVL24:
 278              	.L2:
  59:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     {
 279              		.loc 1 59 0
 280 0136 4346     		mov	r3, r8
 281 0138 022B     		cmp	r3, #2
 282 013a F1D9     		bls	.L22
 283              	.L19:
 156:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         }
 157:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     }
 158:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 159:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     return (result);
 160:Generated_Source\PSoC4/CAN_TX_RX_func.c **** }
 284              		.loc 1 160 0
 285              		@ sp needed
 286              	.LVL25:
 287              	.LVL26:
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 9


 288 013c 0CBC     		pop	{r2, r3}
 289 013e 9046     		mov	r8, r2
 290 0140 9946     		mov	r9, r3
 291 0142 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 292              	.L24:
 293              		.align	2
 294              	.L23:
 295 0144 08002F40 		.word	1076822024
 296 0148 20002F40 		.word	1076822048
 297 014c 2C002F40 		.word	1076822060
 298 0150 08008000 		.word	8388616
 299              		.cfi_endproc
 300              	.LFE34:
 301              		.size	CAN_SendMsg, .-CAN_SendMsg
 302              		.section	.text.CAN_TxCancel,"ax",%progbits
 303              		.align	2
 304              		.global	CAN_TxCancel
 305              		.code	16
 306              		.thumb_func
 307              		.type	CAN_TxCancel, %function
 308              	CAN_TxCancel:
 309              	.LFB35:
 161:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 162:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 163:Generated_Source\PSoC4/CAN_TX_RX_func.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_TxCancel
 165:Generated_Source\PSoC4/CAN_TX_RX_func.c **** ********************************************************************************
 166:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
 167:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Summary:
 168:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  This function cancels transmission of a message that has been queued to be
 169:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  transmitted. Values between 0 and 7 are valid.
 170:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
 171:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Parameters:
 172:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  bufferId: The mailbox number.
 173:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
 174:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Return:
 175:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  None.
 176:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
 177:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *******************************************************************************/
 178:Generated_Source\PSoC4/CAN_TX_RX_func.c **** void CAN_TxCancel(uint8 bufferId) 
 179:Generated_Source\PSoC4/CAN_TX_RX_func.c **** {
 310              		.loc 1 179 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL27:
 180:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     if (bufferId < CAN_NUMBER_OF_TX_MAILBOXES)
 316              		.loc 1 180 0
 317 0000 0728     		cmp	r0, #7
 318 0002 09D8     		bhi	.L25
 181:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     {
 182:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         CAN_TX_ABORT_MESSAGE(bufferId);
 319              		.loc 1 182 0
 320 0004 0001     		lsls	r0, r0, #4
 321              	.LVL28:
 322 0006 054B     		ldr	r3, .L27
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 10


 323 0008 9C46     		mov	ip, r3
 324 000a 6044     		add	r0, r0, ip
 325 000c 0368     		ldr	r3, [r0]
 326 000e 0322     		movs	r2, #3
 327 0010 9343     		bics	r3, r2
 328 0012 013A     		subs	r2, r2, #1
 329 0014 1343     		orrs	r3, r2
 330 0016 0360     		str	r3, [r0]
 331              	.L25:
 183:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     }
 184:Generated_Source\PSoC4/CAN_TX_RX_func.c **** }
 332              		.loc 1 184 0
 333              		@ sp needed
 334 0018 7047     		bx	lr
 335              	.L28:
 336 001a C046     		.align	2
 337              	.L27:
 338 001c 20002F40 		.word	1076822048
 339              		.cfi_endproc
 340              	.LFE35:
 341              		.size	CAN_TxCancel, .-CAN_TxCancel
 342              		.section	.text.CAN_ReceiveMsg,"ax",%progbits
 343              		.align	2
 344              		.global	CAN_ReceiveMsg
 345              		.code	16
 346              		.thumb_func
 347              		.type	CAN_ReceiveMsg, %function
 348              	CAN_ReceiveMsg:
 349              	.LFB36:
 185:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 186:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 187:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #if (CAN_TX0_FUNC_ENABLE)
 188:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     /*******************************************************************************
 189:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg0
 190:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     ********************************************************************************
 191:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 192:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Summary:
 193:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 0. The function checks
 194:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  if mailbox 0 doesn't already have un-transmitted messages waiting for
 195:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 196:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 197:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 198:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Parameters:
 199:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  None.
 200:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 201:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Return:
 202:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 203:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *   Define                             Description
 204:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 205:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 206:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 207:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *******************************************************************************/
 208:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg0(void) 
 209:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     {
 210:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 211:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 212:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 11


 213:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX[0u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 214:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 215:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(0u) & CAN_TX_REQUEST_PENDING) != 0u)
 216:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 217:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 218:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 219:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 220:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             else
 221:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 222:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_0_TRASMITTED` */
 223:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 224:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#END` */
 225:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 226:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_0_CALLBACK
 227:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     CAN_SendMsg_0_Callback();
 228:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_0_CALLBACK */
 229:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 230:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(0u),
 231:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(0u)) | CAN_SEND_MESSAGE);
 232:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 233:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 234:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         return (result);
 235:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     }
 236:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #endif /* CAN_TX0_FUNC_ENABLE */
 237:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 238:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 239:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #if (CAN_TX1_FUNC_ENABLE)
 240:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     /*******************************************************************************
 241:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg1
 242:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     ********************************************************************************
 243:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 244:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Summary:
 245:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 1. The function checks
 246:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  if mailbox 1 doesn't already have un-transmitted messages waiting for
 247:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 248:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 249:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 250:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Parameters:
 251:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  None.
 252:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 253:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Return:
 254:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 255:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *   Define                             Description
 256:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 257:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 258:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 259:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *******************************************************************************/
 260:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg1(void) 
 261:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     {
 262:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 263:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 264:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 265:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX[1u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 266:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 267:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(1u) & CAN_TX_REQUEST_PENDING) != 0u)
 268:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 269:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 12


 270:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 271:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 272:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             else
 273:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 274:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_1_TRASMITTED` */
 275:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 276:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#END` */
 277:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 278:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_1_CALLBACK
 279:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     CAN_SendMsg_1_Callback();
 280:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_1_CALLBACK */
 281:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 282:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(1u),
 283:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(1u)) | CAN_SEND_MESSAGE);
 284:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 285:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 286:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         return (result);
 287:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     }
 288:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #endif /* CAN_TX1_FUNC_ENABLE */
 289:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 290:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 291:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #if (CAN_TX2_FUNC_ENABLE)
 292:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     /*******************************************************************************
 293:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg2
 294:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     ********************************************************************************
 295:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 296:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Summary:
 297:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 2. The function checks
 298:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  if mailbox 2 doesn't already have un-transmitted messages waiting for
 299:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 300:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 301:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 302:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Parameters:
 303:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  None.
 304:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 305:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Return:
 306:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 307:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *   Define                             Description
 308:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 309:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 310:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 311:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *******************************************************************************/
 312:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg2(void) 
 313:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     {
 314:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 315:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 316:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 317:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX[2u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 318:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 319:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(2u) & CAN_TX_REQUEST_PENDING) != 0u)
 320:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 321:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 322:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 323:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 324:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             else
 325:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 326:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_2_TRASMITTED` */
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 13


 327:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 328:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#END` */
 329:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 330:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_2_CALLBACK
 331:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     CAN_SendMsg_2_Callback();
 332:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_2_CALLBACK */
 333:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 334:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(2u),
 335:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(2u)) | CAN_SEND_MESSAGE);
 336:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 337:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 338:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         return (result);
 339:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     }
 340:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #endif /* CAN_TX2_FUNC_ENABLE */
 341:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 342:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 343:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #if (CAN_TX3_FUNC_ENABLE)
 344:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     /*******************************************************************************
 345:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg3
 346:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     ********************************************************************************
 347:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 348:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Summary:
 349:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 3. The function checks
 350:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  if mailbox 3 doesn't already have un-transmitted messages waiting for
 351:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 352:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 353:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 354:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Parameters:
 355:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  None.
 356:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 357:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Return:
 358:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 359:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *   Define                             Description
 360:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 361:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 362:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 363:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *******************************************************************************/
 364:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg3(void) 
 365:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     {
 366:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 367:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 368:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 369:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX[3u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 370:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 371:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(3u) & CAN_TX_REQUEST_PENDING) != 0u)
 372:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 373:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 374:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 375:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 376:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             else
 377:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 378:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_3_TRASMITTED` */
 379:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 380:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#END` */
 381:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 382:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_3_CALLBACK
 383:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     CAN_SendMsg_3_Callback();
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 14


 384:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_3_CALLBACK */
 385:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 386:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(3u),
 387:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(3u)) | CAN_SEND_MESSAGE);
 388:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 389:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 390:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         return (result);
 391:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     }
 392:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #endif /* CAN_TX3_FUNC_ENABLE */
 393:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 394:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 395:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #if (CAN_TX4_FUNC_ENABLE)
 396:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     /*******************************************************************************
 397:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg4
 398:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     ********************************************************************************
 399:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 400:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Summary:
 401:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 4. The function checks
 402:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  if mailbox 4 doesn't already have un-transmitted messages waiting for
 403:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 404:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 405:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 406:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Parameters:
 407:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  None.
 408:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 409:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Return:
 410:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 411:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *   Define                             Description
 412:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 413:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 414:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 415:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *******************************************************************************/
 416:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg4(void) 
 417:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     {
 418:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 419:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 420:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 421:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX[4u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 422:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 423:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(4u) & CAN_TX_REQUEST_PENDING) != 0u)
 424:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 425:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 426:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 427:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 428:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             else
 429:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 430:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_4_TRASMITTED` */
 431:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 432:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#END` */
 433:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 434:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_4_CALLBACK
 435:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     CAN_SendMsg_4_Callback();
 436:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_4_CALLBACK */
 437:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 438:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(4u),
 439:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(4u)) | CAN_SEND_MESSAGE);
 440:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 15


 441:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 442:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         return (result);
 443:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     }
 444:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #endif /* CAN_TX4_FUNC_ENABLE */
 445:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 446:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 447:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #if (CAN_TX5_FUNC_ENABLE)
 448:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     /*******************************************************************************
 449:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg5
 450:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     ********************************************************************************
 451:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 452:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Summary:
 453:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 5. The function checks
 454:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  if mailbox 5 doesn't already have un-transmitted messages waiting for
 455:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 456:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 457:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 458:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Parameters:
 459:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  None.
 460:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 461:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Return:
 462:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 463:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *   Define                             Description
 464:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 465:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 466:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 467:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *******************************************************************************/
 468:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg5(void) 
 469:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     {
 470:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 471:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 472:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 473:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX[5u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 474:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 475:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(5u) & CAN_TX_REQUEST_PENDING) != 0u)
 476:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 477:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 478:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 479:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 480:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             else
 481:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 482:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_5_TRASMITTED` */
 483:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 484:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#END` */
 485:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 486:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_5_CALLBACK
 487:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     CAN_SendMsg_5_Callback();
 488:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_5_CALLBACK */
 489:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 490:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(5u),
 491:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(5u)) | CAN_SEND_MESSAGE);
 492:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 493:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 494:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         return (result);
 495:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     }
 496:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #endif /* CAN_TX5_FUNC_ENABLE */
 497:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 16


 498:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 499:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #if (CAN_TX6_FUNC_ENABLE)
 500:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     /*******************************************************************************
 501:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg6
 502:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     ********************************************************************************
 503:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 504:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Summary:
 505:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 6. The function checks
 506:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  if mailbox 6 doesn't already have un-transmitted messages waiting for
 507:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 508:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 509:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 510:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Parameters:
 511:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  None.
 512:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 513:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Return:
 514:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 515:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *   Define                             Description
 516:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 517:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 518:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 519:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *******************************************************************************/
 520:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg6(void) 
 521:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     {
 522:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 523:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 524:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 525:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX[6u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 526:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 527:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(6u) & CAN_TX_REQUEST_PENDING) != 0u)
 528:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 529:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 530:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 531:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 532:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             else
 533:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 534:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_6_TRASMITTED` */
 535:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 536:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#END` */
 537:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 538:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_6_CALLBACK
 539:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     CAN_SendMsg_6_Callback();
 540:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_6_CALLBACK */
 541:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 542:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(6u),
 543:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(6u)) | CAN_SEND_MESSAGE);
 544:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 545:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 546:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         return (result);
 547:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     }
 548:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #endif /* CAN_TX6_FUNC_ENABLE */
 549:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 550:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 551:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #if (CAN_TX7_FUNC_ENABLE)
 552:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     /*******************************************************************************
 553:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * FUNCTION NAME:   CAN_SendMsg7)
 554:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     ********************************************************************************
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 17


 555:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 556:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Summary:
 557:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  This function is the entry point to Transmit Message 7. The function checks
 558:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  if mailbox 7 doesn't already have un-transmitted messages waiting for
 559:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  arbitration. If not initiate transmission of the message.
 560:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Generated only for the Transmit mailbox designed as Full.
 561:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 562:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Parameters:
 563:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  None.
 564:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 565:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     * Return:
 566:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *  Indication if Message has been sent.
 567:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *   Define                             Description
 568:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CYRET_SUCCESS                      The function passed successfully
 569:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *    CAN_FAIL              The function failed
 570:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *
 571:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     *******************************************************************************/
 572:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     uint8 CAN_SendMsg7(void) 
 573:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     {
 574:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         uint8 result = CYRET_SUCCESS;
 575:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 576:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #if (CY_PSOC3 || CY_PSOC5)
 577:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX[7u].txcmd.byte[0u] & CAN_TX_REQUEST_PENDING) != 0u)
 578:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #else  /* CY_PSOC4 */
 579:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             if ((CAN_TX_CMD_REG(7u) & CAN_TX_REQUEST_PENDING) != 0u)
 580:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         #endif /* CY_PSOC3 || CY_PSOC5 */
 581:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 582:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 result = CAN_FAIL;
 583:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 584:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             else
 585:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             {
 586:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#START MESSAGE_7_TRASMITTED` */
 587:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 588:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 /* `#END` */
 589:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 590:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #ifdef CAN_SEND_MSG_7_CALLBACK
 591:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                     CAN_SendMsg_7_Callback();
 592:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 #endif /* CAN_SEND_MSG_7_CALLBACK */
 593:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 594:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_SET_REG32(CAN_TX_CMD_PTR(7u),
 595:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CY_GET_REG32(CAN_TX_CMD_PTR(7u)) | CAN_SEND_MESSAGE);
 596:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             }
 597:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 598:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         return (result);
 599:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     }
 600:Generated_Source\PSoC4/CAN_TX_RX_func.c **** #endif /* CAN_TX7_FUNC_ENABLE */
 601:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 602:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 603:Generated_Source\PSoC4/CAN_TX_RX_func.c **** /*******************************************************************************
 604:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * FUNCTION NAME:   CAN_ReceiveMsg
 605:Generated_Source\PSoC4/CAN_TX_RX_func.c **** ********************************************************************************
 606:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
 607:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Summary:
 608:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  This function is the entry point to Receive Message Interrupt for Basic
 609:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  mailboxes. Clears the Receive particular Message interrupt flag. Generated
 610:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  only if one of the Receive mailboxes is designed as Basic.
 611:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 18


 612:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Parameters:
 613:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  rxMailbox: The mailbox number that trig Receive Message Interrupt.
 614:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
 615:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Return:
 616:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  None.
 617:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
 618:Generated_Source\PSoC4/CAN_TX_RX_func.c **** * Reentrant:
 619:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *  Depends on the Customer code.
 620:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *
 621:Generated_Source\PSoC4/CAN_TX_RX_func.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CAN_TX_RX_func.c **** void CAN_ReceiveMsg(uint8 rxMailbox) 
 623:Generated_Source\PSoC4/CAN_TX_RX_func.c **** {
 350              		.loc 1 623 0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LVL29:
 624:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     #if (CY_PSOC3 || CY_PSOC5)
 625:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         if ((CAN_RX[rxMailbox].rxcmd.byte[0u] & CAN_RX_ACK_MSG) != 0u)
 626:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     #else  /* CY_PSOC4 */
 627:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         if ((CAN_RX_CMD_REG(rxMailbox) & CAN_RX_ACK_MSG) != 0u)
 356              		.loc 1 627 0
 357 0000 4001     		lsls	r0, r0, #5
 358              	.LVL30:
 359 0002 054B     		ldr	r3, .L31
 360 0004 9C46     		mov	ip, r3
 361 0006 6044     		add	r0, r0, ip
 362 0008 0368     		ldr	r3, [r0]
 363 000a DB07     		lsls	r3, r3, #31
 364 000c 03D5     		bpl	.L29
 628:Generated_Source\PSoC4/CAN_TX_RX_func.c ****     #endif /* CY_PSOC3 || CY_PSOC5 */
 629:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         {
 630:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             /* `#START MESSAGE_BASIC_RECEIVED` */
 631:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 632:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             /* `#END` */
 633:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 634:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             #ifdef CAN_RECEIVE_MSG_CALLBACK
 635:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CAN_ReceiveMsg_Callback();
 636:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             #endif /* CAN_RECEIVE_MSG_CALLBACK */
 637:Generated_Source\PSoC4/CAN_TX_RX_func.c **** 
 638:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             #if (CY_PSOC3 || CY_PSOC5)
 639:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CAN_RX[rxMailbox].rxcmd.byte[0u] |= CAN_RX_ACK_MSG;
 640:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             #else  /* CY_PSOC4 */
 641:Generated_Source\PSoC4/CAN_TX_RX_func.c ****                 CAN_RX_CMD_REG(rxMailbox) |= CAN_RX_ACK_MSG;
 365              		.loc 1 641 0
 366 000e 0268     		ldr	r2, [r0]
 367 0010 0123     		movs	r3, #1
 368 0012 1343     		orrs	r3, r2
 369 0014 0360     		str	r3, [r0]
 370              	.L29:
 642:Generated_Source\PSoC4/CAN_TX_RX_func.c ****             #endif /* CY_PSOC3 || CY_PSOC5 */
 643:Generated_Source\PSoC4/CAN_TX_RX_func.c ****         }
 644:Generated_Source\PSoC4/CAN_TX_RX_func.c **** }
 371              		.loc 1 644 0
 372              		@ sp needed
 373 0016 7047     		bx	lr
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 19


 374              	.L32:
 375              		.align	2
 376              	.L31:
 377 0018 A0002F40 		.word	1076822176
 378              		.cfi_endproc
 379              	.LFE36:
 380              		.size	CAN_ReceiveMsg, .-CAN_ReceiveMsg
 381              		.text
 382              	.Letext0:
 383              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 384              		.file 3 "Generated_Source\\PSoC4\\CAN.h"
 385              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 386              		.section	.debug_info,"",%progbits
 387              	.Ldebug_info0:
 388 0000 7A030000 		.4byte	0x37a
 389 0004 0400     		.2byte	0x4
 390 0006 00000000 		.4byte	.Ldebug_abbrev0
 391 000a 04       		.byte	0x4
 392 000b 01       		.uleb128 0x1
 393 000c 7D010000 		.4byte	.LASF46
 394 0010 0C       		.byte	0xc
 395 0011 08010000 		.4byte	.LASF47
 396 0015 78020000 		.4byte	.LASF48
 397 0019 00000000 		.4byte	.Ldebug_ranges0+0
 398 001d 00000000 		.4byte	0
 399 0021 00000000 		.4byte	.Ldebug_line0
 400 0025 02       		.uleb128 0x2
 401 0026 01       		.byte	0x1
 402 0027 06       		.byte	0x6
 403 0028 65020000 		.4byte	.LASF0
 404 002c 02       		.uleb128 0x2
 405 002d 01       		.byte	0x1
 406 002e 08       		.byte	0x8
 407 002f 83000000 		.4byte	.LASF1
 408 0033 02       		.uleb128 0x2
 409 0034 02       		.byte	0x2
 410 0035 05       		.byte	0x5
 411 0036 FE000000 		.4byte	.LASF2
 412 003a 02       		.uleb128 0x2
 413 003b 02       		.byte	0x2
 414 003c 07       		.byte	0x7
 415 003d B9000000 		.4byte	.LASF3
 416 0041 02       		.uleb128 0x2
 417 0042 04       		.byte	0x4
 418 0043 05       		.byte	0x5
 419 0044 28000000 		.4byte	.LASF4
 420 0048 02       		.uleb128 0x2
 421 0049 04       		.byte	0x4
 422 004a 07       		.byte	0x7
 423 004b A7000000 		.4byte	.LASF5
 424 004f 02       		.uleb128 0x2
 425 0050 08       		.byte	0x8
 426 0051 05       		.byte	0x5
 427 0052 1B020000 		.4byte	.LASF6
 428 0056 02       		.uleb128 0x2
 429 0057 08       		.byte	0x8
 430 0058 07       		.byte	0x7
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 20


 431 0059 44010000 		.4byte	.LASF7
 432 005d 03       		.uleb128 0x3
 433 005e 04       		.byte	0x4
 434 005f 05       		.byte	0x5
 435 0060 696E7400 		.ascii	"int\000"
 436 0064 02       		.uleb128 0x2
 437 0065 04       		.byte	0x4
 438 0066 07       		.byte	0x7
 439 0067 37010000 		.4byte	.LASF8
 440 006b 04       		.uleb128 0x4
 441 006c 41020000 		.4byte	.LASF9
 442 0070 02       		.byte	0x2
 443 0071 E401     		.2byte	0x1e4
 444 0073 2C000000 		.4byte	0x2c
 445 0077 04       		.uleb128 0x4
 446 0078 30010000 		.4byte	.LASF10
 447 007c 02       		.byte	0x2
 448 007d E601     		.2byte	0x1e6
 449 007f 48000000 		.4byte	0x48
 450 0083 02       		.uleb128 0x2
 451 0084 04       		.byte	0x4
 452 0085 04       		.byte	0x4
 453 0086 66000000 		.4byte	.LASF11
 454 008a 02       		.uleb128 0x2
 455 008b 08       		.byte	0x8
 456 008c 04       		.byte	0x4
 457 008d 4C000000 		.4byte	.LASF12
 458 0091 02       		.uleb128 0x2
 459 0092 01       		.byte	0x1
 460 0093 08       		.byte	0x8
 461 0094 29020000 		.4byte	.LASF13
 462 0098 04       		.uleb128 0x4
 463 0099 9C000000 		.4byte	.LASF14
 464 009d 02       		.byte	0x2
 465 009e 8E02     		.2byte	0x28e
 466 00a0 A4000000 		.4byte	0xa4
 467 00a4 05       		.uleb128 0x5
 468 00a5 6B000000 		.4byte	0x6b
 469 00a9 04       		.uleb128 0x4
 470 00aa 47020000 		.4byte	.LASF15
 471 00ae 02       		.byte	0x2
 472 00af 9002     		.2byte	0x290
 473 00b1 B5000000 		.4byte	0xb5
 474 00b5 05       		.uleb128 0x5
 475 00b6 77000000 		.4byte	0x77
 476 00ba 02       		.uleb128 0x2
 477 00bb 08       		.byte	0x8
 478 00bc 04       		.byte	0x4
 479 00bd 4D020000 		.4byte	.LASF16
 480 00c1 02       		.uleb128 0x2
 481 00c2 04       		.byte	0x4
 482 00c3 07       		.byte	0x7
 483 00c4 0B020000 		.4byte	.LASF17
 484 00c8 06       		.uleb128 0x6
 485 00c9 08       		.byte	0x8
 486 00ca 03       		.byte	0x3
 487 00cb 6F       		.byte	0x6f
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 21


 488 00cc DD000000 		.4byte	0xdd
 489 00d0 07       		.uleb128 0x7
 490 00d1 53000000 		.4byte	.LASF19
 491 00d5 03       		.byte	0x3
 492 00d6 71       		.byte	0x71
 493 00d7 DD000000 		.4byte	0xdd
 494 00db 00       		.byte	0
 495 00dc 00       		.byte	0
 496 00dd 08       		.uleb128 0x8
 497 00de 6B000000 		.4byte	0x6b
 498 00e2 ED000000 		.4byte	0xed
 499 00e6 09       		.uleb128 0x9
 500 00e7 C1000000 		.4byte	0xc1
 501 00eb 07       		.byte	0x7
 502 00ec 00       		.byte	0
 503 00ed 0A       		.uleb128 0xa
 504 00ee CC000000 		.4byte	.LASF18
 505 00f2 03       		.byte	0x3
 506 00f3 72       		.byte	0x72
 507 00f4 C8000000 		.4byte	0xc8
 508 00f8 06       		.uleb128 0x6
 509 00f9 08       		.byte	0x8
 510 00fa 03       		.byte	0x3
 511 00fb 75       		.byte	0x75
 512 00fc 0D010000 		.4byte	0x10d
 513 0100 07       		.uleb128 0x7
 514 0101 53000000 		.4byte	.LASF19
 515 0105 03       		.byte	0x3
 516 0106 77       		.byte	0x77
 517 0107 1D010000 		.4byte	0x11d
 518 010b 00       		.byte	0
 519 010c 00       		.byte	0
 520 010d 08       		.uleb128 0x8
 521 010e 98000000 		.4byte	0x98
 522 0112 1D010000 		.4byte	0x11d
 523 0116 09       		.uleb128 0x9
 524 0117 C1000000 		.4byte	0xc1
 525 011b 07       		.byte	0x7
 526 011c 00       		.byte	0
 527 011d 05       		.uleb128 0x5
 528 011e 0D010000 		.4byte	0x10d
 529 0122 0A       		.uleb128 0xa
 530 0123 0E000000 		.4byte	.LASF20
 531 0127 03       		.byte	0x3
 532 0128 78       		.byte	0x78
 533 0129 F8000000 		.4byte	0xf8
 534 012d 06       		.uleb128 0x6
 535 012e 04       		.byte	0x4
 536 012f 03       		.byte	0x3
 537 0130 7B       		.byte	0x7b
 538 0131 42010000 		.4byte	0x142
 539 0135 07       		.uleb128 0x7
 540 0136 53000000 		.4byte	.LASF19
 541 013a 03       		.byte	0x3
 542 013b 7D       		.byte	0x7d
 543 013c 52010000 		.4byte	0x152
 544 0140 00       		.byte	0
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 22


 545 0141 00       		.byte	0
 546 0142 08       		.uleb128 0x8
 547 0143 98000000 		.4byte	0x98
 548 0147 52010000 		.4byte	0x152
 549 014b 09       		.uleb128 0x9
 550 014c C1000000 		.4byte	0xc1
 551 0150 03       		.byte	0x3
 552 0151 00       		.byte	0
 553 0152 05       		.uleb128 0x5
 554 0153 42010000 		.4byte	0x142
 555 0157 0A       		.uleb128 0xa
 556 0158 31000000 		.4byte	.LASF21
 557 015c 03       		.byte	0x3
 558 015d 7E       		.byte	0x7e
 559 015e 2D010000 		.4byte	0x12d
 560 0162 06       		.uleb128 0x6
 561 0163 10       		.byte	0x10
 562 0164 03       		.byte	0x3
 563 0165 81       		.byte	0x81
 564 0166 BE010000 		.4byte	0x1be
 565 016a 0B       		.uleb128 0xb
 566 016b 696400   		.ascii	"id\000"
 567 016e 03       		.byte	0x3
 568 016f 83       		.byte	0x83
 569 0170 77000000 		.4byte	0x77
 570 0174 00       		.byte	0
 571 0175 0B       		.uleb128 0xb
 572 0176 72747200 		.ascii	"rtr\000"
 573 017a 03       		.byte	0x3
 574 017b 84       		.byte	0x84
 575 017c 6B000000 		.4byte	0x6b
 576 0180 04       		.byte	0x4
 577 0181 0B       		.uleb128 0xb
 578 0182 69646500 		.ascii	"ide\000"
 579 0186 03       		.byte	0x3
 580 0187 85       		.byte	0x85
 581 0188 6B000000 		.4byte	0x6b
 582 018c 05       		.byte	0x5
 583 018d 0B       		.uleb128 0xb
 584 018e 646C6300 		.ascii	"dlc\000"
 585 0192 03       		.byte	0x3
 586 0193 86       		.byte	0x86
 587 0194 6B000000 		.4byte	0x6b
 588 0198 06       		.byte	0x6
 589 0199 0B       		.uleb128 0xb
 590 019a 69727100 		.ascii	"irq\000"
 591 019e 03       		.byte	0x3
 592 019f 87       		.byte	0x87
 593 01a0 6B000000 		.4byte	0x6b
 594 01a4 07       		.byte	0x7
 595 01a5 0B       		.uleb128 0xb
 596 01a6 73737400 		.ascii	"sst\000"
 597 01aa 03       		.byte	0x3
 598 01ab 89       		.byte	0x89
 599 01ac 6B000000 		.4byte	0x6b
 600 01b0 08       		.byte	0x8
 601 01b1 0B       		.uleb128 0xb
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 23


 602 01b2 6D736700 		.ascii	"msg\000"
 603 01b6 03       		.byte	0x3
 604 01b7 8B       		.byte	0x8b
 605 01b8 BE010000 		.4byte	0x1be
 606 01bc 0C       		.byte	0xc
 607 01bd 00       		.byte	0
 608 01be 0C       		.uleb128 0xc
 609 01bf 04       		.byte	0x4
 610 01c0 ED000000 		.4byte	0xed
 611 01c4 0A       		.uleb128 0xa
 612 01c5 6C000000 		.4byte	.LASF22
 613 01c9 03       		.byte	0x3
 614 01ca 8C       		.byte	0x8c
 615 01cb 62010000 		.4byte	0x162
 616 01cf 06       		.uleb128 0x6
 617 01d0 20       		.byte	0x20
 618 01d1 03       		.byte	0x3
 619 01d2 A0       		.byte	0xa0
 620 01d3 2C020000 		.4byte	0x22c
 621 01d7 07       		.uleb128 0x7
 622 01d8 A1000000 		.4byte	.LASF23
 623 01dc 03       		.byte	0x3
 624 01dd A2       		.byte	0xa2
 625 01de 57010000 		.4byte	0x157
 626 01e2 00       		.byte	0
 627 01e3 07       		.uleb128 0x7
 628 01e4 91000000 		.4byte	.LASF24
 629 01e8 03       		.byte	0x3
 630 01e9 A3       		.byte	0xa3
 631 01ea 57010000 		.4byte	0x157
 632 01ee 04       		.byte	0x4
 633 01ef 07       		.uleb128 0x7
 634 01f0 58000000 		.4byte	.LASF25
 635 01f4 03       		.byte	0x3
 636 01f5 A4       		.byte	0xa4
 637 01f6 22010000 		.4byte	0x122
 638 01fa 08       		.byte	0x8
 639 01fb 07       		.uleb128 0x7
 640 01fc 22000000 		.4byte	.LASF26
 641 0200 03       		.byte	0x3
 642 0201 A5       		.byte	0xa5
 643 0202 57010000 		.4byte	0x157
 644 0206 10       		.byte	0x10
 645 0207 07       		.uleb128 0x7
 646 0208 3B020000 		.4byte	.LASF27
 647 020c 03       		.byte	0x3
 648 020d A6       		.byte	0xa6
 649 020e 57010000 		.4byte	0x157
 650 0212 14       		.byte	0x14
 651 0213 07       		.uleb128 0x7
 652 0214 14020000 		.4byte	.LASF28
 653 0218 03       		.byte	0x3
 654 0219 A7       		.byte	0xa7
 655 021a 57010000 		.4byte	0x157
 656 021e 18       		.byte	0x18
 657 021f 07       		.uleb128 0x7
 658 0220 5F000000 		.4byte	.LASF29
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 24


 659 0224 03       		.byte	0x3
 660 0225 A8       		.byte	0xa8
 661 0226 57010000 		.4byte	0x157
 662 022a 1C       		.byte	0x1c
 663 022b 00       		.byte	0
 664 022c 0A       		.uleb128 0xa
 665 022d 6F010000 		.4byte	.LASF30
 666 0231 03       		.byte	0x3
 667 0232 A9       		.byte	0xa9
 668 0233 CF010000 		.4byte	0x1cf
 669 0237 06       		.uleb128 0x6
 670 0238 10       		.byte	0x10
 671 0239 03       		.byte	0x3
 672 023a AC       		.byte	0xac
 673 023b 64020000 		.4byte	0x264
 674 023f 07       		.uleb128 0x7
 675 0240 46000000 		.4byte	.LASF31
 676 0244 03       		.byte	0x3
 677 0245 AE       		.byte	0xae
 678 0246 57010000 		.4byte	0x157
 679 024a 00       		.byte	0
 680 024b 07       		.uleb128 0x7
 681 024c 1D000000 		.4byte	.LASF32
 682 0250 03       		.byte	0x3
 683 0251 AF       		.byte	0xaf
 684 0252 57010000 		.4byte	0x157
 685 0256 04       		.byte	0x4
 686 0257 07       		.uleb128 0x7
 687 0258 71020000 		.4byte	.LASF33
 688 025c 03       		.byte	0x3
 689 025d B0       		.byte	0xb0
 690 025e 22010000 		.4byte	0x122
 691 0262 08       		.byte	0x8
 692 0263 00       		.byte	0
 693 0264 0A       		.uleb128 0xa
 694 0265 DF000000 		.4byte	.LASF34
 695 0269 03       		.byte	0x3
 696 026a B1       		.byte	0xb1
 697 026b 37020000 		.4byte	0x237
 698 026f 0D       		.uleb128 0xd
 699 0270 77000000 		.4byte	.LASF49
 700 0274 01       		.byte	0x1
 701 0275 34       		.byte	0x34
 702 0276 6B000000 		.4byte	0x6b
 703 027a 00000000 		.4byte	.LFB34
 704 027e 54010000 		.4byte	.LFE34-.LFB34
 705 0282 01       		.uleb128 0x1
 706 0283 9C       		.byte	0x9c
 707 0284 10030000 		.4byte	0x310
 708 0288 0E       		.uleb128 0xe
 709 0289 00000000 		.4byte	.LASF39
 710 028d 01       		.byte	0x1
 711 028e 34       		.byte	0x34
 712 028f 10030000 		.4byte	0x310
 713 0293 00000000 		.4byte	.LLST0
 714 0297 0F       		.uleb128 0xf
 715 0298 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 25


 716 029a 01       		.byte	0x1
 717 029b 36       		.byte	0x36
 718 029c 6B000000 		.4byte	0x6b
 719 02a0 2C000000 		.4byte	.LLST1
 720 02a4 0F       		.uleb128 0xf
 721 02a5 6A00     		.ascii	"j\000"
 722 02a7 01       		.byte	0x1
 723 02a8 36       		.byte	0x36
 724 02a9 6B000000 		.4byte	0x6b
 725 02ad 55000000 		.4byte	.LLST2
 726 02b1 10       		.uleb128 0x10
 727 02b2 08000000 		.4byte	.LASF35
 728 02b6 01       		.byte	0x1
 729 02b7 36       		.byte	0x36
 730 02b8 6B000000 		.4byte	0x6b
 731 02bc 7F000000 		.4byte	.LLST3
 732 02c0 10       		.uleb128 0x10
 733 02c1 96000000 		.4byte	.LASF36
 734 02c5 01       		.byte	0x1
 735 02c6 37       		.byte	0x37
 736 02c7 6B000000 		.4byte	0x6b
 737 02cb A8000000 		.4byte	.LLST4
 738 02cf 10       		.uleb128 0x10
 739 02d0 5B010000 		.4byte	.LASF37
 740 02d4 01       		.byte	0x1
 741 02d5 38       		.byte	0x38
 742 02d6 6B000000 		.4byte	0x6b
 743 02da C7000000 		.4byte	.LLST5
 744 02de 10       		.uleb128 0x10
 745 02df F6000000 		.4byte	.LASF38
 746 02e3 01       		.byte	0x1
 747 02e4 39       		.byte	0x39
 748 02e5 77000000 		.4byte	0x77
 749 02e9 FD000000 		.4byte	.LLST6
 750 02ed 11       		.uleb128 0x11
 751 02ee E2000000 		.4byte	.LVL15
 752 02f2 67030000 		.4byte	0x367
 753 02f6 00030000 		.4byte	0x300
 754 02fa 12       		.uleb128 0x12
 755 02fb 01       		.uleb128 0x1
 756 02fc 50       		.byte	0x50
 757 02fd 01       		.uleb128 0x1
 758 02fe 4D       		.byte	0x4d
 759 02ff 00       		.byte	0
 760 0300 13       		.uleb128 0x13
 761 0301 10010000 		.4byte	.LVL16
 762 0305 72030000 		.4byte	0x372
 763 0309 12       		.uleb128 0x12
 764 030a 01       		.uleb128 0x1
 765 030b 50       		.byte	0x50
 766 030c 01       		.uleb128 0x1
 767 030d 4D       		.byte	0x4d
 768 030e 00       		.byte	0
 769 030f 00       		.byte	0
 770 0310 0C       		.uleb128 0xc
 771 0311 04       		.byte	0x4
 772 0312 16030000 		.4byte	0x316
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 26


 773 0316 14       		.uleb128 0x14
 774 0317 C4010000 		.4byte	0x1c4
 775 031b 15       		.uleb128 0x15
 776 031c 62010000 		.4byte	.LASF41
 777 0320 01       		.byte	0x1
 778 0321 B2       		.byte	0xb2
 779 0322 00000000 		.4byte	.LFB35
 780 0326 20000000 		.4byte	.LFE35-.LFB35
 781 032a 01       		.uleb128 0x1
 782 032b 9C       		.byte	0x9c
 783 032c 40030000 		.4byte	0x340
 784 0330 0E       		.uleb128 0xe
 785 0331 ED000000 		.4byte	.LASF40
 786 0335 01       		.byte	0x1
 787 0336 B2       		.byte	0xb2
 788 0337 6B000000 		.4byte	0x6b
 789 033b 3D010000 		.4byte	.LLST7
 790 033f 00       		.byte	0
 791 0340 16       		.uleb128 0x16
 792 0341 FF020000 		.4byte	.LASF42
 793 0345 01       		.byte	0x1
 794 0346 6E02     		.2byte	0x26e
 795 0348 00000000 		.4byte	.LFB36
 796 034c 1C000000 		.4byte	.LFE36-.LFB36
 797 0350 01       		.uleb128 0x1
 798 0351 9C       		.byte	0x9c
 799 0352 67030000 		.4byte	0x367
 800 0356 17       		.uleb128 0x17
 801 0357 3C000000 		.4byte	.LASF43
 802 035b 01       		.byte	0x1
 803 035c 6E02     		.2byte	0x26e
 804 035e 6B000000 		.4byte	0x6b
 805 0362 5E010000 		.4byte	.LLST8
 806 0366 00       		.byte	0
 807 0367 18       		.uleb128 0x18
 808 0368 2E020000 		.4byte	.LASF44
 809 036c 2E020000 		.4byte	.LASF44
 810 0370 04       		.byte	0x4
 811 0371 C5       		.byte	0xc5
 812 0372 18       		.uleb128 0x18
 813 0373 59020000 		.4byte	.LASF45
 814 0377 59020000 		.4byte	.LASF45
 815 037b 04       		.byte	0x4
 816 037c C3       		.byte	0xc3
 817 037d 00       		.byte	0
 818              		.section	.debug_abbrev,"",%progbits
 819              	.Ldebug_abbrev0:
 820 0000 01       		.uleb128 0x1
 821 0001 11       		.uleb128 0x11
 822 0002 01       		.byte	0x1
 823 0003 25       		.uleb128 0x25
 824 0004 0E       		.uleb128 0xe
 825 0005 13       		.uleb128 0x13
 826 0006 0B       		.uleb128 0xb
 827 0007 03       		.uleb128 0x3
 828 0008 0E       		.uleb128 0xe
 829 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 27


 830 000a 0E       		.uleb128 0xe
 831 000b 55       		.uleb128 0x55
 832 000c 17       		.uleb128 0x17
 833 000d 11       		.uleb128 0x11
 834 000e 01       		.uleb128 0x1
 835 000f 10       		.uleb128 0x10
 836 0010 17       		.uleb128 0x17
 837 0011 00       		.byte	0
 838 0012 00       		.byte	0
 839 0013 02       		.uleb128 0x2
 840 0014 24       		.uleb128 0x24
 841 0015 00       		.byte	0
 842 0016 0B       		.uleb128 0xb
 843 0017 0B       		.uleb128 0xb
 844 0018 3E       		.uleb128 0x3e
 845 0019 0B       		.uleb128 0xb
 846 001a 03       		.uleb128 0x3
 847 001b 0E       		.uleb128 0xe
 848 001c 00       		.byte	0
 849 001d 00       		.byte	0
 850 001e 03       		.uleb128 0x3
 851 001f 24       		.uleb128 0x24
 852 0020 00       		.byte	0
 853 0021 0B       		.uleb128 0xb
 854 0022 0B       		.uleb128 0xb
 855 0023 3E       		.uleb128 0x3e
 856 0024 0B       		.uleb128 0xb
 857 0025 03       		.uleb128 0x3
 858 0026 08       		.uleb128 0x8
 859 0027 00       		.byte	0
 860 0028 00       		.byte	0
 861 0029 04       		.uleb128 0x4
 862 002a 16       		.uleb128 0x16
 863 002b 00       		.byte	0
 864 002c 03       		.uleb128 0x3
 865 002d 0E       		.uleb128 0xe
 866 002e 3A       		.uleb128 0x3a
 867 002f 0B       		.uleb128 0xb
 868 0030 3B       		.uleb128 0x3b
 869 0031 05       		.uleb128 0x5
 870 0032 49       		.uleb128 0x49
 871 0033 13       		.uleb128 0x13
 872 0034 00       		.byte	0
 873 0035 00       		.byte	0
 874 0036 05       		.uleb128 0x5
 875 0037 35       		.uleb128 0x35
 876 0038 00       		.byte	0
 877 0039 49       		.uleb128 0x49
 878 003a 13       		.uleb128 0x13
 879 003b 00       		.byte	0
 880 003c 00       		.byte	0
 881 003d 06       		.uleb128 0x6
 882 003e 13       		.uleb128 0x13
 883 003f 01       		.byte	0x1
 884 0040 0B       		.uleb128 0xb
 885 0041 0B       		.uleb128 0xb
 886 0042 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 28


 887 0043 0B       		.uleb128 0xb
 888 0044 3B       		.uleb128 0x3b
 889 0045 0B       		.uleb128 0xb
 890 0046 01       		.uleb128 0x1
 891 0047 13       		.uleb128 0x13
 892 0048 00       		.byte	0
 893 0049 00       		.byte	0
 894 004a 07       		.uleb128 0x7
 895 004b 0D       		.uleb128 0xd
 896 004c 00       		.byte	0
 897 004d 03       		.uleb128 0x3
 898 004e 0E       		.uleb128 0xe
 899 004f 3A       		.uleb128 0x3a
 900 0050 0B       		.uleb128 0xb
 901 0051 3B       		.uleb128 0x3b
 902 0052 0B       		.uleb128 0xb
 903 0053 49       		.uleb128 0x49
 904 0054 13       		.uleb128 0x13
 905 0055 38       		.uleb128 0x38
 906 0056 0B       		.uleb128 0xb
 907 0057 00       		.byte	0
 908 0058 00       		.byte	0
 909 0059 08       		.uleb128 0x8
 910 005a 01       		.uleb128 0x1
 911 005b 01       		.byte	0x1
 912 005c 49       		.uleb128 0x49
 913 005d 13       		.uleb128 0x13
 914 005e 01       		.uleb128 0x1
 915 005f 13       		.uleb128 0x13
 916 0060 00       		.byte	0
 917 0061 00       		.byte	0
 918 0062 09       		.uleb128 0x9
 919 0063 21       		.uleb128 0x21
 920 0064 00       		.byte	0
 921 0065 49       		.uleb128 0x49
 922 0066 13       		.uleb128 0x13
 923 0067 2F       		.uleb128 0x2f
 924 0068 0B       		.uleb128 0xb
 925 0069 00       		.byte	0
 926 006a 00       		.byte	0
 927 006b 0A       		.uleb128 0xa
 928 006c 16       		.uleb128 0x16
 929 006d 00       		.byte	0
 930 006e 03       		.uleb128 0x3
 931 006f 0E       		.uleb128 0xe
 932 0070 3A       		.uleb128 0x3a
 933 0071 0B       		.uleb128 0xb
 934 0072 3B       		.uleb128 0x3b
 935 0073 0B       		.uleb128 0xb
 936 0074 49       		.uleb128 0x49
 937 0075 13       		.uleb128 0x13
 938 0076 00       		.byte	0
 939 0077 00       		.byte	0
 940 0078 0B       		.uleb128 0xb
 941 0079 0D       		.uleb128 0xd
 942 007a 00       		.byte	0
 943 007b 03       		.uleb128 0x3
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 29


 944 007c 08       		.uleb128 0x8
 945 007d 3A       		.uleb128 0x3a
 946 007e 0B       		.uleb128 0xb
 947 007f 3B       		.uleb128 0x3b
 948 0080 0B       		.uleb128 0xb
 949 0081 49       		.uleb128 0x49
 950 0082 13       		.uleb128 0x13
 951 0083 38       		.uleb128 0x38
 952 0084 0B       		.uleb128 0xb
 953 0085 00       		.byte	0
 954 0086 00       		.byte	0
 955 0087 0C       		.uleb128 0xc
 956 0088 0F       		.uleb128 0xf
 957 0089 00       		.byte	0
 958 008a 0B       		.uleb128 0xb
 959 008b 0B       		.uleb128 0xb
 960 008c 49       		.uleb128 0x49
 961 008d 13       		.uleb128 0x13
 962 008e 00       		.byte	0
 963 008f 00       		.byte	0
 964 0090 0D       		.uleb128 0xd
 965 0091 2E       		.uleb128 0x2e
 966 0092 01       		.byte	0x1
 967 0093 3F       		.uleb128 0x3f
 968 0094 19       		.uleb128 0x19
 969 0095 03       		.uleb128 0x3
 970 0096 0E       		.uleb128 0xe
 971 0097 3A       		.uleb128 0x3a
 972 0098 0B       		.uleb128 0xb
 973 0099 3B       		.uleb128 0x3b
 974 009a 0B       		.uleb128 0xb
 975 009b 27       		.uleb128 0x27
 976 009c 19       		.uleb128 0x19
 977 009d 49       		.uleb128 0x49
 978 009e 13       		.uleb128 0x13
 979 009f 11       		.uleb128 0x11
 980 00a0 01       		.uleb128 0x1
 981 00a1 12       		.uleb128 0x12
 982 00a2 06       		.uleb128 0x6
 983 00a3 40       		.uleb128 0x40
 984 00a4 18       		.uleb128 0x18
 985 00a5 9742     		.uleb128 0x2117
 986 00a7 19       		.uleb128 0x19
 987 00a8 01       		.uleb128 0x1
 988 00a9 13       		.uleb128 0x13
 989 00aa 00       		.byte	0
 990 00ab 00       		.byte	0
 991 00ac 0E       		.uleb128 0xe
 992 00ad 05       		.uleb128 0x5
 993 00ae 00       		.byte	0
 994 00af 03       		.uleb128 0x3
 995 00b0 0E       		.uleb128 0xe
 996 00b1 3A       		.uleb128 0x3a
 997 00b2 0B       		.uleb128 0xb
 998 00b3 3B       		.uleb128 0x3b
 999 00b4 0B       		.uleb128 0xb
 1000 00b5 49       		.uleb128 0x49
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 30


 1001 00b6 13       		.uleb128 0x13
 1002 00b7 02       		.uleb128 0x2
 1003 00b8 17       		.uleb128 0x17
 1004 00b9 00       		.byte	0
 1005 00ba 00       		.byte	0
 1006 00bb 0F       		.uleb128 0xf
 1007 00bc 34       		.uleb128 0x34
 1008 00bd 00       		.byte	0
 1009 00be 03       		.uleb128 0x3
 1010 00bf 08       		.uleb128 0x8
 1011 00c0 3A       		.uleb128 0x3a
 1012 00c1 0B       		.uleb128 0xb
 1013 00c2 3B       		.uleb128 0x3b
 1014 00c3 0B       		.uleb128 0xb
 1015 00c4 49       		.uleb128 0x49
 1016 00c5 13       		.uleb128 0x13
 1017 00c6 02       		.uleb128 0x2
 1018 00c7 17       		.uleb128 0x17
 1019 00c8 00       		.byte	0
 1020 00c9 00       		.byte	0
 1021 00ca 10       		.uleb128 0x10
 1022 00cb 34       		.uleb128 0x34
 1023 00cc 00       		.byte	0
 1024 00cd 03       		.uleb128 0x3
 1025 00ce 0E       		.uleb128 0xe
 1026 00cf 3A       		.uleb128 0x3a
 1027 00d0 0B       		.uleb128 0xb
 1028 00d1 3B       		.uleb128 0x3b
 1029 00d2 0B       		.uleb128 0xb
 1030 00d3 49       		.uleb128 0x49
 1031 00d4 13       		.uleb128 0x13
 1032 00d5 02       		.uleb128 0x2
 1033 00d6 17       		.uleb128 0x17
 1034 00d7 00       		.byte	0
 1035 00d8 00       		.byte	0
 1036 00d9 11       		.uleb128 0x11
 1037 00da 898201   		.uleb128 0x4109
 1038 00dd 01       		.byte	0x1
 1039 00de 11       		.uleb128 0x11
 1040 00df 01       		.uleb128 0x1
 1041 00e0 31       		.uleb128 0x31
 1042 00e1 13       		.uleb128 0x13
 1043 00e2 01       		.uleb128 0x1
 1044 00e3 13       		.uleb128 0x13
 1045 00e4 00       		.byte	0
 1046 00e5 00       		.byte	0
 1047 00e6 12       		.uleb128 0x12
 1048 00e7 8A8201   		.uleb128 0x410a
 1049 00ea 00       		.byte	0
 1050 00eb 02       		.uleb128 0x2
 1051 00ec 18       		.uleb128 0x18
 1052 00ed 9142     		.uleb128 0x2111
 1053 00ef 18       		.uleb128 0x18
 1054 00f0 00       		.byte	0
 1055 00f1 00       		.byte	0
 1056 00f2 13       		.uleb128 0x13
 1057 00f3 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 31


 1058 00f6 01       		.byte	0x1
 1059 00f7 11       		.uleb128 0x11
 1060 00f8 01       		.uleb128 0x1
 1061 00f9 31       		.uleb128 0x31
 1062 00fa 13       		.uleb128 0x13
 1063 00fb 00       		.byte	0
 1064 00fc 00       		.byte	0
 1065 00fd 14       		.uleb128 0x14
 1066 00fe 26       		.uleb128 0x26
 1067 00ff 00       		.byte	0
 1068 0100 49       		.uleb128 0x49
 1069 0101 13       		.uleb128 0x13
 1070 0102 00       		.byte	0
 1071 0103 00       		.byte	0
 1072 0104 15       		.uleb128 0x15
 1073 0105 2E       		.uleb128 0x2e
 1074 0106 01       		.byte	0x1
 1075 0107 3F       		.uleb128 0x3f
 1076 0108 19       		.uleb128 0x19
 1077 0109 03       		.uleb128 0x3
 1078 010a 0E       		.uleb128 0xe
 1079 010b 3A       		.uleb128 0x3a
 1080 010c 0B       		.uleb128 0xb
 1081 010d 3B       		.uleb128 0x3b
 1082 010e 0B       		.uleb128 0xb
 1083 010f 27       		.uleb128 0x27
 1084 0110 19       		.uleb128 0x19
 1085 0111 11       		.uleb128 0x11
 1086 0112 01       		.uleb128 0x1
 1087 0113 12       		.uleb128 0x12
 1088 0114 06       		.uleb128 0x6
 1089 0115 40       		.uleb128 0x40
 1090 0116 18       		.uleb128 0x18
 1091 0117 9742     		.uleb128 0x2117
 1092 0119 19       		.uleb128 0x19
 1093 011a 01       		.uleb128 0x1
 1094 011b 13       		.uleb128 0x13
 1095 011c 00       		.byte	0
 1096 011d 00       		.byte	0
 1097 011e 16       		.uleb128 0x16
 1098 011f 2E       		.uleb128 0x2e
 1099 0120 01       		.byte	0x1
 1100 0121 3F       		.uleb128 0x3f
 1101 0122 19       		.uleb128 0x19
 1102 0123 03       		.uleb128 0x3
 1103 0124 0E       		.uleb128 0xe
 1104 0125 3A       		.uleb128 0x3a
 1105 0126 0B       		.uleb128 0xb
 1106 0127 3B       		.uleb128 0x3b
 1107 0128 05       		.uleb128 0x5
 1108 0129 27       		.uleb128 0x27
 1109 012a 19       		.uleb128 0x19
 1110 012b 11       		.uleb128 0x11
 1111 012c 01       		.uleb128 0x1
 1112 012d 12       		.uleb128 0x12
 1113 012e 06       		.uleb128 0x6
 1114 012f 40       		.uleb128 0x40
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 32


 1115 0130 18       		.uleb128 0x18
 1116 0131 9742     		.uleb128 0x2117
 1117 0133 19       		.uleb128 0x19
 1118 0134 01       		.uleb128 0x1
 1119 0135 13       		.uleb128 0x13
 1120 0136 00       		.byte	0
 1121 0137 00       		.byte	0
 1122 0138 17       		.uleb128 0x17
 1123 0139 05       		.uleb128 0x5
 1124 013a 00       		.byte	0
 1125 013b 03       		.uleb128 0x3
 1126 013c 0E       		.uleb128 0xe
 1127 013d 3A       		.uleb128 0x3a
 1128 013e 0B       		.uleb128 0xb
 1129 013f 3B       		.uleb128 0x3b
 1130 0140 05       		.uleb128 0x5
 1131 0141 49       		.uleb128 0x49
 1132 0142 13       		.uleb128 0x13
 1133 0143 02       		.uleb128 0x2
 1134 0144 17       		.uleb128 0x17
 1135 0145 00       		.byte	0
 1136 0146 00       		.byte	0
 1137 0147 18       		.uleb128 0x18
 1138 0148 2E       		.uleb128 0x2e
 1139 0149 00       		.byte	0
 1140 014a 3F       		.uleb128 0x3f
 1141 014b 19       		.uleb128 0x19
 1142 014c 3C       		.uleb128 0x3c
 1143 014d 19       		.uleb128 0x19
 1144 014e 6E       		.uleb128 0x6e
 1145 014f 0E       		.uleb128 0xe
 1146 0150 03       		.uleb128 0x3
 1147 0151 0E       		.uleb128 0xe
 1148 0152 3A       		.uleb128 0x3a
 1149 0153 0B       		.uleb128 0xb
 1150 0154 3B       		.uleb128 0x3b
 1151 0155 0B       		.uleb128 0xb
 1152 0156 00       		.byte	0
 1153 0157 00       		.byte	0
 1154 0158 00       		.byte	0
 1155              		.section	.debug_loc,"",%progbits
 1156              	.Ldebug_loc0:
 1157              	.LLST0:
 1158 0000 00000000 		.4byte	.LVL0
 1159 0004 0C000000 		.4byte	.LVL2
 1160 0008 0100     		.2byte	0x1
 1161 000a 50       		.byte	0x50
 1162 000b 0C000000 		.4byte	.LVL2
 1163 000f 3C010000 		.4byte	.LVL25
 1164 0013 0100     		.2byte	0x1
 1165 0015 54       		.byte	0x54
 1166 0016 3C010000 		.4byte	.LVL25
 1167 001a 54010000 		.4byte	.LFE34
 1168 001e 0400     		.2byte	0x4
 1169 0020 F3       		.byte	0xf3
 1170 0021 01       		.uleb128 0x1
 1171 0022 50       		.byte	0x50
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 33


 1172 0023 9F       		.byte	0x9f
 1173 0024 00000000 		.4byte	0
 1174 0028 00000000 		.4byte	0
 1175              	.LLST1:
 1176 002c 12000000 		.4byte	.LVL3
 1177 0030 1C010000 		.4byte	.LVL20
 1178 0034 0100     		.2byte	0x1
 1179 0036 55       		.byte	0x55
 1180 0037 1E010000 		.4byte	.LVL21
 1181 003b 20010000 		.4byte	.LVL22
 1182 003f 0100     		.2byte	0x1
 1183 0041 55       		.byte	0x55
 1184 0042 24010000 		.4byte	.LVL23
 1185 0046 36010000 		.4byte	.LVL24
 1186 004a 0100     		.2byte	0x1
 1187 004c 55       		.byte	0x55
 1188 004d 00000000 		.4byte	0
 1189 0051 00000000 		.4byte	0
 1190              	.LLST2:
 1191 0055 78000000 		.4byte	.LVL11
 1192 0059 7C000000 		.4byte	.LVL12
 1193 005d 0200     		.2byte	0x2
 1194 005f 30       		.byte	0x30
 1195 0060 9F       		.byte	0x9f
 1196 0061 7C000000 		.4byte	.LVL12
 1197 0065 D0000000 		.4byte	.LVL13
 1198 0069 0100     		.2byte	0x1
 1199 006b 53       		.byte	0x53
 1200 006c D2000000 		.4byte	.LVL14
 1201 0070 E1000000 		.4byte	.LVL15-1
 1202 0074 0100     		.2byte	0x1
 1203 0076 53       		.byte	0x53
 1204 0077 00000000 		.4byte	0
 1205 007b 00000000 		.4byte	0
 1206              	.LLST3:
 1207 007f 12000000 		.4byte	.LVL3
 1208 0083 14010000 		.4byte	.LVL18
 1209 0087 0100     		.2byte	0x1
 1210 0089 56       		.byte	0x56
 1211 008a 16010000 		.4byte	.LVL19
 1212 008e 20010000 		.4byte	.LVL22
 1213 0092 0100     		.2byte	0x1
 1214 0094 56       		.byte	0x56
 1215 0095 24010000 		.4byte	.LVL23
 1216 0099 36010000 		.4byte	.LVL24
 1217 009d 0100     		.2byte	0x1
 1218 009f 56       		.byte	0x56
 1219 00a0 00000000 		.4byte	0
 1220 00a4 00000000 		.4byte	0
 1221              	.LLST4:
 1222 00a8 0A000000 		.4byte	.LVL1
 1223 00ac 12000000 		.4byte	.LVL3
 1224 00b0 0200     		.2byte	0x2
 1225 00b2 30       		.byte	0x30
 1226 00b3 9F       		.byte	0x9f
 1227 00b4 12000000 		.4byte	.LVL3
 1228 00b8 3C010000 		.4byte	.LVL26
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 34


 1229 00bc 0100     		.2byte	0x1
 1230 00be 58       		.byte	0x58
 1231 00bf 00000000 		.4byte	0
 1232 00c3 00000000 		.4byte	0
 1233              	.LLST5:
 1234 00c7 0A000000 		.4byte	.LVL1
 1235 00cb 12000000 		.4byte	.LVL3
 1236 00cf 0200     		.2byte	0x2
 1237 00d1 31       		.byte	0x31
 1238 00d2 9F       		.byte	0x9f
 1239 00d3 12000000 		.4byte	.LVL3
 1240 00d7 7C000000 		.4byte	.LVL12
 1241 00db 0100     		.2byte	0x1
 1242 00dd 50       		.byte	0x50
 1243 00de 10010000 		.4byte	.LVL16
 1244 00e2 12010000 		.4byte	.LVL17
 1245 00e6 0200     		.2byte	0x2
 1246 00e8 30       		.byte	0x30
 1247 00e9 9F       		.byte	0x9f
 1248 00ea 12010000 		.4byte	.LVL17
 1249 00ee 54010000 		.4byte	.LFE34
 1250 00f2 0100     		.2byte	0x1
 1251 00f4 50       		.byte	0x50
 1252 00f5 00000000 		.4byte	0
 1253 00f9 00000000 		.4byte	0
 1254              	.LLST6:
 1255 00fd 1C000000 		.4byte	.LVL4
 1256 0101 2A000000 		.4byte	.LVL5
 1257 0105 0200     		.2byte	0x2
 1258 0107 30       		.byte	0x30
 1259 0108 9F       		.byte	0x9f
 1260 0109 2A000000 		.4byte	.LVL5
 1261 010d 5E000000 		.4byte	.LVL7
 1262 0111 0100     		.2byte	0x1
 1263 0113 57       		.byte	0x57
 1264 0114 60000000 		.4byte	.LVL8
 1265 0118 68000000 		.4byte	.LVL9
 1266 011c 0100     		.2byte	0x1
 1267 011e 57       		.byte	0x57
 1268 011f 6A000000 		.4byte	.LVL10
 1269 0123 78000000 		.4byte	.LVL11
 1270 0127 0100     		.2byte	0x1
 1271 0129 57       		.byte	0x57
 1272 012a 78000000 		.4byte	.LVL11
 1273 012e 12010000 		.4byte	.LVL17
 1274 0132 0100     		.2byte	0x1
 1275 0134 59       		.byte	0x59
 1276 0135 00000000 		.4byte	0
 1277 0139 00000000 		.4byte	0
 1278              	.LLST7:
 1279 013d 00000000 		.4byte	.LVL27
 1280 0141 06000000 		.4byte	.LVL28
 1281 0145 0100     		.2byte	0x1
 1282 0147 50       		.byte	0x50
 1283 0148 06000000 		.4byte	.LVL28
 1284 014c 20000000 		.4byte	.LFE35
 1285 0150 0400     		.2byte	0x4
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 35


 1286 0152 F3       		.byte	0xf3
 1287 0153 01       		.uleb128 0x1
 1288 0154 50       		.byte	0x50
 1289 0155 9F       		.byte	0x9f
 1290 0156 00000000 		.4byte	0
 1291 015a 00000000 		.4byte	0
 1292              	.LLST8:
 1293 015e 00000000 		.4byte	.LVL29
 1294 0162 02000000 		.4byte	.LVL30
 1295 0166 0100     		.2byte	0x1
 1296 0168 50       		.byte	0x50
 1297 0169 02000000 		.4byte	.LVL30
 1298 016d 1C000000 		.4byte	.LFE36
 1299 0171 0400     		.2byte	0x4
 1300 0173 F3       		.byte	0xf3
 1301 0174 01       		.uleb128 0x1
 1302 0175 50       		.byte	0x50
 1303 0176 9F       		.byte	0x9f
 1304 0177 00000000 		.4byte	0
 1305 017b 00000000 		.4byte	0
 1306              		.section	.debug_aranges,"",%progbits
 1307 0000 2C000000 		.4byte	0x2c
 1308 0004 0200     		.2byte	0x2
 1309 0006 00000000 		.4byte	.Ldebug_info0
 1310 000a 04       		.byte	0x4
 1311 000b 00       		.byte	0
 1312 000c 0000     		.2byte	0
 1313 000e 0000     		.2byte	0
 1314 0010 00000000 		.4byte	.LFB34
 1315 0014 54010000 		.4byte	.LFE34-.LFB34
 1316 0018 00000000 		.4byte	.LFB35
 1317 001c 20000000 		.4byte	.LFE35-.LFB35
 1318 0020 00000000 		.4byte	.LFB36
 1319 0024 1C000000 		.4byte	.LFE36-.LFB36
 1320 0028 00000000 		.4byte	0
 1321 002c 00000000 		.4byte	0
 1322              		.section	.debug_ranges,"",%progbits
 1323              	.Ldebug_ranges0:
 1324 0000 00000000 		.4byte	.LFB34
 1325 0004 54010000 		.4byte	.LFE34
 1326 0008 00000000 		.4byte	.LFB35
 1327 000c 20000000 		.4byte	.LFE35
 1328 0010 00000000 		.4byte	.LFB36
 1329 0014 1C000000 		.4byte	.LFE36
 1330 0018 00000000 		.4byte	0
 1331 001c 00000000 		.4byte	0
 1332              		.section	.debug_line,"",%progbits
 1333              	.Ldebug_line0:
 1334 0000 F8000000 		.section	.debug_str,"MS",%progbits,1
 1334      02005F00 
 1334      00000201 
 1334      FB0E0D00 
 1334      01010101 
 1335              	.LASF39:
 1336 0000 6D657373 		.ascii	"message\000"
 1336      61676500 
 1337              	.LASF35:
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 36


 1338 0008 73686966 		.ascii	"shift\000"
 1338      7400
 1339              	.LASF20:
 1340 000e 43414E5F 		.ascii	"CAN_DATA_BYTES\000"
 1340      44415441 
 1340      5F425954 
 1340      455300
 1341              	.LASF32:
 1342 001d 74786964 		.ascii	"txid\000"
 1342      00
 1343              	.LASF26:
 1344 0022 7278616D 		.ascii	"rxamr\000"
 1344      7200
 1345              	.LASF4:
 1346 0028 6C6F6E67 		.ascii	"long int\000"
 1346      20696E74 
 1346      00
 1347              	.LASF21:
 1348 0031 43414E5F 		.ascii	"CAN_REG_32\000"
 1348      5245475F 
 1348      333200
 1349              	.LASF43:
 1350 003c 72784D61 		.ascii	"rxMailbox\000"
 1350      696C626F 
 1350      7800
 1351              	.LASF31:
 1352 0046 7478636D 		.ascii	"txcmd\000"
 1352      6400
 1353              	.LASF12:
 1354 004c 646F7562 		.ascii	"double\000"
 1354      6C6500
 1355              	.LASF19:
 1356 0053 62797465 		.ascii	"byte\000"
 1356      00
 1357              	.LASF25:
 1358 0058 72786461 		.ascii	"rxdata\000"
 1358      746100
 1359              	.LASF29:
 1360 005f 72786163 		.ascii	"rxacrd\000"
 1360      726400
 1361              	.LASF11:
 1362 0066 666C6F61 		.ascii	"float\000"
 1362      7400
 1363              	.LASF22:
 1364 006c 43414E5F 		.ascii	"CAN_TX_MSG\000"
 1364      54585F4D 
 1364      534700
 1365              	.LASF49:
 1366 0077 43414E5F 		.ascii	"CAN_SendMsg\000"
 1366      53656E64 
 1366      4D736700 
 1367              	.LASF1:
 1368 0083 756E7369 		.ascii	"unsigned char\000"
 1368      676E6564 
 1368      20636861 
 1368      7200
 1369              	.LASF24:
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 37


 1370 0091 72786964 		.ascii	"rxid\000"
 1370      00
 1371              	.LASF36:
 1372 0096 72657472 		.ascii	"retry\000"
 1372      7900
 1373              	.LASF14:
 1374 009c 72656738 		.ascii	"reg8\000"
 1374      00
 1375              	.LASF23:
 1376 00a1 7278636D 		.ascii	"rxcmd\000"
 1376      6400
 1377              	.LASF5:
 1378 00a7 6C6F6E67 		.ascii	"long unsigned int\000"
 1378      20756E73 
 1378      69676E65 
 1378      6420696E 
 1378      7400
 1379              	.LASF3:
 1380 00b9 73686F72 		.ascii	"short unsigned int\000"
 1380      7420756E 
 1380      7369676E 
 1380      65642069 
 1380      6E7400
 1381              	.LASF18:
 1382 00cc 43414E5F 		.ascii	"CAN_DATA_BYTES_MSG\000"
 1382      44415441 
 1382      5F425954 
 1382      45535F4D 
 1382      534700
 1383              	.LASF34:
 1384 00df 43414E5F 		.ascii	"CAN_TX_STRUCT\000"
 1384      54585F53 
 1384      54525543 
 1384      5400
 1385              	.LASF40:
 1386 00ed 62756666 		.ascii	"bufferId\000"
 1386      65724964 
 1386      00
 1387              	.LASF38:
 1388 00f6 72656754 		.ascii	"regTemp\000"
 1388      656D7000 
 1389              	.LASF2:
 1390 00fe 73686F72 		.ascii	"short int\000"
 1390      7420696E 
 1390      7400
 1391              	.LASF47:
 1392 0108 47656E65 		.ascii	"Generated_Source\\PSoC4\\CAN_TX_RX_func.c\000"
 1392      72617465 
 1392      645F536F 
 1392      75726365 
 1392      5C50536F 
 1393              	.LASF10:
 1394 0130 75696E74 		.ascii	"uint32\000"
 1394      333200
 1395              	.LASF8:
 1396 0137 756E7369 		.ascii	"unsigned int\000"
 1396      676E6564 
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 38


 1396      20696E74 
 1396      00
 1397              	.LASF7:
 1398 0144 6C6F6E67 		.ascii	"long long unsigned int\000"
 1398      206C6F6E 
 1398      6720756E 
 1398      7369676E 
 1398      65642069 
 1399              	.LASF37:
 1400 015b 72657375 		.ascii	"result\000"
 1400      6C7400
 1401              	.LASF41:
 1402 0162 43414E5F 		.ascii	"CAN_TxCancel\000"
 1402      54784361 
 1402      6E63656C 
 1402      00
 1403              	.LASF30:
 1404 016f 43414E5F 		.ascii	"CAN_RX_STRUCT\000"
 1404      52585F53 
 1404      54525543 
 1404      5400
 1405              	.LASF46:
 1406 017d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1406      43313120 
 1406      352E342E 
 1406      31203230 
 1406      31363036 
 1407 01b0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1407      20726576 
 1407      6973696F 
 1407      6E203233 
 1407      37373135 
 1408 01e3 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1408      66756E63 
 1408      74696F6E 
 1408      2D736563 
 1408      74696F6E 
 1409              	.LASF17:
 1410 020b 73697A65 		.ascii	"sizetype\000"
 1410      74797065 
 1410      00
 1411              	.LASF28:
 1412 0214 7278616D 		.ascii	"rxamrd\000"
 1412      726400
 1413              	.LASF6:
 1414 021b 6C6F6E67 		.ascii	"long long int\000"
 1414      206C6F6E 
 1414      6720696E 
 1414      7400
 1415              	.LASF13:
 1416 0229 63686172 		.ascii	"char\000"
 1416      00
 1417              	.LASF44:
 1418 022e 4379496E 		.ascii	"CyIntDisable\000"
 1418      74446973 
 1418      61626C65 
 1418      00
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccRw2gri.s 			page 39


 1419              	.LASF27:
 1420 023b 72786163 		.ascii	"rxacr\000"
 1420      7200
 1421              	.LASF9:
 1422 0241 75696E74 		.ascii	"uint8\000"
 1422      3800
 1423              	.LASF15:
 1424 0247 72656733 		.ascii	"reg32\000"
 1424      3200
 1425              	.LASF16:
 1426 024d 6C6F6E67 		.ascii	"long double\000"
 1426      20646F75 
 1426      626C6500 
 1427              	.LASF45:
 1428 0259 4379496E 		.ascii	"CyIntEnable\000"
 1428      74456E61 
 1428      626C6500 
 1429              	.LASF0:
 1430 0265 7369676E 		.ascii	"signed char\000"
 1430      65642063 
 1430      68617200 
 1431              	.LASF33:
 1432 0271 74786461 		.ascii	"txdata\000"
 1432      746100
 1433              	.LASF48:
 1434 0278 433A5C55 		.ascii	"C:\\Users\\Austcha\\Documents\\Husky Robotics\\Moto"
 1434      73657273 
 1434      5C417573 
 1434      74636861 
 1434      5C446F63 
 1435 02a6 7220426F 		.ascii	"r Boards\\Rev3\\Motor-Unit-Firmware-A-2019-2020\\Mo"
 1435      61726473 
 1435      5C526576 
 1435      335C4D6F 
 1435      746F722D 
 1436 02d6 746F7220 		.ascii	"tor Unit\\Motor_Board_Rev3_CAN_Send.cydsn\000"
 1436      556E6974 
 1436      5C4D6F74 
 1436      6F725F42 
 1436      6F617264 
 1437              	.LASF42:
 1438 02ff 43414E5F 		.ascii	"CAN_ReceiveMsg\000"
 1438      52656365 
 1438      6976654D 
 1438      736700
 1439              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
