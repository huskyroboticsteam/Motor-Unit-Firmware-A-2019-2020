ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_Seq_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_SAR_Seq_1_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_SAR_Seq_1_Init, %function
  25              	ADC_SAR_Seq_1_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 2


  31:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u, 0x00000000u };
  34:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 3


  88:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  90:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 4


 137:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 1120     		movs	r0, #17
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  41              		.loc 1 173 0
  42 000a 4349     		ldr	r1, .L12
  43 000c 1120     		movs	r0, #17
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0322     		movs	r2, #3
  48 0014 414B     		ldr	r3, .L12+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 5


 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 414B     		ldr	r3, .L12+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L10
  56 0020 4049     		ldr	r1, .L12+12
  57 0022 00E0     		b	.L2
  58              	.L10:
  59 0024 4049     		ldr	r1, .L12+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 414A     		ldr	r2, .L12+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 404A     		ldr	r2, .L12+24
  68 0030 404B     		ldr	r3, .L12+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 404A     		ldr	r2, .L12+32
  72 0036 414B     		ldr	r3, .L12+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 404A     		ldr	r2, .L12+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 404A     		ldr	r2, .L12+44
  80 0042 4149     		ldr	r1, .L12+48
  81 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 4149     		ldr	r1, .L12+52
  84 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  85              		.loc 1 190 0 discriminator 4
  86 004a 414A     		ldr	r2, .L12+56
  87 004c 1168     		ldr	r1, [r2]
  88 004e 8020     		movs	r0, #128
  89 0050 4002     		lsls	r0, r0, #9
  90 0052 0143     		orrs	r1, r0
  91 0054 1160     		str	r1, [r2]
 191:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 6


 193:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  92              		.loc 1 193 0 discriminator 4
  93 0056 3F49     		ldr	r1, .L12+60
  94 0058 0A68     		ldr	r2, [r1]
  95 005a 0243     		orrs	r2, r0
  96 005c 0A60     		str	r2, [r1]
 194:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  97              		.loc 1 197 0 discriminator 4
  98 005e 3E4A     		ldr	r2, .L12+64
  99 0060 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
 100              		.loc 1 198 0 discriminator 4
 101 0062 3E4A     		ldr	r2, .L12+68
 102 0064 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
 103              		.loc 1 199 0 discriminator 4
 104 0066 0122     		movs	r2, #1
 105 0068 3D4B     		ldr	r3, .L12+72
 106 006a 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 107              		.loc 1 206 0 discriminator 4
 108 006c 3D4A     		ldr	r2, .L12+76
 109 006e 1168     		ldr	r1, [r2]
 110              	.LVL2:
 111 0070 3D4B     		ldr	r3, .L12+80
 112 0072 0B40     		ands	r3, r1
 207:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 208:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 214:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 113              		.loc 1 221 0 discriminator 4
 114 0074 8021     		movs	r1, #128
 115              	.LVL3:
 116 0076 8905     		lsls	r1, r1, #22
 117 0078 0B43     		orrs	r3, r1
 118              	.LVL4:
 222:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 7


 223:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 119              		.loc 1 226 0 discriminator 4
 120 007a 1360     		str	r3, [r2]
 121              	.LVL5:
 227:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 122              		.loc 1 232 0 discriminator 4
 123 007c 0022     		movs	r2, #0
 124 007e 48E0     		b	.L3
 125              	.LVL6:
 126              	.L9:
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 127              		.loc 1 234 0
 128 0080 3A48     		ldr	r0, .L12+84
 129 0082 9100     		lsls	r1, r2, #2
 130 0084 0C58     		ldr	r4, [r1, r0]
 131 0086 DC23     		movs	r3, #220
 132 0088 9B01     		lsls	r3, r3, #6
 133 008a 2340     		ands	r3, r4
 134              	.LVL7:
 235:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 135              		.loc 1 236 0
 136 008c 8018     		adds	r0, r0, r2
 137 008e 007A     		ldrb	r0, [r0, #8]
 138 0090 0343     		orrs	r3, r0
 139              	.LVL8:
 237:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 140              		.loc 1 253 0
 141 0092 3748     		ldr	r0, .L12+88
 142 0094 8446     		mov	ip, r0
 143 0096 6144     		add	r1, r1, ip
 144 0098 0B60     		str	r3, [r1]
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 8


 254:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 145              		.loc 1 255 0
 146 009a E307     		lsls	r3, r4, #31
 147 009c 07D5     		bpl	.L4
 148              	.LVL9:
 256:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 149              		.loc 1 257 0
 150 009e 2E48     		ldr	r0, .L12+64
 151 00a0 0168     		ldr	r1, [r0]
 152              	.LVL10:
 153 00a2 0123     		movs	r3, #1
 154 00a4 9340     		lsls	r3, r3, r2
 155 00a6 1B04     		lsls	r3, r3, #16
 156 00a8 1B0C     		lsrs	r3, r3, #16
 157 00aa 0B43     		orrs	r3, r1
 158 00ac 0360     		str	r3, [r0]
 159              	.LVL11:
 160              	.L4:
 258:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 161              		.loc 1 260 0
 162 00ae 9300     		lsls	r3, r2, #2
 163 00b0 2E49     		ldr	r1, .L12+84
 164              	.LVL12:
 165 00b2 5B58     		ldr	r3, [r3, r1]
 166 00b4 9B07     		lsls	r3, r3, #30
 167 00b6 07D5     		bpl	.L5
 261:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 168              		.loc 1 262 0
 169 00b8 2848     		ldr	r0, .L12+68
 170 00ba 0168     		ldr	r1, [r0]
 171              	.LVL13:
 172 00bc 0123     		movs	r3, #1
 173 00be 9340     		lsls	r3, r3, r2
 174 00c0 1B04     		lsls	r3, r3, #16
 175 00c2 1B0C     		lsrs	r3, r3, #16
 176 00c4 0B43     		orrs	r3, r1
 177 00c6 0360     		str	r3, [r0]
 178              	.L5:
 263:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 269:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 9


 277:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 179              		.loc 1 282 0
 180 00c8 9300     		lsls	r3, r2, #2
 181 00ca 2849     		ldr	r1, .L12+84
 182              	.LVL14:
 183 00cc 5958     		ldr	r1, [r3, r1]
 184              	.LVL15:
 185 00ce 8B05     		lsls	r3, r1, #22
 186 00d0 02D5     		bpl	.L11
 283:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 187              		.loc 1 284 0
 188 00d2 8020     		movs	r0, #128
 189 00d4 4000     		lsls	r0, r0, #1
 190 00d6 01E0     		b	.L6
 191              	.L11:
 285:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 192              		.loc 1 288 0
 193 00d8 8020     		movs	r0, #128
 194 00da 4001     		lsls	r0, r0, #5
 195              	.L6:
 196              	.LVL16:
 289:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 197              		.loc 1 291 0
 198 00dc CB05     		lsls	r3, r1, #23
 199 00de 04D4     		bmi	.L7
 292:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 200              		.loc 1 298 0
 201 00e0 5300     		lsls	r3, r2, #1
 202 00e2 0024     		movs	r4, #0
 203              	.LVL17:
 204 00e4 2349     		ldr	r1, .L12+92
 205 00e6 5C52     		strh	r4, [r3, r1]
 206 00e8 03E0     		b	.L8
 207              	.LVL18:
 208              	.L7:
 299:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 10


 304:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 209              		.loc 1 307 0
 210 00ea 5300     		lsls	r3, r2, #1
 211 00ec 0024     		movs	r4, #0
 212              	.LVL19:
 213 00ee 2149     		ldr	r1, .L12+92
 214 00f0 5C52     		strh	r4, [r3, r1]
 215              	.L8:
 308:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 216              		.loc 1 311 0 discriminator 2
 217 00f2 214B     		ldr	r3, .L12+96
 218 00f4 4343     		muls	r3, r0
 219 00f6 8021     		movs	r1, #128
 220 00f8 C900     		lsls	r1, r1, #3
 221 00fa 8C46     		mov	ip, r1
 222 00fc 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 223              		.loc 1 312 0 discriminator 2
 224 00fe D917     		asrs	r1, r3, #31
 225 0100 4905     		lsls	r1, r1, #21
 226 0102 490D     		lsrs	r1, r1, #21
 227 0104 CB18     		adds	r3, r1, r3
 228 0106 DB12     		asrs	r3, r3, #11
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 229              		.loc 1 311 0 discriminator 2
 230 0108 1BB2     		sxth	r3, r3
 231 010a 9000     		lsls	r0, r2, #2
 232              	.LVL20:
 233 010c 1B49     		ldr	r1, .L12+100
 234 010e 4350     		str	r3, [r0, r1]
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 235              		.loc 1 232 0 discriminator 2
 236 0110 0132     		adds	r2, r2, #1
 237              	.LVL21:
 238              	.L3:
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 239              		.loc 1 232 0 is_stmt 0 discriminator 1
 240 0112 012A     		cmp	r2, #1
 241 0114 B4D9     		bls	.L9
 313:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 242              		.loc 1 314 0 is_stmt 1
 243              		@ sp needed
 244 0116 10BD     		pop	{r4, pc}
 245              	.L13:
 246              		.align	2
 247              	.L12:
 248 0118 00000000 		.word	ADC_SAR_Seq_1_ISR
 249 011c 20003A40 		.word	1077542944
 250 0120 80033A40 		.word	1077543808
 251 0124 C0201010 		.word	269492416
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 11


 252 0128 C0200010 		.word	268443840
 253 012c 00003A40 		.word	1077542912
 254 0130 8C000080 		.word	-2147483508
 255 0134 04003A40 		.word	1077542916
 256 0138 0000FF07 		.word	134152192
 257 013c 18003A40 		.word	1077542936
 258 0140 1C003A40 		.word	1077542940
 259 0144 02000200 		.word	131074
 260 0148 10003A40 		.word	1077542928
 261 014c 14003A40 		.word	1077542932
 262 0150 00033A40 		.word	1077543680
 263 0154 40033A40 		.word	1077543744
 264 0158 28023A40 		.word	1077543464
 265 015c 38023A40 		.word	1077543480
 266 0160 18023A40 		.word	1077543448
 267 0164 30003A40 		.word	1077542960
 268 0168 FEFFFFDF 		.word	-536870914
 269 016c 00000000 		.word	.LANCHOR0
 270 0170 80003A40 		.word	1077543040
 271 0174 00000000 		.word	ADC_SAR_Seq_1_offset
 272 0178 10270000 		.word	10000
 273 017c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 274              		.cfi_endproc
 275              	.LFE2:
 276              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 277              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 278              		.align	2
 279              		.global	ADC_SAR_Seq_1_Enable
 280              		.code	16
 281              		.thumb_func
 282              		.type	ADC_SAR_Seq_1_Enable, %function
 283              	ADC_SAR_Seq_1_Enable:
 284              	.LFB3:
 315:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 325:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 285              		.loc 1 331 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 10B5     		push	{r4, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 4, -8
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 12


 292              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 293              		.loc 1 332 0
 294 0002 094B     		ldr	r3, .L17
 295 0004 1B68     		ldr	r3, [r3]
 296 0006 002B     		cmp	r3, #0
 297 0008 0CDB     		blt	.L14
 298              	.L16:
 333:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 299              		.loc 1 336 0 discriminator 1
 300 000a 084B     		ldr	r3, .L17+4
 301 000c 1B68     		ldr	r3, [r3]
 302 000e 002B     		cmp	r3, #0
 303 0010 FBDB     		blt	.L16
 337:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 304              		.loc 1 342 0
 305 0012 054A     		ldr	r2, .L17
 306 0014 1368     		ldr	r3, [r2]
 307 0016 8021     		movs	r1, #128
 308 0018 0906     		lsls	r1, r1, #24
 309 001a 0B43     		orrs	r3, r1
 310 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 311              		.loc 1 345 0
 312 001e 0A20     		movs	r0, #10
 313 0020 FFF7FEFF 		bl	CyDelayUs
 314              	.LVL22:
 315              	.L14:
 346:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 316              		.loc 1 347 0
 317              		@ sp needed
 318 0024 10BD     		pop	{r4, pc}
 319              	.L18:
 320 0026 C046     		.align	2
 321              	.L17:
 322 0028 00003A40 		.word	1077542912
 323 002c 08023A40 		.word	1077543432
 324              		.cfi_endproc
 325              	.LFE3:
 326              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 327              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 328              		.align	2
 329              		.global	ADC_SAR_Seq_1_Start
 330              		.code	16
 331              		.thumb_func
 332              		.type	ADC_SAR_Seq_1_Start, %function
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 13


 333              	ADC_SAR_Seq_1_Start:
 334              	.LFB1:
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
 335              		.loc 1 64 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 10B5     		push	{r4, lr}
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 4, -8
 342              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 343              		.loc 1 66 0
 344 0002 064B     		ldr	r3, .L21
 345 0004 1B78     		ldrb	r3, [r3]
 346 0006 002B     		cmp	r3, #0
 347 0008 04D1     		bne	.L20
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 348              		.loc 1 68 0
 349 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 350              	.LVL23:
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 351              		.loc 1 69 0
 352 000e 0122     		movs	r2, #1
 353 0010 024B     		ldr	r3, .L21
 354 0012 1A70     		strb	r2, [r3]
 355              	.L20:
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 356              		.loc 1 71 0
 357 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 358              	.LVL24:
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 359              		.loc 1 72 0
 360              		@ sp needed
 361 0018 10BD     		pop	{r4, pc}
 362              	.L22:
 363 001a C046     		.align	2
 364              	.L21:
 365 001c 00000000 		.word	.LANCHOR1
 366              		.cfi_endproc
 367              	.LFE1:
 368              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 369              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 370              		.align	2
 371              		.global	ADC_SAR_Seq_1_Stop
 372              		.code	16
 373              		.thumb_func
 374              		.type	ADC_SAR_Seq_1_Stop, %function
 375              	ADC_SAR_Seq_1_Stop:
 376              	.LFB4:
 348:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 14


 355:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 377              		.loc 1 366 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 382              		.loc 1 367 0
 383 0000 024A     		ldr	r2, .L24
 384 0002 1368     		ldr	r3, [r2]
 385 0004 5B00     		lsls	r3, r3, #1
 386 0006 5B08     		lsrs	r3, r3, #1
 387 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 388              		.loc 1 368 0
 389              		@ sp needed
 390 000a 7047     		bx	lr
 391              	.L25:
 392              		.align	2
 393              	.L24:
 394 000c 00003A40 		.word	1077542912
 395              		.cfi_endproc
 396              	.LFE4:
 397              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 398              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 399              		.align	2
 400              		.global	ADC_SAR_Seq_1_StartConvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	ADC_SAR_Seq_1_StartConvert, %function
 404              	ADC_SAR_Seq_1_StartConvert:
 405              	.LFB5:
 369:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 15


 383:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 406              		.loc 1 392 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 411              		.loc 1 394 0
 412 0000 034A     		ldr	r2, .L27
 413 0002 1368     		ldr	r3, [r2]
 414 0004 8021     		movs	r1, #128
 415 0006 4902     		lsls	r1, r1, #9
 416 0008 0B43     		orrs	r3, r1
 417 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 418              		.loc 1 399 0
 419              		@ sp needed
 420 000c 7047     		bx	lr
 421              	.L28:
 422 000e C046     		.align	2
 423              	.L27:
 424 0010 04003A40 		.word	1077542916
 425              		.cfi_endproc
 426              	.LFE5:
 427              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 428              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 429              		.align	2
 430              		.global	ADC_SAR_Seq_1_StopConvert
 431              		.code	16
 432              		.thumb_func
 433              		.type	ADC_SAR_Seq_1_StopConvert, %function
 434              	ADC_SAR_Seq_1_StopConvert:
 435              	.LFB6:
 400:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 16


 410:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 436              		.loc 1 417 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 441              		.loc 1 419 0
 442 0000 024A     		ldr	r2, .L30
 443 0002 1168     		ldr	r1, [r2]
 444 0004 024B     		ldr	r3, .L30+4
 445 0006 0B40     		ands	r3, r1
 446 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 447              		.loc 1 421 0
 448              		@ sp needed
 449 000a 7047     		bx	lr
 450              	.L31:
 451              		.align	2
 452              	.L30:
 453 000c 04003A40 		.word	1077542916
 454 0010 FFFFFEFF 		.word	-65537
 455              		.cfi_endproc
 456              	.LFE6:
 457              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 458              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 459              		.align	2
 460              		.global	ADC_SAR_Seq_1_IsEndConversion
 461              		.code	16
 462              		.thumb_func
 463              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 464              	ADC_SAR_Seq_1_IsEndConversion:
 465              	.LFB7:
 422:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 17


 437:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 466              		.loc 1 451 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL25:
 472 0000 0200     		movs	r2, r0
 473              	.LVL26:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 474              		.loc 1 454 0
 475 0002 8307     		lsls	r3, r0, #30
 476 0004 0CD0     		beq	.L36
 477              	.LVL27:
 478              	.L35:
 455:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 479              		.loc 1 458 0 discriminator 2
 480 0006 074B     		ldr	r3, .L37
 481 0008 1B68     		ldr	r3, [r3]
 482 000a 0120     		movs	r0, #1
 483 000c 1840     		ands	r0, r3
 484              	.LVL28:
 459:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 485              		.loc 1 459 0 discriminator 2
 486 000e 01D1     		bne	.L34
 487              		.loc 1 459 0 is_stmt 0 discriminator 1
 488 0010 9307     		lsls	r3, r2, #30
 489 0012 F8D4     		bmi	.L35
 490              	.L34:
 460:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 491              		.loc 1 461 0 is_stmt 1
 492 0014 0028     		cmp	r0, #0
 493 0016 04D0     		beq	.L33
 462:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 494              		.loc 1 464 0
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 18


 495 0018 0122     		movs	r2, #1
 496              	.LVL29:
 497 001a 024B     		ldr	r3, .L37
 498 001c 1A60     		str	r2, [r3]
 499 001e 00E0     		b	.L33
 500              	.LVL30:
 501              	.L36:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 502              		.loc 1 452 0
 503 0020 0020     		movs	r0, #0
 504              	.LVL31:
 505              	.L33:
 465:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 506              		.loc 1 486 0
 507              		@ sp needed
 508 0022 7047     		bx	lr
 509              	.L38:
 510              		.align	2
 511              	.L37:
 512 0024 10023A40 		.word	1077543440
 513              		.cfi_endproc
 514              	.LFE7:
 515              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 516              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 517              		.align	2
 518              		.global	ADC_SAR_Seq_1_GetResult16
 519              		.code	16
 520              		.thumb_func
 521              		.type	ADC_SAR_Seq_1_GetResult16, %function
 522              	ADC_SAR_Seq_1_GetResult16:
 523              	.LFB8:
 487:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 19


 492:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 524              		.loc 1 505 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              	.LVL32:
 529 0000 10B5     		push	{r4, lr}
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 4, -8
 532              		.cfi_offset 14, -4
 533 0002 0400     		movs	r4, r0
 506:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 534              		.loc 1 509 0
 535 0004 0128     		cmp	r0, #1
 536 0006 02D9     		bls	.L40
 537              		.loc 1 509 0 is_stmt 0 discriminator 1
 538 0008 0020     		movs	r0, #0
 539              	.LVL33:
 540 000a FFF7FEFF 		bl	CyHalt
 541              	.LVL34:
 542              	.L40:
 510:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 543              		.loc 1 511 0 is_stmt 1
 544 000e 012C     		cmp	r4, #1
 545 0010 07D8     		bhi	.L42
 512:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 546              		.loc 1 513 0
 547 0012 A400     		lsls	r4, r4, #2
 548              	.LVL35:
 549 0014 044B     		ldr	r3, .L43
 550 0016 9C46     		mov	ip, r3
 551 0018 6444     		add	r4, r4, ip
 552 001a 2068     		ldr	r0, [r4]
 553 001c 0004     		lsls	r0, r0, #16
 554 001e 000C     		lsrs	r0, r0, #16
 555              	.LVL36:
 556 0020 00E0     		b	.L41
 557              	.LVL37:
 558              	.L42:
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 20


 514:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 559              		.loc 1 521 0
 560 0022 0020     		movs	r0, #0
 561              	.LVL38:
 562              	.L41:
 522:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 563              		.loc 1 525 0
 564 0024 00B2     		sxth	r0, r0
 565              	.LVL39:
 526:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 566              		.loc 1 526 0
 567              		@ sp needed
 568 0026 10BD     		pop	{r4, pc}
 569              	.L44:
 570              		.align	2
 571              	.L43:
 572 0028 80013A40 		.word	1077543296
 573              		.cfi_endproc
 574              	.LFE8:
 575              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 576              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 577              		.align	2
 578              		.global	ADC_SAR_Seq_1_SetChanMask
 579              		.code	16
 580              		.thumb_func
 581              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 582              	ADC_SAR_Seq_1_SetChanMask:
 583              	.LFB9:
 527:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 533:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 21


 546:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 584              		.loc 1 550 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL40:
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 590              		.loc 1 551 0
 591 0000 0323     		movs	r3, #3
 592 0002 1840     		ands	r0, r3
 593              	.LVL41:
 594 0004 014B     		ldr	r3, .L46
 595 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 596              		.loc 1 552 0
 597              		@ sp needed
 598 0008 7047     		bx	lr
 599              	.L47:
 600 000a C046     		.align	2
 601              	.L46:
 602 000c 20003A40 		.word	1077542944
 603              		.cfi_endproc
 604              	.LFE9:
 605              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 606              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 607              		.align	2
 608              		.global	ADC_SAR_Seq_1_SetLowLimit
 609              		.code	16
 610              		.thumb_func
 611              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 612              	ADC_SAR_Seq_1_SetLowLimit:
 613              	.LFB10:
 553:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 22


 573:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 614              		.loc 1 594 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619              	.LVL42:
 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 620              		.loc 1 595 0
 621 0000 054A     		ldr	r2, .L49
 622 0002 1368     		ldr	r3, [r2]
 623 0004 1B0C     		lsrs	r3, r3, #16
 624 0006 1B04     		lsls	r3, r3, #16
 625 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 626              		.loc 1 596 0
 627 000a 1368     		ldr	r3, [r2]
 628 000c 0004     		lsls	r0, r0, #16
 629              	.LVL43:
 630 000e 000C     		lsrs	r0, r0, #16
 631 0010 1843     		orrs	r0, r3
 632 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 633              		.loc 1 597 0
 634              		@ sp needed
 635 0014 7047     		bx	lr
 636              	.L50:
 637 0016 C046     		.align	2
 638              	.L49:
 639 0018 18003A40 		.word	1077542936
 640              		.cfi_endproc
 641              	.LFE10:
 642              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 643              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 644              		.align	2
 645              		.global	ADC_SAR_Seq_1_SetHighLimit
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 23


 646              		.code	16
 647              		.thumb_func
 648              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 649              	ADC_SAR_Seq_1_SetHighLimit:
 650              	.LFB11:
 598:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 651              		.loc 1 615 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 656              	.LVL44:
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 657              		.loc 1 616 0
 658 0000 044A     		ldr	r2, .L52
 659 0002 1368     		ldr	r3, [r2]
 660 0004 1B04     		lsls	r3, r3, #16
 661 0006 1B0C     		lsrs	r3, r3, #16
 662 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 663              		.loc 1 617 0
 664 000a 1368     		ldr	r3, [r2]
 665 000c 0004     		lsls	r0, r0, #16
 666              	.LVL45:
 667 000e 1843     		orrs	r0, r3
 668 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 669              		.loc 1 618 0
 670              		@ sp needed
 671 0012 7047     		bx	lr
 672              	.L53:
 673              		.align	2
 674              	.L52:
 675 0014 18003A40 		.word	1077542936
 676              		.cfi_endproc
 677              	.LFE11:
 678              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 679              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 680              		.align	2
 681              		.global	ADC_SAR_Seq_1_SetLimitMask
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 24


 682              		.code	16
 683              		.thumb_func
 684              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 685              	ADC_SAR_Seq_1_SetLimitMask:
 686              	.LFB12:
 619:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 687              		.loc 1 639 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692              	.LVL46:
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 693              		.loc 1 640 0
 694 0000 0323     		movs	r3, #3
 695 0002 1840     		ands	r0, r3
 696              	.LVL47:
 697 0004 014B     		ldr	r3, .L55
 698 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 699              		.loc 1 641 0
 700              		@ sp needed
 701 0008 7047     		bx	lr
 702              	.L56:
 703 000a C046     		.align	2
 704              	.L55:
 705 000c 38023A40 		.word	1077543480
 706              		.cfi_endproc
 707              	.LFE12:
 708              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 709              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 710              		.align	2
 711              		.global	ADC_SAR_Seq_1_SetSatMask
 712              		.code	16
 713              		.thumb_func
 714              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 715              	ADC_SAR_Seq_1_SetSatMask:
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 25


 716              	.LFB13:
 642:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 717              		.loc 1 662 0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 722              	.LVL48:
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 723              		.loc 1 663 0
 724 0000 0323     		movs	r3, #3
 725 0002 1840     		ands	r0, r3
 726              	.LVL49:
 727 0004 014B     		ldr	r3, .L58
 728 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 729              		.loc 1 664 0
 730              		@ sp needed
 731 0008 7047     		bx	lr
 732              	.L59:
 733 000a C046     		.align	2
 734              	.L58:
 735 000c 28023A40 		.word	1077543464
 736              		.cfi_endproc
 737              	.LFE13:
 738              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 739              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 740              		.align	2
 741              		.global	ADC_SAR_Seq_1_SetOffset
 742              		.code	16
 743              		.thumb_func
 744              		.type	ADC_SAR_Seq_1_SetOffset, %function
 745              	ADC_SAR_Seq_1_SetOffset:
 746              	.LFB14:
 665:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 26


 668:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 747              		.loc 1 690 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              	.LVL50:
 752 0000 70B5     		push	{r4, r5, r6, lr}
 753              		.cfi_def_cfa_offset 16
 754              		.cfi_offset 4, -16
 755              		.cfi_offset 5, -12
 756              		.cfi_offset 6, -8
 757              		.cfi_offset 14, -4
 758 0002 0400     		movs	r4, r0
 759 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 760              		.loc 1 692 0
 761 0006 0128     		cmp	r0, #1
 762 0008 02D9     		bls	.L61
 763              		.loc 1 692 0 is_stmt 0 discriminator 1
 764 000a 0020     		movs	r0, #0
 765              	.LVL51:
 766 000c FFF7FEFF 		bl	CyHalt
 767              	.LVL52:
 768              	.L61:
 693:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 769              		.loc 1 694 0 is_stmt 1
 770 0010 6400     		lsls	r4, r4, #1
 771              	.LVL53:
 772 0012 014B     		ldr	r3, .L62
 773 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 774              		.loc 1 695 0
 775              		@ sp needed
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 27


 776 0016 70BD     		pop	{r4, r5, r6, pc}
 777              	.L63:
 778              		.align	2
 779              	.L62:
 780 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 781              		.cfi_endproc
 782              	.LFE14:
 783              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 784              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 785              		.align	2
 786              		.global	ADC_SAR_Seq_1_SetGain
 787              		.code	16
 788              		.thumb_func
 789              		.type	ADC_SAR_Seq_1_SetGain, %function
 790              	ADC_SAR_Seq_1_SetGain:
 791              	.LFB15:
 696:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 792              		.loc 1 724 0
 793              		.cfi_startproc
 794              		@ args = 0, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              	.LVL54:
 797 0000 70B5     		push	{r4, r5, r6, lr}
 798              		.cfi_def_cfa_offset 16
 799              		.cfi_offset 4, -16
 800              		.cfi_offset 5, -12
 801              		.cfi_offset 6, -8
 802              		.cfi_offset 14, -4
 803 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 28


 804 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 805              		.loc 1 726 0
 806 0006 0128     		cmp	r0, #1
 807 0008 02D9     		bls	.L65
 808              		.loc 1 726 0 is_stmt 0 discriminator 1
 809 000a 0020     		movs	r0, #0
 810              	.LVL55:
 811 000c FFF7FEFF 		bl	CyHalt
 812              	.LVL56:
 813              	.L65:
 727:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 814              		.loc 1 728 0 is_stmt 1
 815 0010 A400     		lsls	r4, r4, #2
 816              	.LVL57:
 817 0012 014B     		ldr	r3, .L66
 818 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 819              		.loc 1 729 0
 820              		@ sp needed
 821              	.LVL58:
 822 0016 70BD     		pop	{r4, r5, r6, pc}
 823              	.L67:
 824              		.align	2
 825              	.L66:
 826 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 827              		.cfi_endproc
 828              	.LFE15:
 829              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 830              		.global	__aeabi_idiv
 831              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 832              		.align	2
 833              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 834              		.code	16
 835              		.thumb_func
 836              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 837              	ADC_SAR_Seq_1_CountsTo_mVolts:
 838              	.LFB16:
 730:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 734:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 29


 747:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 839              		.loc 1 757 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              	.LVL59:
 844 0000 70B5     		push	{r4, r5, r6, lr}
 845              		.cfi_def_cfa_offset 16
 846              		.cfi_offset 4, -16
 847              		.cfi_offset 5, -12
 848              		.cfi_offset 6, -8
 849              		.cfi_offset 14, -4
 850 0002 0400     		movs	r4, r0
 851 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 852              		.loc 1 761 0
 853 0006 0128     		cmp	r0, #1
 854 0008 02D9     		bls	.L69
 855              		.loc 1 761 0 is_stmt 0 discriminator 1
 856 000a 0020     		movs	r0, #0
 857              	.LVL60:
 858 000c FFF7FEFF 		bl	CyHalt
 859              	.LVL61:
 860              	.L69:
 762:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 769:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 861              		.loc 1 772 0 is_stmt 1
 862 0010 6300     		lsls	r3, r4, #1
 863 0012 0F4A     		ldr	r2, .L72
 864 0014 995A     		ldrh	r1, [r3, r2]
 865 0016 09B2     		sxth	r1, r1
 866 0018 691A     		subs	r1, r5, r1
 867 001a 09B2     		sxth	r1, r1
 868              	.LVL62:
 773:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 30


 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 869              		.loc 1 774 0
 870 001c 0D48     		ldr	r0, .L72+4
 871 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 872              		.loc 1 775 0
 873 0020 0029     		cmp	r1, #0
 874 0022 06DD     		ble	.L70
 875              		.loc 1 775 0 is_stmt 0 discriminator 1
 876 0024 A300     		lsls	r3, r4, #2
 877 0026 0C4A     		ldr	r2, .L72+8
 878 0028 9A58     		ldr	r2, [r3, r2]
 879 002a D30F     		lsrs	r3, r2, #31
 880 002c 9A18     		adds	r2, r3, r2
 881 002e 5310     		asrs	r3, r2, #1
 882 0030 06E0     		b	.L71
 883              	.L70:
 884              		.loc 1 775 0 discriminator 2
 885 0032 A300     		lsls	r3, r4, #2
 886 0034 084A     		ldr	r2, .L72+8
 887 0036 9A58     		ldr	r2, [r3, r2]
 888 0038 D30F     		lsrs	r3, r2, #31
 889 003a 9A18     		adds	r2, r3, r2
 890 003c 5210     		asrs	r2, r2, #1
 891 003e 5342     		rsbs	r3, r2, #0
 892              	.L71:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 893              		.loc 1 774 0 is_stmt 1
 894 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 895              		.loc 1 776 0
 896 0042 A400     		lsls	r4, r4, #2
 897              	.LVL63:
 898 0044 044B     		ldr	r3, .L72+8
 899 0046 E158     		ldr	r1, [r4, r3]
 900              	.LVL64:
 901 0048 FFF7FEFF 		bl	__aeabi_idiv
 902              	.LVL65:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 903              		.loc 1 774 0
 904 004c 00B2     		sxth	r0, r0
 905              	.LVL66:
 777:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 779:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 906              		.loc 1 779 0
 907              		@ sp needed
 908 004e 70BD     		pop	{r4, r5, r6, pc}
 909              	.L73:
 910              		.align	2
 911              	.L72:
 912 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 913 0054 10270000 		.word	10000
 914 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 915              		.cfi_endproc
 916              	.LFE16:
 917              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 31


 918              		.global	__aeabi_lmul
 919              		.global	__aeabi_ldivmod
 920              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 921              		.align	2
 922              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 923              		.code	16
 924              		.thumb_func
 925              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 926              	ADC_SAR_Seq_1_CountsTo_uVolts:
 927              	.LFB17:
 780:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 928              		.loc 1 811 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              	.LVL67:
 933 0000 70B5     		push	{r4, r5, r6, lr}
 934              		.cfi_def_cfa_offset 16
 935              		.cfi_offset 4, -16
 936              		.cfi_offset 5, -12
 937              		.cfi_offset 6, -8
 938              		.cfi_offset 14, -4
 939 0002 0500     		movs	r5, r0
 940 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 32


 814:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 941              		.loc 1 815 0
 942 0006 0128     		cmp	r0, #1
 943 0008 02D9     		bls	.L75
 944              		.loc 1 815 0 is_stmt 0 discriminator 1
 945 000a 0020     		movs	r0, #0
 946              	.LVL68:
 947 000c FFF7FEFF 		bl	CyHalt
 948              	.LVL69:
 949              	.L75:
 816:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 950              		.loc 1 826 0 is_stmt 1
 951 0010 6A00     		lsls	r2, r5, #1
 952 0012 084B     		ldr	r3, .L76
 953 0014 D05A     		ldrh	r0, [r2, r3]
 954 0016 00B2     		sxth	r0, r0
 955 0018 201A     		subs	r0, r4, r0
 956 001a 00B2     		sxth	r0, r0
 957              	.LVL70:
 827:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 958              		.loc 1 828 0
 959 001c C117     		asrs	r1, r0, #31
 960 001e 064A     		ldr	r2, .L76+4
 961 0020 0023     		movs	r3, #0
 962 0022 FFF7FEFF 		bl	__aeabi_lmul
 963              	.LVL71:
 964 0026 AD00     		lsls	r5, r5, #2
 965              	.LVL72:
 966 0028 044B     		ldr	r3, .L76+8
 967 002a EA58     		ldr	r2, [r5, r3]
 968 002c D317     		asrs	r3, r2, #31
 969 002e FFF7FEFF 		bl	__aeabi_ldivmod
 970              	.LVL73:
 829:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 971              		.loc 1 831 0
 972              		@ sp needed
 973 0032 70BD     		pop	{r4, r5, r6, pc}
 974              	.L77:
 975              		.align	2
 976              	.L76:
 977 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 978 0038 80969800 		.word	10000000
 979 003c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 33


 980              		.cfi_endproc
 981              	.LFE17:
 982              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 983              		.global	__aeabi_i2f
 984              		.global	__aeabi_fmul
 985              		.global	__aeabi_fdiv
 986              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 987              		.align	2
 988              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 989              		.code	16
 990              		.thumb_func
 991              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 992              	ADC_SAR_Seq_1_CountsTo_Volts:
 993              	.LFB18:
 832:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 994              		.loc 1 856 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 0, uses_anonymous_args = 0
 998              	.LVL74:
 999 0000 70B5     		push	{r4, r5, r6, lr}
 1000              		.cfi_def_cfa_offset 16
 1001              		.cfi_offset 4, -16
 1002              		.cfi_offset 5, -12
 1003              		.cfi_offset 6, -8
 1004              		.cfi_offset 14, -4
 1005 0002 0400     		movs	r4, r0
 1006 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 1007              		.loc 1 860 0
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 34


 1008 0006 0128     		cmp	r0, #1
 1009 0008 02D9     		bls	.L79
 1010              		.loc 1 860 0 is_stmt 0 discriminator 1
 1011 000a 0020     		movs	r0, #0
 1012              	.LVL75:
 1013 000c FFF7FEFF 		bl	CyHalt
 1014              	.LVL76:
 1015              	.L79:
 861:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 1016              		.loc 1 871 0 is_stmt 1
 1017 0010 6200     		lsls	r2, r4, #1
 1018 0012 0A4B     		ldr	r3, .L80
 1019 0014 D05A     		ldrh	r0, [r2, r3]
 1020 0016 00B2     		sxth	r0, r0
 1021 0018 281A     		subs	r0, r5, r0
 1022 001a 00B2     		sxth	r0, r0
 1023              	.LVL77:
 872:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 1024              		.loc 1 873 0
 1025 001c FFF7FEFF 		bl	__aeabi_i2f
 1026              	.LVL78:
 1027 0020 0749     		ldr	r1, .L80+4
 1028 0022 FFF7FEFF 		bl	__aeabi_fmul
 1029              	.LVL79:
 1030 0026 051C     		adds	r5, r0, #0
 1031 0028 A400     		lsls	r4, r4, #2
 1032              	.LVL80:
 1033 002a 064B     		ldr	r3, .L80+8
 1034 002c E058     		ldr	r0, [r4, r3]
 1035 002e FFF7FEFF 		bl	__aeabi_i2f
 1036              	.LVL81:
 1037 0032 011C     		adds	r1, r0, #0
 1038 0034 281C     		adds	r0, r5, #0
 1039 0036 FFF7FEFF 		bl	__aeabi_fdiv
 1040              	.LVL82:
 874:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 1041              		.loc 1 876 0
 1042              		@ sp needed
 1043 003a 70BD     		pop	{r4, r5, r6, pc}
 1044              	.L81:
 1045              		.align	2
 1046              	.L80:
 1047 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 1048 0040 00002041 		.word	1092616192
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 35


 1049 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 1050              		.cfi_endproc
 1051              	.LFE18:
 1052              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 1053              		.comm	ADC_SAR_Seq_1_countsPer10Volt,8,4
 1054              		.comm	ADC_SAR_Seq_1_offset,4,4
 1055              		.global	ADC_SAR_Seq_1_initVar
 1056              		.section	.rodata
 1057              		.align	2
 1058              		.set	.LANCHOR0,. + 0
 1059              		.type	ADC_SAR_Seq_1_channelsConfig, %object
 1060              		.size	ADC_SAR_Seq_1_channelsConfig, 8
 1061              	ADC_SAR_Seq_1_channelsConfig:
 1062 0000 00000000 		.space	8
 1062      00000000 
 1063              		.type	ADC_SAR_Seq_1_InputsPlacement.4975, %object
 1064              		.size	ADC_SAR_Seq_1_InputsPlacement.4975, 2
 1065              	ADC_SAR_Seq_1_InputsPlacement.4975:
 1066 0008 00       		.byte	0
 1067 0009 07       		.byte	7
 1068              		.bss
 1069              		.set	.LANCHOR1,. + 0
 1070              		.type	ADC_SAR_Seq_1_initVar, %object
 1071              		.size	ADC_SAR_Seq_1_initVar, 1
 1072              	ADC_SAR_Seq_1_initVar:
 1073 0000 00       		.space	1
 1074              		.text
 1075              	.Letext0:
 1076              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1077              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1078              		.section	.debug_info,"",%progbits
 1079              	.Ldebug_info0:
 1080 0000 A1050000 		.4byte	0x5a1
 1081 0004 0400     		.2byte	0x4
 1082 0006 00000000 		.4byte	.Ldebug_abbrev0
 1083 000a 04       		.byte	0x4
 1084 000b 01       		.uleb128 0x1
 1085 000c 72000000 		.4byte	.LASF64
 1086 0010 0C       		.byte	0xc
 1087 0011 9B030000 		.4byte	.LASF65
 1088 0015 DA010000 		.4byte	.LASF66
 1089 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1090 001d 00000000 		.4byte	0
 1091 0021 00000000 		.4byte	.Ldebug_line0
 1092 0025 02       		.uleb128 0x2
 1093 0026 01       		.byte	0x1
 1094 0027 06       		.byte	0x6
 1095 0028 86010000 		.4byte	.LASF0
 1096 002c 02       		.uleb128 0x2
 1097 002d 01       		.byte	0x1
 1098 002e 08       		.byte	0x8
 1099 002f 02040000 		.4byte	.LASF1
 1100 0033 02       		.uleb128 0x2
 1101 0034 02       		.byte	0x2
 1102 0035 05       		.byte	0x5
 1103 0036 10040000 		.4byte	.LASF2
 1104 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 36


 1105 003b 02       		.byte	0x2
 1106 003c 07       		.byte	0x7
 1107 003d DA020000 		.4byte	.LASF3
 1108 0041 02       		.uleb128 0x2
 1109 0042 04       		.byte	0x4
 1110 0043 05       		.byte	0x5
 1111 0044 D1010000 		.4byte	.LASF4
 1112 0048 02       		.uleb128 0x2
 1113 0049 04       		.byte	0x4
 1114 004a 07       		.byte	0x7
 1115 004b B8020000 		.4byte	.LASF5
 1116 004f 02       		.uleb128 0x2
 1117 0050 08       		.byte	0x8
 1118 0051 05       		.byte	0x5
 1119 0052 78010000 		.4byte	.LASF6
 1120 0056 02       		.uleb128 0x2
 1121 0057 08       		.byte	0x8
 1122 0058 07       		.byte	0x7
 1123 0059 14010000 		.4byte	.LASF7
 1124 005d 03       		.uleb128 0x3
 1125 005e 04       		.byte	0x4
 1126 005f 05       		.byte	0x5
 1127 0060 696E7400 		.ascii	"int\000"
 1128 0064 02       		.uleb128 0x2
 1129 0065 04       		.byte	0x4
 1130 0066 07       		.byte	0x7
 1131 0067 A4020000 		.4byte	.LASF8
 1132 006b 04       		.uleb128 0x4
 1133 006c 45020000 		.4byte	.LASF9
 1134 0070 02       		.byte	0x2
 1135 0071 E401     		.2byte	0x1e4
 1136 0073 2C000000 		.4byte	0x2c
 1137 0077 04       		.uleb128 0x4
 1138 0078 15000000 		.4byte	.LASF10
 1139 007c 02       		.byte	0x2
 1140 007d E501     		.2byte	0x1e5
 1141 007f 3A000000 		.4byte	0x3a
 1142 0083 04       		.uleb128 0x4
 1143 0084 5C020000 		.4byte	.LASF11
 1144 0088 02       		.byte	0x2
 1145 0089 E601     		.2byte	0x1e6
 1146 008b 48000000 		.4byte	0x48
 1147 008f 04       		.uleb128 0x4
 1148 0090 C9040000 		.4byte	.LASF12
 1149 0094 02       		.byte	0x2
 1150 0095 E801     		.2byte	0x1e8
 1151 0097 33000000 		.4byte	0x33
 1152 009b 04       		.uleb128 0x4
 1153 009c AD010000 		.4byte	.LASF13
 1154 00a0 02       		.byte	0x2
 1155 00a1 E901     		.2byte	0x1e9
 1156 00a3 41000000 		.4byte	0x41
 1157 00a7 04       		.uleb128 0x4
 1158 00a8 26030000 		.4byte	.LASF14
 1159 00ac 02       		.byte	0x2
 1160 00ad EA01     		.2byte	0x1ea
 1161 00af B3000000 		.4byte	0xb3
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 37


 1162 00b3 02       		.uleb128 0x2
 1163 00b4 04       		.byte	0x4
 1164 00b5 04       		.byte	0x4
 1165 00b6 C2030000 		.4byte	.LASF15
 1166 00ba 02       		.uleb128 0x2
 1167 00bb 08       		.byte	0x8
 1168 00bc 04       		.byte	0x4
 1169 00bd 55020000 		.4byte	.LASF16
 1170 00c1 04       		.uleb128 0x4
 1171 00c2 84030000 		.4byte	.LASF17
 1172 00c6 02       		.byte	0x2
 1173 00c7 EF01     		.2byte	0x1ef
 1174 00c9 4F000000 		.4byte	0x4f
 1175 00cd 02       		.uleb128 0x2
 1176 00ce 01       		.byte	0x1
 1177 00cf 08       		.byte	0x8
 1178 00d0 5C040000 		.4byte	.LASF18
 1179 00d4 04       		.uleb128 0x4
 1180 00d5 20030000 		.4byte	.LASF19
 1181 00d9 02       		.byte	0x2
 1182 00da 9002     		.2byte	0x290
 1183 00dc E0000000 		.4byte	0xe0
 1184 00e0 05       		.uleb128 0x5
 1185 00e1 83000000 		.4byte	0x83
 1186 00e5 02       		.uleb128 0x2
 1187 00e6 08       		.byte	0x8
 1188 00e7 04       		.byte	0x4
 1189 00e8 40030000 		.4byte	.LASF20
 1190 00ec 02       		.uleb128 0x2
 1191 00ed 04       		.byte	0x4
 1192 00ee 07       		.byte	0x7
 1193 00ef 2E030000 		.4byte	.LASF21
 1194 00f3 06       		.uleb128 0x6
 1195 00f4 1C000000 		.4byte	.LASF26
 1196 00f8 01       		.byte	0x1
 1197 00f9 5E       		.byte	0x5e
 1198 00fa 00000000 		.4byte	.LFB2
 1199 00fe 80010000 		.4byte	.LFE2-.LFB2
 1200 0102 01       		.uleb128 0x1
 1201 0103 9C       		.byte	0x9c
 1202 0104 6E010000 		.4byte	0x16e
 1203 0108 07       		.uleb128 0x7
 1204 0109 51040000 		.4byte	.LASF22
 1205 010d 01       		.byte	0x1
 1206 010e 60       		.byte	0x60
 1207 010f 83000000 		.4byte	0x83
 1208 0113 00000000 		.4byte	.LLST0
 1209 0117 07       		.uleb128 0x7
 1210 0118 D0020000 		.4byte	.LASF23
 1211 011c 01       		.byte	0x1
 1212 011d 61       		.byte	0x61
 1213 011e 83000000 		.4byte	0x83
 1214 0122 1F000000 		.4byte	.LLST1
 1215 0126 07       		.uleb128 0x7
 1216 0127 37000000 		.4byte	.LASF24
 1217 012b 01       		.byte	0x1
 1218 012c 62       		.byte	0x62
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 38


 1219 012d 9B000000 		.4byte	0x9b
 1220 0131 73010000 		.4byte	.LLST2
 1221 0135 08       		.uleb128 0x8
 1222 0136 40010000 		.4byte	.LASF25
 1223 013a 01       		.byte	0x1
 1224 013b 65       		.byte	0x65
 1225 013c 83010000 		.4byte	0x183
 1226 0140 05       		.uleb128 0x5
 1227 0141 03       		.byte	0x3
 1228 0142 08000000 		.4byte	ADC_SAR_Seq_1_InputsPlacement.4975
 1229 0146 09       		.uleb128 0x9
 1230 0147 0A000000 		.4byte	.LVL0
 1231 014b 78050000 		.4byte	0x578
 1232 014f 5E010000 		.4byte	0x15e
 1233 0153 0A       		.uleb128 0xa
 1234 0154 01       		.uleb128 0x1
 1235 0155 50       		.byte	0x50
 1236 0156 01       		.uleb128 0x1
 1237 0157 41       		.byte	0x41
 1238 0158 0A       		.uleb128 0xa
 1239 0159 01       		.uleb128 0x1
 1240 015a 51       		.byte	0x51
 1241 015b 01       		.uleb128 0x1
 1242 015c 33       		.byte	0x33
 1243 015d 00       		.byte	0
 1244 015e 0B       		.uleb128 0xb
 1245 015f 12000000 		.4byte	.LVL1
 1246 0163 83050000 		.4byte	0x583
 1247 0167 0A       		.uleb128 0xa
 1248 0168 01       		.uleb128 0x1
 1249 0169 50       		.byte	0x50
 1250 016a 01       		.uleb128 0x1
 1251 016b 41       		.byte	0x41
 1252 016c 00       		.byte	0
 1253 016d 00       		.byte	0
 1254 016e 0C       		.uleb128 0xc
 1255 016f 7E010000 		.4byte	0x17e
 1256 0173 7E010000 		.4byte	0x17e
 1257 0177 0D       		.uleb128 0xd
 1258 0178 EC000000 		.4byte	0xec
 1259 017c 01       		.byte	0x1
 1260 017d 00       		.byte	0
 1261 017e 0E       		.uleb128 0xe
 1262 017f 6B000000 		.4byte	0x6b
 1263 0183 0E       		.uleb128 0xe
 1264 0184 6E010000 		.4byte	0x16e
 1265 0188 0F       		.uleb128 0xf
 1266 0189 2B010000 		.4byte	.LASF27
 1267 018d 01       		.byte	0x1
 1268 018e 4A01     		.2byte	0x14a
 1269 0190 00000000 		.4byte	.LFB3
 1270 0194 30000000 		.4byte	.LFE3-.LFB3
 1271 0198 01       		.uleb128 0x1
 1272 0199 9C       		.byte	0x9c
 1273 019a AE010000 		.4byte	0x1ae
 1274 019e 0B       		.uleb128 0xb
 1275 019f 24000000 		.4byte	.LVL22
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 39


 1276 01a3 8E050000 		.4byte	0x58e
 1277 01a7 0A       		.uleb128 0xa
 1278 01a8 01       		.uleb128 0x1
 1279 01a9 50       		.byte	0x50
 1280 01aa 01       		.uleb128 0x1
 1281 01ab 3A       		.byte	0x3a
 1282 01ac 00       		.byte	0
 1283 01ad 00       		.byte	0
 1284 01ae 06       		.uleb128 0x6
 1285 01af 00010000 		.4byte	.LASF28
 1286 01b3 01       		.byte	0x1
 1287 01b4 3F       		.byte	0x3f
 1288 01b5 00000000 		.4byte	.LFB1
 1289 01b9 20000000 		.4byte	.LFE1-.LFB1
 1290 01bd 01       		.uleb128 0x1
 1291 01be 9C       		.byte	0x9c
 1292 01bf D6010000 		.4byte	0x1d6
 1293 01c3 10       		.uleb128 0x10
 1294 01c4 0E000000 		.4byte	.LVL23
 1295 01c8 F3000000 		.4byte	0xf3
 1296 01cc 10       		.uleb128 0x10
 1297 01cd 18000000 		.4byte	.LVL24
 1298 01d1 88010000 		.4byte	0x188
 1299 01d5 00       		.byte	0
 1300 01d6 11       		.uleb128 0x11
 1301 01d7 DE030000 		.4byte	.LASF29
 1302 01db 01       		.byte	0x1
 1303 01dc 6D01     		.2byte	0x16d
 1304 01de 00000000 		.4byte	.LFB4
 1305 01e2 10000000 		.4byte	.LFE4-.LFB4
 1306 01e6 01       		.uleb128 0x1
 1307 01e7 9C       		.byte	0x9c
 1308 01e8 11       		.uleb128 0x11
 1309 01e9 3E000000 		.4byte	.LASF30
 1310 01ed 01       		.byte	0x1
 1311 01ee 8701     		.2byte	0x187
 1312 01f0 00000000 		.4byte	.LFB5
 1313 01f4 14000000 		.4byte	.LFE5-.LFB5
 1314 01f8 01       		.uleb128 0x1
 1315 01f9 9C       		.byte	0x9c
 1316 01fa 11       		.uleb128 0x11
 1317 01fb 6A030000 		.4byte	.LASF31
 1318 01ff 01       		.byte	0x1
 1319 0200 A001     		.2byte	0x1a0
 1320 0202 00000000 		.4byte	.LFB6
 1321 0206 14000000 		.4byte	.LFE6-.LFB6
 1322 020a 01       		.uleb128 0x1
 1323 020b 9C       		.byte	0x9c
 1324 020c 12       		.uleb128 0x12
 1325 020d 4C030000 		.4byte	.LASF33
 1326 0211 01       		.byte	0x1
 1327 0212 C201     		.2byte	0x1c2
 1328 0214 83000000 		.4byte	0x83
 1329 0218 00000000 		.4byte	.LFB7
 1330 021c 28000000 		.4byte	.LFE7-.LFB7
 1331 0220 01       		.uleb128 0x1
 1332 0221 9C       		.byte	0x9c
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 40


 1333 0222 47020000 		.4byte	0x247
 1334 0226 13       		.uleb128 0x13
 1335 0227 86020000 		.4byte	.LASF35
 1336 022b 01       		.byte	0x1
 1337 022c C201     		.2byte	0x1c2
 1338 022e 83000000 		.4byte	0x83
 1339 0232 86010000 		.4byte	.LLST3
 1340 0236 14       		.uleb128 0x14
 1341 0237 AA040000 		.4byte	.LASF32
 1342 023b 01       		.byte	0x1
 1343 023c C401     		.2byte	0x1c4
 1344 023e 83000000 		.4byte	0x83
 1345 0242 CB010000 		.4byte	.LLST4
 1346 0246 00       		.byte	0
 1347 0247 12       		.uleb128 0x12
 1348 0248 5E010000 		.4byte	.LASF34
 1349 024c 01       		.byte	0x1
 1350 024d F801     		.2byte	0x1f8
 1351 024f 8F000000 		.4byte	0x8f
 1352 0253 00000000 		.4byte	.LFB8
 1353 0257 2C000000 		.4byte	.LFE8-.LFB8
 1354 025b 01       		.uleb128 0x1
 1355 025c 9C       		.byte	0x9c
 1356 025d 91020000 		.4byte	0x291
 1357 0261 13       		.uleb128 0x13
 1358 0262 57040000 		.4byte	.LASF36
 1359 0266 01       		.byte	0x1
 1360 0267 F801     		.2byte	0x1f8
 1361 0269 83000000 		.4byte	0x83
 1362 026d 01020000 		.4byte	.LLST5
 1363 0271 14       		.uleb128 0x14
 1364 0272 EA040000 		.4byte	.LASF37
 1365 0276 01       		.byte	0x1
 1366 0277 FA01     		.2byte	0x1fa
 1367 0279 83000000 		.4byte	0x83
 1368 027d 46020000 		.4byte	.LLST6
 1369 0281 0B       		.uleb128 0xb
 1370 0282 0E000000 		.4byte	.LVL34
 1371 0286 99050000 		.4byte	0x599
 1372 028a 0A       		.uleb128 0xa
 1373 028b 01       		.uleb128 0x1
 1374 028c 50       		.byte	0x50
 1375 028d 01       		.uleb128 0x1
 1376 028e 30       		.byte	0x30
 1377 028f 00       		.byte	0
 1378 0290 00       		.byte	0
 1379 0291 0F       		.uleb128 0xf
 1380 0292 37040000 		.4byte	.LASF38
 1381 0296 01       		.byte	0x1
 1382 0297 2502     		.2byte	0x225
 1383 0299 00000000 		.4byte	.LFB9
 1384 029d 10000000 		.4byte	.LFE9-.LFB9
 1385 02a1 01       		.uleb128 0x1
 1386 02a2 9C       		.byte	0x9c
 1387 02a3 B8020000 		.4byte	0x2b8
 1388 02a7 13       		.uleb128 0x13
 1389 02a8 63020000 		.4byte	.LASF39
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 41


 1390 02ac 01       		.byte	0x1
 1391 02ad 2502     		.2byte	0x225
 1392 02af 83000000 		.4byte	0x83
 1393 02b3 64020000 		.4byte	.LLST7
 1394 02b7 00       		.byte	0
 1395 02b8 0F       		.uleb128 0xf
 1396 02b9 61040000 		.4byte	.LASF40
 1397 02bd 01       		.byte	0x1
 1398 02be 5102     		.2byte	0x251
 1399 02c0 00000000 		.4byte	.LFB10
 1400 02c4 1C000000 		.4byte	.LFE10-.LFB10
 1401 02c8 01       		.uleb128 0x1
 1402 02c9 9C       		.byte	0x9c
 1403 02ca DF020000 		.4byte	0x2df
 1404 02ce 13       		.uleb128 0x13
 1405 02cf 37030000 		.4byte	.LASF41
 1406 02d3 01       		.byte	0x1
 1407 02d4 5102     		.2byte	0x251
 1408 02d6 83000000 		.4byte	0x83
 1409 02da 85020000 		.4byte	.LLST8
 1410 02de 00       		.byte	0
 1411 02df 0F       		.uleb128 0xf
 1412 02e0 92010000 		.4byte	.LASF42
 1413 02e4 01       		.byte	0x1
 1414 02e5 6602     		.2byte	0x266
 1415 02e7 00000000 		.4byte	.LFB11
 1416 02eb 18000000 		.4byte	.LFE11-.LFB11
 1417 02ef 01       		.uleb128 0x1
 1418 02f0 9C       		.byte	0x9c
 1419 02f1 06030000 		.4byte	0x306
 1420 02f5 13       		.uleb128 0x13
 1421 02f6 F1030000 		.4byte	.LASF43
 1422 02fa 01       		.byte	0x1
 1423 02fb 6602     		.2byte	0x266
 1424 02fd 83000000 		.4byte	0x83
 1425 0301 A6020000 		.4byte	.LLST9
 1426 0305 00       		.byte	0
 1427 0306 0F       		.uleb128 0xf
 1428 0307 CF040000 		.4byte	.LASF44
 1429 030b 01       		.byte	0x1
 1430 030c 7E02     		.2byte	0x27e
 1431 030e 00000000 		.4byte	.LFB12
 1432 0312 10000000 		.4byte	.LFE12-.LFB12
 1433 0316 01       		.uleb128 0x1
 1434 0317 9C       		.byte	0x9c
 1435 0318 2D030000 		.4byte	0x32d
 1436 031c 13       		.uleb128 0x13
 1437 031d 63020000 		.4byte	.LASF39
 1438 0321 01       		.byte	0x1
 1439 0322 7E02     		.2byte	0x27e
 1440 0324 83000000 		.4byte	0x83
 1441 0328 C7020000 		.4byte	.LLST10
 1442 032c 00       		.byte	0
 1443 032d 0F       		.uleb128 0xf
 1444 032e 59000000 		.4byte	.LASF45
 1445 0332 01       		.byte	0x1
 1446 0333 9502     		.2byte	0x295
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 42


 1447 0335 00000000 		.4byte	.LFB13
 1448 0339 10000000 		.4byte	.LFE13-.LFB13
 1449 033d 01       		.uleb128 0x1
 1450 033e 9C       		.byte	0x9c
 1451 033f 54030000 		.4byte	0x354
 1452 0343 13       		.uleb128 0x13
 1453 0344 63020000 		.4byte	.LASF39
 1454 0348 01       		.byte	0x1
 1455 0349 9502     		.2byte	0x295
 1456 034b 83000000 		.4byte	0x83
 1457 034f E8020000 		.4byte	.LLST11
 1458 0353 00       		.byte	0
 1459 0354 0F       		.uleb128 0xf
 1460 0355 B1040000 		.4byte	.LASF46
 1461 0359 01       		.byte	0x1
 1462 035a B102     		.2byte	0x2b1
 1463 035c 00000000 		.4byte	.LFB14
 1464 0360 1C000000 		.4byte	.LFE14-.LFB14
 1465 0364 01       		.uleb128 0x1
 1466 0365 9C       		.byte	0x9c
 1467 0366 9A030000 		.4byte	0x39a
 1468 036a 13       		.uleb128 0x13
 1469 036b 57040000 		.4byte	.LASF36
 1470 036f 01       		.byte	0x1
 1471 0370 B102     		.2byte	0x2b1
 1472 0372 83000000 		.4byte	0x83
 1473 0376 09030000 		.4byte	.LLST12
 1474 037a 13       		.uleb128 0x13
 1475 037b 7B040000 		.4byte	.LASF47
 1476 037f 01       		.byte	0x1
 1477 0380 B102     		.2byte	0x2b1
 1478 0382 8F000000 		.4byte	0x8f
 1479 0386 35030000 		.4byte	.LLST13
 1480 038a 0B       		.uleb128 0xb
 1481 038b 10000000 		.4byte	.LVL52
 1482 038f 99050000 		.4byte	0x599
 1483 0393 0A       		.uleb128 0xa
 1484 0394 01       		.uleb128 0x1
 1485 0395 50       		.byte	0x50
 1486 0396 01       		.uleb128 0x1
 1487 0397 30       		.byte	0x30
 1488 0398 00       		.byte	0
 1489 0399 00       		.byte	0
 1490 039a 0F       		.uleb128 0xf
 1491 039b C8030000 		.4byte	.LASF48
 1492 039f 01       		.byte	0x1
 1493 03a0 D302     		.2byte	0x2d3
 1494 03a2 00000000 		.4byte	.LFB15
 1495 03a6 1C000000 		.4byte	.LFE15-.LFB15
 1496 03aa 01       		.uleb128 0x1
 1497 03ab 9C       		.byte	0x9c
 1498 03ac E0030000 		.4byte	0x3e0
 1499 03b0 13       		.uleb128 0x13
 1500 03b1 57040000 		.4byte	.LASF36
 1501 03b5 01       		.byte	0x1
 1502 03b6 D302     		.2byte	0x2d3
 1503 03b8 83000000 		.4byte	0x83
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 43


 1504 03bc 56030000 		.4byte	.LLST14
 1505 03c0 13       		.uleb128 0x13
 1506 03c1 2F000000 		.4byte	.LASF49
 1507 03c5 01       		.byte	0x1
 1508 03c6 D302     		.2byte	0x2d3
 1509 03c8 9B000000 		.4byte	0x9b
 1510 03cc 82030000 		.4byte	.LLST15
 1511 03d0 0B       		.uleb128 0xb
 1512 03d1 10000000 		.4byte	.LVL56
 1513 03d5 99050000 		.4byte	0x599
 1514 03d9 0A       		.uleb128 0xa
 1515 03da 01       		.uleb128 0x1
 1516 03db 50       		.byte	0x50
 1517 03dc 01       		.uleb128 0x1
 1518 03dd 30       		.byte	0x30
 1519 03de 00       		.byte	0
 1520 03df 00       		.byte	0
 1521 03e0 15       		.uleb128 0x15
 1522 03e1 68020000 		.4byte	.LASF50
 1523 03e5 01       		.byte	0x1
 1524 03e6 F402     		.2byte	0x2f4
 1525 03e8 8F000000 		.4byte	0x8f
 1526 03ec 00000000 		.4byte	.LFB16
 1527 03f0 5C000000 		.4byte	.LFE16-.LFB16
 1528 03f4 01       		.uleb128 0x1
 1529 03f5 9C       		.byte	0x9c
 1530 03f6 38040000 		.4byte	0x438
 1531 03fa 13       		.uleb128 0x13
 1532 03fb 57040000 		.4byte	.LASF36
 1533 03ff 01       		.byte	0x1
 1534 0400 F402     		.2byte	0x2f4
 1535 0402 83000000 		.4byte	0x83
 1536 0406 B2030000 		.4byte	.LLST16
 1537 040a 13       		.uleb128 0x13
 1538 040b 82040000 		.4byte	.LASF51
 1539 040f 01       		.byte	0x1
 1540 0410 F402     		.2byte	0x2f4
 1541 0412 8F000000 		.4byte	0x8f
 1542 0416 DE030000 		.4byte	.LLST17
 1543 041a 16       		.uleb128 0x16
 1544 041b 19030000 		.4byte	.LASF52
 1545 041f 01       		.byte	0x1
 1546 0420 F602     		.2byte	0x2f6
 1547 0422 8F000000 		.4byte	0x8f
 1548 0426 01       		.uleb128 0x1
 1549 0427 50       		.byte	0x50
 1550 0428 0B       		.uleb128 0xb
 1551 0429 10000000 		.4byte	.LVL61
 1552 042d 99050000 		.4byte	0x599
 1553 0431 0A       		.uleb128 0xa
 1554 0432 01       		.uleb128 0x1
 1555 0433 50       		.byte	0x50
 1556 0434 01       		.uleb128 0x1
 1557 0435 30       		.byte	0x30
 1558 0436 00       		.byte	0
 1559 0437 00       		.byte	0
 1560 0438 15       		.uleb128 0x15
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 44


 1561 0439 B3010000 		.4byte	.LASF53
 1562 043d 01       		.byte	0x1
 1563 043e 2A03     		.2byte	0x32a
 1564 0440 9B000000 		.4byte	0x9b
 1565 0444 00000000 		.4byte	.LFB17
 1566 0448 40000000 		.4byte	.LFE17-.LFB17
 1567 044c 01       		.uleb128 0x1
 1568 044d 9C       		.byte	0x9c
 1569 044e 8E040000 		.4byte	0x48e
 1570 0452 13       		.uleb128 0x13
 1571 0453 57040000 		.4byte	.LASF36
 1572 0457 01       		.byte	0x1
 1573 0458 2A03     		.2byte	0x32a
 1574 045a 83000000 		.4byte	0x83
 1575 045e 0A040000 		.4byte	.LLST18
 1576 0462 13       		.uleb128 0x13
 1577 0463 82040000 		.4byte	.LASF51
 1578 0467 01       		.byte	0x1
 1579 0468 2A03     		.2byte	0x32a
 1580 046a 8F000000 		.4byte	0x8f
 1581 046e 36040000 		.4byte	.LLST19
 1582 0472 17       		.uleb128 0x17
 1583 0473 B1020000 		.4byte	.LASF67
 1584 0477 01       		.byte	0x1
 1585 0478 2C03     		.2byte	0x32c
 1586 047a C1000000 		.4byte	0xc1
 1587 047e 0B       		.uleb128 0xb
 1588 047f 10000000 		.4byte	.LVL69
 1589 0483 99050000 		.4byte	0x599
 1590 0487 0A       		.uleb128 0xa
 1591 0488 01       		.uleb128 0x1
 1592 0489 50       		.byte	0x50
 1593 048a 01       		.uleb128 0x1
 1594 048b 30       		.byte	0x30
 1595 048c 00       		.byte	0
 1596 048d 00       		.byte	0
 1597 048e 15       		.uleb128 0x15
 1598 048f 1A040000 		.4byte	.LASF54
 1599 0493 01       		.byte	0x1
 1600 0494 5703     		.2byte	0x357
 1601 0496 A7000000 		.4byte	0xa7
 1602 049a 00000000 		.4byte	.LFB18
 1603 049e 48000000 		.4byte	.LFE18-.LFB18
 1604 04a2 01       		.uleb128 0x1
 1605 04a3 9C       		.byte	0x9c
 1606 04a4 E6040000 		.4byte	0x4e6
 1607 04a8 13       		.uleb128 0x13
 1608 04a9 57040000 		.4byte	.LASF36
 1609 04ad 01       		.byte	0x1
 1610 04ae 5703     		.2byte	0x357
 1611 04b0 83000000 		.4byte	0x83
 1612 04b4 62040000 		.4byte	.LLST20
 1613 04b8 13       		.uleb128 0x13
 1614 04b9 82040000 		.4byte	.LASF51
 1615 04bd 01       		.byte	0x1
 1616 04be 5703     		.2byte	0x357
 1617 04c0 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 45


 1618 04c4 8E040000 		.4byte	.LLST21
 1619 04c8 16       		.uleb128 0x16
 1620 04c9 CA020000 		.4byte	.LASF55
 1621 04cd 01       		.byte	0x1
 1622 04ce 5903     		.2byte	0x359
 1623 04d0 A7000000 		.4byte	0xa7
 1624 04d4 01       		.uleb128 0x1
 1625 04d5 50       		.byte	0x50
 1626 04d6 0B       		.uleb128 0xb
 1627 04d7 10000000 		.4byte	.LVL76
 1628 04db 99050000 		.4byte	0x599
 1629 04df 0A       		.uleb128 0xa
 1630 04e0 01       		.uleb128 0x1
 1631 04e1 50       		.byte	0x50
 1632 04e2 01       		.uleb128 0x1
 1633 04e3 30       		.byte	0x30
 1634 04e4 00       		.byte	0
 1635 04e5 00       		.byte	0
 1636 04e6 0C       		.uleb128 0xc
 1637 04e7 F6040000 		.4byte	0x4f6
 1638 04eb F6040000 		.4byte	0x4f6
 1639 04ef 0D       		.uleb128 0xd
 1640 04f0 EC000000 		.4byte	0xec
 1641 04f4 01       		.byte	0x1
 1642 04f5 00       		.byte	0
 1643 04f6 0E       		.uleb128 0xe
 1644 04f7 83000000 		.4byte	0x83
 1645 04fb 08       		.uleb128 0x8
 1646 04fc FC020000 		.4byte	.LASF56
 1647 0500 01       		.byte	0x1
 1648 0501 21       		.byte	0x21
 1649 0502 0C050000 		.4byte	0x50c
 1650 0506 05       		.uleb128 0x5
 1651 0507 03       		.byte	0x3
 1652 0508 00000000 		.4byte	ADC_SAR_Seq_1_channelsConfig
 1653 050c 0E       		.uleb128 0xe
 1654 050d E6040000 		.4byte	0x4e6
 1655 0511 18       		.uleb128 0x18
 1656 0512 8E020000 		.4byte	.LASF57
 1657 0516 01       		.byte	0x1
 1658 0517 18       		.byte	0x18
 1659 0518 6B000000 		.4byte	0x6b
 1660 051c 05       		.uleb128 0x5
 1661 051d 03       		.byte	0x3
 1662 051e 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1663 0522 0C       		.uleb128 0xc
 1664 0523 32050000 		.4byte	0x532
 1665 0527 32050000 		.4byte	0x532
 1666 052b 0D       		.uleb128 0xd
 1667 052c EC000000 		.4byte	0xec
 1668 0530 01       		.byte	0x1
 1669 0531 00       		.byte	0
 1670 0532 05       		.uleb128 0x5
 1671 0533 8F000000 		.4byte	0x8f
 1672 0537 18       		.uleb128 0x18
 1673 0538 00000000 		.4byte	.LASF58
 1674 053c 01       		.byte	0x1
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 46


 1675 053d 19       		.byte	0x19
 1676 053e 48050000 		.4byte	0x548
 1677 0542 05       		.uleb128 0x5
 1678 0543 03       		.byte	0x3
 1679 0544 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1680 0548 05       		.uleb128 0x5
 1681 0549 22050000 		.4byte	0x522
 1682 054d 0C       		.uleb128 0xc
 1683 054e 5D050000 		.4byte	0x55d
 1684 0552 5D050000 		.4byte	0x55d
 1685 0556 0D       		.uleb128 0xd
 1686 0557 EC000000 		.4byte	0xec
 1687 055b 01       		.byte	0x1
 1688 055c 00       		.byte	0
 1689 055d 05       		.uleb128 0x5
 1690 055e 9B000000 		.4byte	0x9b
 1691 0562 18       		.uleb128 0x18
 1692 0563 8C040000 		.4byte	.LASF59
 1693 0567 01       		.byte	0x1
 1694 0568 1A       		.byte	0x1a
 1695 0569 73050000 		.4byte	0x573
 1696 056d 05       		.uleb128 0x5
 1697 056e 03       		.byte	0x3
 1698 056f 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1699 0573 05       		.uleb128 0x5
 1700 0574 4D050000 		.4byte	0x54d
 1701 0578 19       		.uleb128 0x19
 1702 0579 8A030000 		.4byte	.LASF60
 1703 057d 8A030000 		.4byte	.LASF60
 1704 0581 03       		.byte	0x3
 1705 0582 C0       		.byte	0xc0
 1706 0583 19       		.uleb128 0x19
 1707 0584 ED020000 		.4byte	.LASF61
 1708 0588 ED020000 		.4byte	.LASF61
 1709 058c 03       		.byte	0x3
 1710 058d BD       		.byte	0xbd
 1711 058e 19       		.uleb128 0x19
 1712 058f 4B020000 		.4byte	.LASF62
 1713 0593 4B020000 		.4byte	.LASF62
 1714 0597 03       		.byte	0x3
 1715 0598 DA       		.byte	0xda
 1716 0599 19       		.uleb128 0x19
 1717 059a FB030000 		.4byte	.LASF63
 1718 059e FB030000 		.4byte	.LASF63
 1719 05a2 03       		.byte	0x3
 1720 05a3 E7       		.byte	0xe7
 1721 05a4 00       		.byte	0
 1722              		.section	.debug_abbrev,"",%progbits
 1723              	.Ldebug_abbrev0:
 1724 0000 01       		.uleb128 0x1
 1725 0001 11       		.uleb128 0x11
 1726 0002 01       		.byte	0x1
 1727 0003 25       		.uleb128 0x25
 1728 0004 0E       		.uleb128 0xe
 1729 0005 13       		.uleb128 0x13
 1730 0006 0B       		.uleb128 0xb
 1731 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 47


 1732 0008 0E       		.uleb128 0xe
 1733 0009 1B       		.uleb128 0x1b
 1734 000a 0E       		.uleb128 0xe
 1735 000b 55       		.uleb128 0x55
 1736 000c 17       		.uleb128 0x17
 1737 000d 11       		.uleb128 0x11
 1738 000e 01       		.uleb128 0x1
 1739 000f 10       		.uleb128 0x10
 1740 0010 17       		.uleb128 0x17
 1741 0011 00       		.byte	0
 1742 0012 00       		.byte	0
 1743 0013 02       		.uleb128 0x2
 1744 0014 24       		.uleb128 0x24
 1745 0015 00       		.byte	0
 1746 0016 0B       		.uleb128 0xb
 1747 0017 0B       		.uleb128 0xb
 1748 0018 3E       		.uleb128 0x3e
 1749 0019 0B       		.uleb128 0xb
 1750 001a 03       		.uleb128 0x3
 1751 001b 0E       		.uleb128 0xe
 1752 001c 00       		.byte	0
 1753 001d 00       		.byte	0
 1754 001e 03       		.uleb128 0x3
 1755 001f 24       		.uleb128 0x24
 1756 0020 00       		.byte	0
 1757 0021 0B       		.uleb128 0xb
 1758 0022 0B       		.uleb128 0xb
 1759 0023 3E       		.uleb128 0x3e
 1760 0024 0B       		.uleb128 0xb
 1761 0025 03       		.uleb128 0x3
 1762 0026 08       		.uleb128 0x8
 1763 0027 00       		.byte	0
 1764 0028 00       		.byte	0
 1765 0029 04       		.uleb128 0x4
 1766 002a 16       		.uleb128 0x16
 1767 002b 00       		.byte	0
 1768 002c 03       		.uleb128 0x3
 1769 002d 0E       		.uleb128 0xe
 1770 002e 3A       		.uleb128 0x3a
 1771 002f 0B       		.uleb128 0xb
 1772 0030 3B       		.uleb128 0x3b
 1773 0031 05       		.uleb128 0x5
 1774 0032 49       		.uleb128 0x49
 1775 0033 13       		.uleb128 0x13
 1776 0034 00       		.byte	0
 1777 0035 00       		.byte	0
 1778 0036 05       		.uleb128 0x5
 1779 0037 35       		.uleb128 0x35
 1780 0038 00       		.byte	0
 1781 0039 49       		.uleb128 0x49
 1782 003a 13       		.uleb128 0x13
 1783 003b 00       		.byte	0
 1784 003c 00       		.byte	0
 1785 003d 06       		.uleb128 0x6
 1786 003e 2E       		.uleb128 0x2e
 1787 003f 01       		.byte	0x1
 1788 0040 3F       		.uleb128 0x3f
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 48


 1789 0041 19       		.uleb128 0x19
 1790 0042 03       		.uleb128 0x3
 1791 0043 0E       		.uleb128 0xe
 1792 0044 3A       		.uleb128 0x3a
 1793 0045 0B       		.uleb128 0xb
 1794 0046 3B       		.uleb128 0x3b
 1795 0047 0B       		.uleb128 0xb
 1796 0048 27       		.uleb128 0x27
 1797 0049 19       		.uleb128 0x19
 1798 004a 11       		.uleb128 0x11
 1799 004b 01       		.uleb128 0x1
 1800 004c 12       		.uleb128 0x12
 1801 004d 06       		.uleb128 0x6
 1802 004e 40       		.uleb128 0x40
 1803 004f 18       		.uleb128 0x18
 1804 0050 9742     		.uleb128 0x2117
 1805 0052 19       		.uleb128 0x19
 1806 0053 01       		.uleb128 0x1
 1807 0054 13       		.uleb128 0x13
 1808 0055 00       		.byte	0
 1809 0056 00       		.byte	0
 1810 0057 07       		.uleb128 0x7
 1811 0058 34       		.uleb128 0x34
 1812 0059 00       		.byte	0
 1813 005a 03       		.uleb128 0x3
 1814 005b 0E       		.uleb128 0xe
 1815 005c 3A       		.uleb128 0x3a
 1816 005d 0B       		.uleb128 0xb
 1817 005e 3B       		.uleb128 0x3b
 1818 005f 0B       		.uleb128 0xb
 1819 0060 49       		.uleb128 0x49
 1820 0061 13       		.uleb128 0x13
 1821 0062 02       		.uleb128 0x2
 1822 0063 17       		.uleb128 0x17
 1823 0064 00       		.byte	0
 1824 0065 00       		.byte	0
 1825 0066 08       		.uleb128 0x8
 1826 0067 34       		.uleb128 0x34
 1827 0068 00       		.byte	0
 1828 0069 03       		.uleb128 0x3
 1829 006a 0E       		.uleb128 0xe
 1830 006b 3A       		.uleb128 0x3a
 1831 006c 0B       		.uleb128 0xb
 1832 006d 3B       		.uleb128 0x3b
 1833 006e 0B       		.uleb128 0xb
 1834 006f 49       		.uleb128 0x49
 1835 0070 13       		.uleb128 0x13
 1836 0071 02       		.uleb128 0x2
 1837 0072 18       		.uleb128 0x18
 1838 0073 00       		.byte	0
 1839 0074 00       		.byte	0
 1840 0075 09       		.uleb128 0x9
 1841 0076 898201   		.uleb128 0x4109
 1842 0079 01       		.byte	0x1
 1843 007a 11       		.uleb128 0x11
 1844 007b 01       		.uleb128 0x1
 1845 007c 31       		.uleb128 0x31
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 49


 1846 007d 13       		.uleb128 0x13
 1847 007e 01       		.uleb128 0x1
 1848 007f 13       		.uleb128 0x13
 1849 0080 00       		.byte	0
 1850 0081 00       		.byte	0
 1851 0082 0A       		.uleb128 0xa
 1852 0083 8A8201   		.uleb128 0x410a
 1853 0086 00       		.byte	0
 1854 0087 02       		.uleb128 0x2
 1855 0088 18       		.uleb128 0x18
 1856 0089 9142     		.uleb128 0x2111
 1857 008b 18       		.uleb128 0x18
 1858 008c 00       		.byte	0
 1859 008d 00       		.byte	0
 1860 008e 0B       		.uleb128 0xb
 1861 008f 898201   		.uleb128 0x4109
 1862 0092 01       		.byte	0x1
 1863 0093 11       		.uleb128 0x11
 1864 0094 01       		.uleb128 0x1
 1865 0095 31       		.uleb128 0x31
 1866 0096 13       		.uleb128 0x13
 1867 0097 00       		.byte	0
 1868 0098 00       		.byte	0
 1869 0099 0C       		.uleb128 0xc
 1870 009a 01       		.uleb128 0x1
 1871 009b 01       		.byte	0x1
 1872 009c 49       		.uleb128 0x49
 1873 009d 13       		.uleb128 0x13
 1874 009e 01       		.uleb128 0x1
 1875 009f 13       		.uleb128 0x13
 1876 00a0 00       		.byte	0
 1877 00a1 00       		.byte	0
 1878 00a2 0D       		.uleb128 0xd
 1879 00a3 21       		.uleb128 0x21
 1880 00a4 00       		.byte	0
 1881 00a5 49       		.uleb128 0x49
 1882 00a6 13       		.uleb128 0x13
 1883 00a7 2F       		.uleb128 0x2f
 1884 00a8 0B       		.uleb128 0xb
 1885 00a9 00       		.byte	0
 1886 00aa 00       		.byte	0
 1887 00ab 0E       		.uleb128 0xe
 1888 00ac 26       		.uleb128 0x26
 1889 00ad 00       		.byte	0
 1890 00ae 49       		.uleb128 0x49
 1891 00af 13       		.uleb128 0x13
 1892 00b0 00       		.byte	0
 1893 00b1 00       		.byte	0
 1894 00b2 0F       		.uleb128 0xf
 1895 00b3 2E       		.uleb128 0x2e
 1896 00b4 01       		.byte	0x1
 1897 00b5 3F       		.uleb128 0x3f
 1898 00b6 19       		.uleb128 0x19
 1899 00b7 03       		.uleb128 0x3
 1900 00b8 0E       		.uleb128 0xe
 1901 00b9 3A       		.uleb128 0x3a
 1902 00ba 0B       		.uleb128 0xb
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 50


 1903 00bb 3B       		.uleb128 0x3b
 1904 00bc 05       		.uleb128 0x5
 1905 00bd 27       		.uleb128 0x27
 1906 00be 19       		.uleb128 0x19
 1907 00bf 11       		.uleb128 0x11
 1908 00c0 01       		.uleb128 0x1
 1909 00c1 12       		.uleb128 0x12
 1910 00c2 06       		.uleb128 0x6
 1911 00c3 40       		.uleb128 0x40
 1912 00c4 18       		.uleb128 0x18
 1913 00c5 9742     		.uleb128 0x2117
 1914 00c7 19       		.uleb128 0x19
 1915 00c8 01       		.uleb128 0x1
 1916 00c9 13       		.uleb128 0x13
 1917 00ca 00       		.byte	0
 1918 00cb 00       		.byte	0
 1919 00cc 10       		.uleb128 0x10
 1920 00cd 898201   		.uleb128 0x4109
 1921 00d0 00       		.byte	0
 1922 00d1 11       		.uleb128 0x11
 1923 00d2 01       		.uleb128 0x1
 1924 00d3 31       		.uleb128 0x31
 1925 00d4 13       		.uleb128 0x13
 1926 00d5 00       		.byte	0
 1927 00d6 00       		.byte	0
 1928 00d7 11       		.uleb128 0x11
 1929 00d8 2E       		.uleb128 0x2e
 1930 00d9 00       		.byte	0
 1931 00da 3F       		.uleb128 0x3f
 1932 00db 19       		.uleb128 0x19
 1933 00dc 03       		.uleb128 0x3
 1934 00dd 0E       		.uleb128 0xe
 1935 00de 3A       		.uleb128 0x3a
 1936 00df 0B       		.uleb128 0xb
 1937 00e0 3B       		.uleb128 0x3b
 1938 00e1 05       		.uleb128 0x5
 1939 00e2 27       		.uleb128 0x27
 1940 00e3 19       		.uleb128 0x19
 1941 00e4 11       		.uleb128 0x11
 1942 00e5 01       		.uleb128 0x1
 1943 00e6 12       		.uleb128 0x12
 1944 00e7 06       		.uleb128 0x6
 1945 00e8 40       		.uleb128 0x40
 1946 00e9 18       		.uleb128 0x18
 1947 00ea 9742     		.uleb128 0x2117
 1948 00ec 19       		.uleb128 0x19
 1949 00ed 00       		.byte	0
 1950 00ee 00       		.byte	0
 1951 00ef 12       		.uleb128 0x12
 1952 00f0 2E       		.uleb128 0x2e
 1953 00f1 01       		.byte	0x1
 1954 00f2 3F       		.uleb128 0x3f
 1955 00f3 19       		.uleb128 0x19
 1956 00f4 03       		.uleb128 0x3
 1957 00f5 0E       		.uleb128 0xe
 1958 00f6 3A       		.uleb128 0x3a
 1959 00f7 0B       		.uleb128 0xb
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 51


 1960 00f8 3B       		.uleb128 0x3b
 1961 00f9 05       		.uleb128 0x5
 1962 00fa 27       		.uleb128 0x27
 1963 00fb 19       		.uleb128 0x19
 1964 00fc 49       		.uleb128 0x49
 1965 00fd 13       		.uleb128 0x13
 1966 00fe 11       		.uleb128 0x11
 1967 00ff 01       		.uleb128 0x1
 1968 0100 12       		.uleb128 0x12
 1969 0101 06       		.uleb128 0x6
 1970 0102 40       		.uleb128 0x40
 1971 0103 18       		.uleb128 0x18
 1972 0104 9742     		.uleb128 0x2117
 1973 0106 19       		.uleb128 0x19
 1974 0107 01       		.uleb128 0x1
 1975 0108 13       		.uleb128 0x13
 1976 0109 00       		.byte	0
 1977 010a 00       		.byte	0
 1978 010b 13       		.uleb128 0x13
 1979 010c 05       		.uleb128 0x5
 1980 010d 00       		.byte	0
 1981 010e 03       		.uleb128 0x3
 1982 010f 0E       		.uleb128 0xe
 1983 0110 3A       		.uleb128 0x3a
 1984 0111 0B       		.uleb128 0xb
 1985 0112 3B       		.uleb128 0x3b
 1986 0113 05       		.uleb128 0x5
 1987 0114 49       		.uleb128 0x49
 1988 0115 13       		.uleb128 0x13
 1989 0116 02       		.uleb128 0x2
 1990 0117 17       		.uleb128 0x17
 1991 0118 00       		.byte	0
 1992 0119 00       		.byte	0
 1993 011a 14       		.uleb128 0x14
 1994 011b 34       		.uleb128 0x34
 1995 011c 00       		.byte	0
 1996 011d 03       		.uleb128 0x3
 1997 011e 0E       		.uleb128 0xe
 1998 011f 3A       		.uleb128 0x3a
 1999 0120 0B       		.uleb128 0xb
 2000 0121 3B       		.uleb128 0x3b
 2001 0122 05       		.uleb128 0x5
 2002 0123 49       		.uleb128 0x49
 2003 0124 13       		.uleb128 0x13
 2004 0125 02       		.uleb128 0x2
 2005 0126 17       		.uleb128 0x17
 2006 0127 00       		.byte	0
 2007 0128 00       		.byte	0
 2008 0129 15       		.uleb128 0x15
 2009 012a 2E       		.uleb128 0x2e
 2010 012b 01       		.byte	0x1
 2011 012c 3F       		.uleb128 0x3f
 2012 012d 19       		.uleb128 0x19
 2013 012e 03       		.uleb128 0x3
 2014 012f 0E       		.uleb128 0xe
 2015 0130 3A       		.uleb128 0x3a
 2016 0131 0B       		.uleb128 0xb
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 52


 2017 0132 3B       		.uleb128 0x3b
 2018 0133 05       		.uleb128 0x5
 2019 0134 27       		.uleb128 0x27
 2020 0135 19       		.uleb128 0x19
 2021 0136 49       		.uleb128 0x49
 2022 0137 13       		.uleb128 0x13
 2023 0138 11       		.uleb128 0x11
 2024 0139 01       		.uleb128 0x1
 2025 013a 12       		.uleb128 0x12
 2026 013b 06       		.uleb128 0x6
 2027 013c 40       		.uleb128 0x40
 2028 013d 18       		.uleb128 0x18
 2029 013e 9642     		.uleb128 0x2116
 2030 0140 19       		.uleb128 0x19
 2031 0141 01       		.uleb128 0x1
 2032 0142 13       		.uleb128 0x13
 2033 0143 00       		.byte	0
 2034 0144 00       		.byte	0
 2035 0145 16       		.uleb128 0x16
 2036 0146 34       		.uleb128 0x34
 2037 0147 00       		.byte	0
 2038 0148 03       		.uleb128 0x3
 2039 0149 0E       		.uleb128 0xe
 2040 014a 3A       		.uleb128 0x3a
 2041 014b 0B       		.uleb128 0xb
 2042 014c 3B       		.uleb128 0x3b
 2043 014d 05       		.uleb128 0x5
 2044 014e 49       		.uleb128 0x49
 2045 014f 13       		.uleb128 0x13
 2046 0150 02       		.uleb128 0x2
 2047 0151 18       		.uleb128 0x18
 2048 0152 00       		.byte	0
 2049 0153 00       		.byte	0
 2050 0154 17       		.uleb128 0x17
 2051 0155 34       		.uleb128 0x34
 2052 0156 00       		.byte	0
 2053 0157 03       		.uleb128 0x3
 2054 0158 0E       		.uleb128 0xe
 2055 0159 3A       		.uleb128 0x3a
 2056 015a 0B       		.uleb128 0xb
 2057 015b 3B       		.uleb128 0x3b
 2058 015c 05       		.uleb128 0x5
 2059 015d 49       		.uleb128 0x49
 2060 015e 13       		.uleb128 0x13
 2061 015f 00       		.byte	0
 2062 0160 00       		.byte	0
 2063 0161 18       		.uleb128 0x18
 2064 0162 34       		.uleb128 0x34
 2065 0163 00       		.byte	0
 2066 0164 03       		.uleb128 0x3
 2067 0165 0E       		.uleb128 0xe
 2068 0166 3A       		.uleb128 0x3a
 2069 0167 0B       		.uleb128 0xb
 2070 0168 3B       		.uleb128 0x3b
 2071 0169 0B       		.uleb128 0xb
 2072 016a 49       		.uleb128 0x49
 2073 016b 13       		.uleb128 0x13
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 53


 2074 016c 3F       		.uleb128 0x3f
 2075 016d 19       		.uleb128 0x19
 2076 016e 02       		.uleb128 0x2
 2077 016f 18       		.uleb128 0x18
 2078 0170 00       		.byte	0
 2079 0171 00       		.byte	0
 2080 0172 19       		.uleb128 0x19
 2081 0173 2E       		.uleb128 0x2e
 2082 0174 00       		.byte	0
 2083 0175 3F       		.uleb128 0x3f
 2084 0176 19       		.uleb128 0x19
 2085 0177 3C       		.uleb128 0x3c
 2086 0178 19       		.uleb128 0x19
 2087 0179 6E       		.uleb128 0x6e
 2088 017a 0E       		.uleb128 0xe
 2089 017b 03       		.uleb128 0x3
 2090 017c 0E       		.uleb128 0xe
 2091 017d 3A       		.uleb128 0x3a
 2092 017e 0B       		.uleb128 0xb
 2093 017f 3B       		.uleb128 0x3b
 2094 0180 0B       		.uleb128 0xb
 2095 0181 00       		.byte	0
 2096 0182 00       		.byte	0
 2097 0183 00       		.byte	0
 2098              		.section	.debug_loc,"",%progbits
 2099              	.Ldebug_loc0:
 2100              	.LLST0:
 2101 0000 7C000000 		.4byte	.LVL5
 2102 0004 80000000 		.4byte	.LVL6
 2103 0008 0200     		.2byte	0x2
 2104 000a 30       		.byte	0x30
 2105 000b 9F       		.byte	0x9f
 2106 000c 80000000 		.4byte	.LVL6
 2107 0010 80010000 		.4byte	.LFE2
 2108 0014 0100     		.2byte	0x1
 2109 0016 52       		.byte	0x52
 2110 0017 00000000 		.4byte	0
 2111 001b 00000000 		.4byte	0
 2112              	.LLST1:
 2113 001f 70000000 		.4byte	.LVL2
 2114 0023 76000000 		.4byte	.LVL3
 2115 0027 0700     		.2byte	0x7
 2116 0029 71       		.byte	0x71
 2117 002a 00       		.sleb128 0
 2118 002b 40       		.byte	0x40
 2119 002c 49       		.byte	0x49
 2120 002d 24       		.byte	0x24
 2121 002e 21       		.byte	0x21
 2122 002f 9F       		.byte	0x9f
 2123 0030 7A000000 		.4byte	.LVL4
 2124 0034 80000000 		.4byte	.LVL6
 2125 0038 0100     		.2byte	0x1
 2126 003a 53       		.byte	0x53
 2127 003b 8C000000 		.4byte	.LVL7
 2128 003f 9E000000 		.4byte	.LVL9
 2129 0043 0100     		.2byte	0x1
 2130 0045 53       		.byte	0x53
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 54


 2131 0046 9E000000 		.4byte	.LVL9
 2132 004a A2000000 		.4byte	.LVL10
 2133 004e 0200     		.2byte	0x2
 2134 0050 71       		.byte	0x71
 2135 0051 00       		.sleb128 0
 2136 0052 A2000000 		.4byte	.LVL10
 2137 0056 AE000000 		.4byte	.LVL11
 2138 005a 0700     		.2byte	0x7
 2139 005c 72       		.byte	0x72
 2140 005d 00       		.sleb128 0
 2141 005e 32       		.byte	0x32
 2142 005f 24       		.byte	0x24
 2143 0060 7C       		.byte	0x7c
 2144 0061 00       		.sleb128 0
 2145 0062 22       		.byte	0x22
 2146 0063 AE000000 		.4byte	.LVL11
 2147 0067 B2000000 		.4byte	.LVL12
 2148 006b 1500     		.2byte	0x15
 2149 006d 74       		.byte	0x74
 2150 006e 00       		.sleb128 0
 2151 006f 0A       		.byte	0xa
 2152 0070 0037     		.2byte	0x3700
 2153 0072 1A       		.byte	0x1a
 2154 0073 72       		.byte	0x72
 2155 0074 00       		.sleb128 0
 2156 0075 03       		.byte	0x3
 2157 0076 08000000 		.4byte	.LANCHOR0+8
 2158 007a 22       		.byte	0x22
 2159 007b 94       		.byte	0x94
 2160 007c 01       		.byte	0x1
 2161 007d 08       		.byte	0x8
 2162 007e FF       		.byte	0xff
 2163 007f 1A       		.byte	0x1a
 2164 0080 21       		.byte	0x21
 2165 0081 9F       		.byte	0x9f
 2166 0082 B2000000 		.4byte	.LVL12
 2167 0086 BC000000 		.4byte	.LVL13
 2168 008a 1400     		.2byte	0x14
 2169 008c 74       		.byte	0x74
 2170 008d 00       		.sleb128 0
 2171 008e 0A       		.byte	0xa
 2172 008f 0037     		.2byte	0x3700
 2173 0091 1A       		.byte	0x1a
 2174 0092 71       		.byte	0x71
 2175 0093 00       		.sleb128 0
 2176 0094 72       		.byte	0x72
 2177 0095 00       		.sleb128 0
 2178 0096 22       		.byte	0x22
 2179 0097 23       		.byte	0x23
 2180 0098 08       		.uleb128 0x8
 2181 0099 94       		.byte	0x94
 2182 009a 01       		.byte	0x1
 2183 009b 08       		.byte	0x8
 2184 009c FF       		.byte	0xff
 2185 009d 1A       		.byte	0x1a
 2186 009e 21       		.byte	0x21
 2187 009f 9F       		.byte	0x9f
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 55


 2188 00a0 BC000000 		.4byte	.LVL13
 2189 00a4 CC000000 		.4byte	.LVL14
 2190 00a8 1500     		.2byte	0x15
 2191 00aa 74       		.byte	0x74
 2192 00ab 00       		.sleb128 0
 2193 00ac 0A       		.byte	0xa
 2194 00ad 0037     		.2byte	0x3700
 2195 00af 1A       		.byte	0x1a
 2196 00b0 72       		.byte	0x72
 2197 00b1 00       		.sleb128 0
 2198 00b2 03       		.byte	0x3
 2199 00b3 08000000 		.4byte	.LANCHOR0+8
 2200 00b7 22       		.byte	0x22
 2201 00b8 94       		.byte	0x94
 2202 00b9 01       		.byte	0x1
 2203 00ba 08       		.byte	0x8
 2204 00bb FF       		.byte	0xff
 2205 00bc 1A       		.byte	0x1a
 2206 00bd 21       		.byte	0x21
 2207 00be 9F       		.byte	0x9f
 2208 00bf CC000000 		.4byte	.LVL14
 2209 00c3 CE000000 		.4byte	.LVL15
 2210 00c7 1400     		.2byte	0x14
 2211 00c9 74       		.byte	0x74
 2212 00ca 00       		.sleb128 0
 2213 00cb 0A       		.byte	0xa
 2214 00cc 0037     		.2byte	0x3700
 2215 00ce 1A       		.byte	0x1a
 2216 00cf 71       		.byte	0x71
 2217 00d0 00       		.sleb128 0
 2218 00d1 72       		.byte	0x72
 2219 00d2 00       		.sleb128 0
 2220 00d3 22       		.byte	0x22
 2221 00d4 23       		.byte	0x23
 2222 00d5 08       		.uleb128 0x8
 2223 00d6 94       		.byte	0x94
 2224 00d7 01       		.byte	0x1
 2225 00d8 08       		.byte	0x8
 2226 00d9 FF       		.byte	0xff
 2227 00da 1A       		.byte	0x1a
 2228 00db 21       		.byte	0x21
 2229 00dc 9F       		.byte	0x9f
 2230 00dd CE000000 		.4byte	.LVL15
 2231 00e1 E4000000 		.4byte	.LVL17
 2232 00e5 1500     		.2byte	0x15
 2233 00e7 74       		.byte	0x74
 2234 00e8 00       		.sleb128 0
 2235 00e9 0A       		.byte	0xa
 2236 00ea 0037     		.2byte	0x3700
 2237 00ec 1A       		.byte	0x1a
 2238 00ed 72       		.byte	0x72
 2239 00ee 00       		.sleb128 0
 2240 00ef 03       		.byte	0x3
 2241 00f0 08000000 		.4byte	.LANCHOR0+8
 2242 00f4 22       		.byte	0x22
 2243 00f5 94       		.byte	0x94
 2244 00f6 01       		.byte	0x1
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 56


 2245 00f7 08       		.byte	0x8
 2246 00f8 FF       		.byte	0xff
 2247 00f9 1A       		.byte	0x1a
 2248 00fa 21       		.byte	0x21
 2249 00fb 9F       		.byte	0x9f
 2250 00fc E4000000 		.4byte	.LVL17
 2251 0100 EA000000 		.4byte	.LVL18
 2252 0104 1E00     		.2byte	0x1e
 2253 0106 72       		.byte	0x72
 2254 0107 00       		.sleb128 0
 2255 0108 32       		.byte	0x32
 2256 0109 24       		.byte	0x24
 2257 010a 03       		.byte	0x3
 2258 010b 00000000 		.4byte	.LANCHOR0
 2259 010f 22       		.byte	0x22
 2260 0110 06       		.byte	0x6
 2261 0111 0A       		.byte	0xa
 2262 0112 0037     		.2byte	0x3700
 2263 0114 1A       		.byte	0x1a
 2264 0115 72       		.byte	0x72
 2265 0116 00       		.sleb128 0
 2266 0117 03       		.byte	0x3
 2267 0118 08000000 		.4byte	.LANCHOR0+8
 2268 011c 22       		.byte	0x22
 2269 011d 94       		.byte	0x94
 2270 011e 01       		.byte	0x1
 2271 011f 08       		.byte	0x8
 2272 0120 FF       		.byte	0xff
 2273 0121 1A       		.byte	0x1a
 2274 0122 21       		.byte	0x21
 2275 0123 9F       		.byte	0x9f
 2276 0124 EA000000 		.4byte	.LVL18
 2277 0128 EE000000 		.4byte	.LVL19
 2278 012c 1500     		.2byte	0x15
 2279 012e 74       		.byte	0x74
 2280 012f 00       		.sleb128 0
 2281 0130 0A       		.byte	0xa
 2282 0131 0037     		.2byte	0x3700
 2283 0133 1A       		.byte	0x1a
 2284 0134 72       		.byte	0x72
 2285 0135 00       		.sleb128 0
 2286 0136 03       		.byte	0x3
 2287 0137 08000000 		.4byte	.LANCHOR0+8
 2288 013b 22       		.byte	0x22
 2289 013c 94       		.byte	0x94
 2290 013d 01       		.byte	0x1
 2291 013e 08       		.byte	0x8
 2292 013f FF       		.byte	0xff
 2293 0140 1A       		.byte	0x1a
 2294 0141 21       		.byte	0x21
 2295 0142 9F       		.byte	0x9f
 2296 0143 EE000000 		.4byte	.LVL19
 2297 0147 12010000 		.4byte	.LVL21
 2298 014b 1E00     		.2byte	0x1e
 2299 014d 72       		.byte	0x72
 2300 014e 00       		.sleb128 0
 2301 014f 32       		.byte	0x32
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 57


 2302 0150 24       		.byte	0x24
 2303 0151 03       		.byte	0x3
 2304 0152 00000000 		.4byte	.LANCHOR0
 2305 0156 22       		.byte	0x22
 2306 0157 06       		.byte	0x6
 2307 0158 0A       		.byte	0xa
 2308 0159 0037     		.2byte	0x3700
 2309 015b 1A       		.byte	0x1a
 2310 015c 72       		.byte	0x72
 2311 015d 00       		.sleb128 0
 2312 015e 03       		.byte	0x3
 2313 015f 08000000 		.4byte	.LANCHOR0+8
 2314 0163 22       		.byte	0x22
 2315 0164 94       		.byte	0x94
 2316 0165 01       		.byte	0x1
 2317 0166 08       		.byte	0x8
 2318 0167 FF       		.byte	0xff
 2319 0168 1A       		.byte	0x1a
 2320 0169 21       		.byte	0x21
 2321 016a 9F       		.byte	0x9f
 2322 016b 00000000 		.4byte	0
 2323 016f 00000000 		.4byte	0
 2324              	.LLST2:
 2325 0173 DC000000 		.4byte	.LVL16
 2326 0177 0C010000 		.4byte	.LVL20
 2327 017b 0100     		.2byte	0x1
 2328 017d 50       		.byte	0x50
 2329 017e 00000000 		.4byte	0
 2330 0182 00000000 		.4byte	0
 2331              	.LLST3:
 2332 0186 00000000 		.4byte	.LVL25
 2333 018a 06000000 		.4byte	.LVL27
 2334 018e 0100     		.2byte	0x1
 2335 0190 50       		.byte	0x50
 2336 0191 06000000 		.4byte	.LVL27
 2337 0195 1A000000 		.4byte	.LVL29
 2338 0199 0100     		.2byte	0x1
 2339 019b 52       		.byte	0x52
 2340 019c 1A000000 		.4byte	.LVL29
 2341 01a0 20000000 		.4byte	.LVL30
 2342 01a4 0400     		.2byte	0x4
 2343 01a6 F3       		.byte	0xf3
 2344 01a7 01       		.uleb128 0x1
 2345 01a8 50       		.byte	0x50
 2346 01a9 9F       		.byte	0x9f
 2347 01aa 20000000 		.4byte	.LVL30
 2348 01ae 22000000 		.4byte	.LVL31
 2349 01b2 0100     		.2byte	0x1
 2350 01b4 50       		.byte	0x50
 2351 01b5 22000000 		.4byte	.LVL31
 2352 01b9 28000000 		.4byte	.LFE7
 2353 01bd 0400     		.2byte	0x4
 2354 01bf F3       		.byte	0xf3
 2355 01c0 01       		.uleb128 0x1
 2356 01c1 50       		.byte	0x50
 2357 01c2 9F       		.byte	0x9f
 2358 01c3 00000000 		.4byte	0
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 58


 2359 01c7 00000000 		.4byte	0
 2360              	.LLST4:
 2361 01cb 02000000 		.4byte	.LVL26
 2362 01cf 06000000 		.4byte	.LVL27
 2363 01d3 0200     		.2byte	0x2
 2364 01d5 30       		.byte	0x30
 2365 01d6 9F       		.byte	0x9f
 2366 01d7 0E000000 		.4byte	.LVL28
 2367 01db 20000000 		.4byte	.LVL30
 2368 01df 0100     		.2byte	0x1
 2369 01e1 50       		.byte	0x50
 2370 01e2 20000000 		.4byte	.LVL30
 2371 01e6 22000000 		.4byte	.LVL31
 2372 01ea 0200     		.2byte	0x2
 2373 01ec 30       		.byte	0x30
 2374 01ed 9F       		.byte	0x9f
 2375 01ee 22000000 		.4byte	.LVL31
 2376 01f2 28000000 		.4byte	.LFE7
 2377 01f6 0100     		.2byte	0x1
 2378 01f8 50       		.byte	0x50
 2379 01f9 00000000 		.4byte	0
 2380 01fd 00000000 		.4byte	0
 2381              	.LLST5:
 2382 0201 00000000 		.4byte	.LVL32
 2383 0205 0A000000 		.4byte	.LVL33
 2384 0209 0100     		.2byte	0x1
 2385 020b 50       		.byte	0x50
 2386 020c 0A000000 		.4byte	.LVL33
 2387 0210 14000000 		.4byte	.LVL35
 2388 0214 0100     		.2byte	0x1
 2389 0216 54       		.byte	0x54
 2390 0217 14000000 		.4byte	.LVL35
 2391 021b 22000000 		.4byte	.LVL37
 2392 021f 0400     		.2byte	0x4
 2393 0221 F3       		.byte	0xf3
 2394 0222 01       		.uleb128 0x1
 2395 0223 50       		.byte	0x50
 2396 0224 9F       		.byte	0x9f
 2397 0225 22000000 		.4byte	.LVL37
 2398 0229 24000000 		.4byte	.LVL38
 2399 022d 0100     		.2byte	0x1
 2400 022f 54       		.byte	0x54
 2401 0230 24000000 		.4byte	.LVL38
 2402 0234 2C000000 		.4byte	.LFE8
 2403 0238 0400     		.2byte	0x4
 2404 023a F3       		.byte	0xf3
 2405 023b 01       		.uleb128 0x1
 2406 023c 50       		.byte	0x50
 2407 023d 9F       		.byte	0x9f
 2408 023e 00000000 		.4byte	0
 2409 0242 00000000 		.4byte	0
 2410              	.LLST6:
 2411 0246 20000000 		.4byte	.LVL36
 2412 024a 22000000 		.4byte	.LVL37
 2413 024e 0100     		.2byte	0x1
 2414 0250 50       		.byte	0x50
 2415 0251 24000000 		.4byte	.LVL38
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 59


 2416 0255 26000000 		.4byte	.LVL39
 2417 0259 0100     		.2byte	0x1
 2418 025b 50       		.byte	0x50
 2419 025c 00000000 		.4byte	0
 2420 0260 00000000 		.4byte	0
 2421              	.LLST7:
 2422 0264 00000000 		.4byte	.LVL40
 2423 0268 04000000 		.4byte	.LVL41
 2424 026c 0100     		.2byte	0x1
 2425 026e 50       		.byte	0x50
 2426 026f 04000000 		.4byte	.LVL41
 2427 0273 10000000 		.4byte	.LFE9
 2428 0277 0400     		.2byte	0x4
 2429 0279 F3       		.byte	0xf3
 2430 027a 01       		.uleb128 0x1
 2431 027b 50       		.byte	0x50
 2432 027c 9F       		.byte	0x9f
 2433 027d 00000000 		.4byte	0
 2434 0281 00000000 		.4byte	0
 2435              	.LLST8:
 2436 0285 00000000 		.4byte	.LVL42
 2437 0289 0E000000 		.4byte	.LVL43
 2438 028d 0100     		.2byte	0x1
 2439 028f 50       		.byte	0x50
 2440 0290 0E000000 		.4byte	.LVL43
 2441 0294 1C000000 		.4byte	.LFE10
 2442 0298 0400     		.2byte	0x4
 2443 029a F3       		.byte	0xf3
 2444 029b 01       		.uleb128 0x1
 2445 029c 50       		.byte	0x50
 2446 029d 9F       		.byte	0x9f
 2447 029e 00000000 		.4byte	0
 2448 02a2 00000000 		.4byte	0
 2449              	.LLST9:
 2450 02a6 00000000 		.4byte	.LVL44
 2451 02aa 0E000000 		.4byte	.LVL45
 2452 02ae 0100     		.2byte	0x1
 2453 02b0 50       		.byte	0x50
 2454 02b1 0E000000 		.4byte	.LVL45
 2455 02b5 18000000 		.4byte	.LFE11
 2456 02b9 0400     		.2byte	0x4
 2457 02bb F3       		.byte	0xf3
 2458 02bc 01       		.uleb128 0x1
 2459 02bd 50       		.byte	0x50
 2460 02be 9F       		.byte	0x9f
 2461 02bf 00000000 		.4byte	0
 2462 02c3 00000000 		.4byte	0
 2463              	.LLST10:
 2464 02c7 00000000 		.4byte	.LVL46
 2465 02cb 04000000 		.4byte	.LVL47
 2466 02cf 0100     		.2byte	0x1
 2467 02d1 50       		.byte	0x50
 2468 02d2 04000000 		.4byte	.LVL47
 2469 02d6 10000000 		.4byte	.LFE12
 2470 02da 0400     		.2byte	0x4
 2471 02dc F3       		.byte	0xf3
 2472 02dd 01       		.uleb128 0x1
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 60


 2473 02de 50       		.byte	0x50
 2474 02df 9F       		.byte	0x9f
 2475 02e0 00000000 		.4byte	0
 2476 02e4 00000000 		.4byte	0
 2477              	.LLST11:
 2478 02e8 00000000 		.4byte	.LVL48
 2479 02ec 04000000 		.4byte	.LVL49
 2480 02f0 0100     		.2byte	0x1
 2481 02f2 50       		.byte	0x50
 2482 02f3 04000000 		.4byte	.LVL49
 2483 02f7 10000000 		.4byte	.LFE13
 2484 02fb 0400     		.2byte	0x4
 2485 02fd F3       		.byte	0xf3
 2486 02fe 01       		.uleb128 0x1
 2487 02ff 50       		.byte	0x50
 2488 0300 9F       		.byte	0x9f
 2489 0301 00000000 		.4byte	0
 2490 0305 00000000 		.4byte	0
 2491              	.LLST12:
 2492 0309 00000000 		.4byte	.LVL50
 2493 030d 0C000000 		.4byte	.LVL51
 2494 0311 0100     		.2byte	0x1
 2495 0313 50       		.byte	0x50
 2496 0314 0C000000 		.4byte	.LVL51
 2497 0318 12000000 		.4byte	.LVL53
 2498 031c 0100     		.2byte	0x1
 2499 031e 54       		.byte	0x54
 2500 031f 12000000 		.4byte	.LVL53
 2501 0323 1C000000 		.4byte	.LFE14
 2502 0327 0400     		.2byte	0x4
 2503 0329 F3       		.byte	0xf3
 2504 032a 01       		.uleb128 0x1
 2505 032b 50       		.byte	0x50
 2506 032c 9F       		.byte	0x9f
 2507 032d 00000000 		.4byte	0
 2508 0331 00000000 		.4byte	0
 2509              	.LLST13:
 2510 0335 00000000 		.4byte	.LVL50
 2511 0339 0F000000 		.4byte	.LVL52-1
 2512 033d 0100     		.2byte	0x1
 2513 033f 51       		.byte	0x51
 2514 0340 0F000000 		.4byte	.LVL52-1
 2515 0344 1C000000 		.4byte	.LFE14
 2516 0348 0400     		.2byte	0x4
 2517 034a F3       		.byte	0xf3
 2518 034b 01       		.uleb128 0x1
 2519 034c 51       		.byte	0x51
 2520 034d 9F       		.byte	0x9f
 2521 034e 00000000 		.4byte	0
 2522 0352 00000000 		.4byte	0
 2523              	.LLST14:
 2524 0356 00000000 		.4byte	.LVL54
 2525 035a 0C000000 		.4byte	.LVL55
 2526 035e 0100     		.2byte	0x1
 2527 0360 50       		.byte	0x50
 2528 0361 0C000000 		.4byte	.LVL55
 2529 0365 12000000 		.4byte	.LVL57
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 61


 2530 0369 0100     		.2byte	0x1
 2531 036b 54       		.byte	0x54
 2532 036c 12000000 		.4byte	.LVL57
 2533 0370 1C000000 		.4byte	.LFE15
 2534 0374 0400     		.2byte	0x4
 2535 0376 F3       		.byte	0xf3
 2536 0377 01       		.uleb128 0x1
 2537 0378 50       		.byte	0x50
 2538 0379 9F       		.byte	0x9f
 2539 037a 00000000 		.4byte	0
 2540 037e 00000000 		.4byte	0
 2541              	.LLST15:
 2542 0382 00000000 		.4byte	.LVL54
 2543 0386 0F000000 		.4byte	.LVL56-1
 2544 038a 0100     		.2byte	0x1
 2545 038c 51       		.byte	0x51
 2546 038d 0F000000 		.4byte	.LVL56-1
 2547 0391 16000000 		.4byte	.LVL58
 2548 0395 0100     		.2byte	0x1
 2549 0397 55       		.byte	0x55
 2550 0398 16000000 		.4byte	.LVL58
 2551 039c 1C000000 		.4byte	.LFE15
 2552 03a0 0800     		.2byte	0x8
 2553 03a2 F3       		.byte	0xf3
 2554 03a3 01       		.uleb128 0x1
 2555 03a4 50       		.byte	0x50
 2556 03a5 32       		.byte	0x32
 2557 03a6 24       		.byte	0x24
 2558 03a7 73       		.byte	0x73
 2559 03a8 00       		.sleb128 0
 2560 03a9 22       		.byte	0x22
 2561 03aa 00000000 		.4byte	0
 2562 03ae 00000000 		.4byte	0
 2563              	.LLST16:
 2564 03b2 00000000 		.4byte	.LVL59
 2565 03b6 0C000000 		.4byte	.LVL60
 2566 03ba 0100     		.2byte	0x1
 2567 03bc 50       		.byte	0x50
 2568 03bd 0C000000 		.4byte	.LVL60
 2569 03c1 44000000 		.4byte	.LVL63
 2570 03c5 0100     		.2byte	0x1
 2571 03c7 54       		.byte	0x54
 2572 03c8 44000000 		.4byte	.LVL63
 2573 03cc 5C000000 		.4byte	.LFE16
 2574 03d0 0400     		.2byte	0x4
 2575 03d2 F3       		.byte	0xf3
 2576 03d3 01       		.uleb128 0x1
 2577 03d4 50       		.byte	0x50
 2578 03d5 9F       		.byte	0x9f
 2579 03d6 00000000 		.4byte	0
 2580 03da 00000000 		.4byte	0
 2581              	.LLST17:
 2582 03de 00000000 		.4byte	.LVL59
 2583 03e2 0F000000 		.4byte	.LVL61-1
 2584 03e6 0100     		.2byte	0x1
 2585 03e8 51       		.byte	0x51
 2586 03e9 0F000000 		.4byte	.LVL61-1
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 62


 2587 03ed 1C000000 		.4byte	.LVL62
 2588 03f1 0400     		.2byte	0x4
 2589 03f3 F3       		.byte	0xf3
 2590 03f4 01       		.uleb128 0x1
 2591 03f5 51       		.byte	0x51
 2592 03f6 9F       		.byte	0x9f
 2593 03f7 1C000000 		.4byte	.LVL62
 2594 03fb 48000000 		.4byte	.LVL64
 2595 03ff 0100     		.2byte	0x1
 2596 0401 51       		.byte	0x51
 2597 0402 00000000 		.4byte	0
 2598 0406 00000000 		.4byte	0
 2599              	.LLST18:
 2600 040a 00000000 		.4byte	.LVL67
 2601 040e 0C000000 		.4byte	.LVL68
 2602 0412 0100     		.2byte	0x1
 2603 0414 50       		.byte	0x50
 2604 0415 0C000000 		.4byte	.LVL68
 2605 0419 28000000 		.4byte	.LVL72
 2606 041d 0100     		.2byte	0x1
 2607 041f 55       		.byte	0x55
 2608 0420 28000000 		.4byte	.LVL72
 2609 0424 40000000 		.4byte	.LFE17
 2610 0428 0400     		.2byte	0x4
 2611 042a F3       		.byte	0xf3
 2612 042b 01       		.uleb128 0x1
 2613 042c 50       		.byte	0x50
 2614 042d 9F       		.byte	0x9f
 2615 042e 00000000 		.4byte	0
 2616 0432 00000000 		.4byte	0
 2617              	.LLST19:
 2618 0436 00000000 		.4byte	.LVL67
 2619 043a 0F000000 		.4byte	.LVL69-1
 2620 043e 0100     		.2byte	0x1
 2621 0440 51       		.byte	0x51
 2622 0441 0F000000 		.4byte	.LVL69-1
 2623 0445 1C000000 		.4byte	.LVL70
 2624 0449 0400     		.2byte	0x4
 2625 044b F3       		.byte	0xf3
 2626 044c 01       		.uleb128 0x1
 2627 044d 51       		.byte	0x51
 2628 044e 9F       		.byte	0x9f
 2629 044f 1C000000 		.4byte	.LVL70
 2630 0453 25000000 		.4byte	.LVL71-1
 2631 0457 0100     		.2byte	0x1
 2632 0459 50       		.byte	0x50
 2633 045a 00000000 		.4byte	0
 2634 045e 00000000 		.4byte	0
 2635              	.LLST20:
 2636 0462 00000000 		.4byte	.LVL74
 2637 0466 0C000000 		.4byte	.LVL75
 2638 046a 0100     		.2byte	0x1
 2639 046c 50       		.byte	0x50
 2640 046d 0C000000 		.4byte	.LVL75
 2641 0471 2A000000 		.4byte	.LVL80
 2642 0475 0100     		.2byte	0x1
 2643 0477 54       		.byte	0x54
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 63


 2644 0478 2A000000 		.4byte	.LVL80
 2645 047c 48000000 		.4byte	.LFE18
 2646 0480 0400     		.2byte	0x4
 2647 0482 F3       		.byte	0xf3
 2648 0483 01       		.uleb128 0x1
 2649 0484 50       		.byte	0x50
 2650 0485 9F       		.byte	0x9f
 2651 0486 00000000 		.4byte	0
 2652 048a 00000000 		.4byte	0
 2653              	.LLST21:
 2654 048e 00000000 		.4byte	.LVL74
 2655 0492 0F000000 		.4byte	.LVL76-1
 2656 0496 0100     		.2byte	0x1
 2657 0498 51       		.byte	0x51
 2658 0499 0F000000 		.4byte	.LVL76-1
 2659 049d 1C000000 		.4byte	.LVL77
 2660 04a1 0400     		.2byte	0x4
 2661 04a3 F3       		.byte	0xf3
 2662 04a4 01       		.uleb128 0x1
 2663 04a5 51       		.byte	0x51
 2664 04a6 9F       		.byte	0x9f
 2665 04a7 1C000000 		.4byte	.LVL77
 2666 04ab 1F000000 		.4byte	.LVL78-1
 2667 04af 0100     		.2byte	0x1
 2668 04b1 50       		.byte	0x50
 2669 04b2 00000000 		.4byte	0
 2670 04b6 00000000 		.4byte	0
 2671              		.section	.debug_aranges,"",%progbits
 2672 0000 A4000000 		.4byte	0xa4
 2673 0004 0200     		.2byte	0x2
 2674 0006 00000000 		.4byte	.Ldebug_info0
 2675 000a 04       		.byte	0x4
 2676 000b 00       		.byte	0
 2677 000c 0000     		.2byte	0
 2678 000e 0000     		.2byte	0
 2679 0010 00000000 		.4byte	.LFB2
 2680 0014 80010000 		.4byte	.LFE2-.LFB2
 2681 0018 00000000 		.4byte	.LFB3
 2682 001c 30000000 		.4byte	.LFE3-.LFB3
 2683 0020 00000000 		.4byte	.LFB1
 2684 0024 20000000 		.4byte	.LFE1-.LFB1
 2685 0028 00000000 		.4byte	.LFB4
 2686 002c 10000000 		.4byte	.LFE4-.LFB4
 2687 0030 00000000 		.4byte	.LFB5
 2688 0034 14000000 		.4byte	.LFE5-.LFB5
 2689 0038 00000000 		.4byte	.LFB6
 2690 003c 14000000 		.4byte	.LFE6-.LFB6
 2691 0040 00000000 		.4byte	.LFB7
 2692 0044 28000000 		.4byte	.LFE7-.LFB7
 2693 0048 00000000 		.4byte	.LFB8
 2694 004c 2C000000 		.4byte	.LFE8-.LFB8
 2695 0050 00000000 		.4byte	.LFB9
 2696 0054 10000000 		.4byte	.LFE9-.LFB9
 2697 0058 00000000 		.4byte	.LFB10
 2698 005c 1C000000 		.4byte	.LFE10-.LFB10
 2699 0060 00000000 		.4byte	.LFB11
 2700 0064 18000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 64


 2701 0068 00000000 		.4byte	.LFB12
 2702 006c 10000000 		.4byte	.LFE12-.LFB12
 2703 0070 00000000 		.4byte	.LFB13
 2704 0074 10000000 		.4byte	.LFE13-.LFB13
 2705 0078 00000000 		.4byte	.LFB14
 2706 007c 1C000000 		.4byte	.LFE14-.LFB14
 2707 0080 00000000 		.4byte	.LFB15
 2708 0084 1C000000 		.4byte	.LFE15-.LFB15
 2709 0088 00000000 		.4byte	.LFB16
 2710 008c 5C000000 		.4byte	.LFE16-.LFB16
 2711 0090 00000000 		.4byte	.LFB17
 2712 0094 40000000 		.4byte	.LFE17-.LFB17
 2713 0098 00000000 		.4byte	.LFB18
 2714 009c 48000000 		.4byte	.LFE18-.LFB18
 2715 00a0 00000000 		.4byte	0
 2716 00a4 00000000 		.4byte	0
 2717              		.section	.debug_ranges,"",%progbits
 2718              	.Ldebug_ranges0:
 2719 0000 00000000 		.4byte	.LFB2
 2720 0004 80010000 		.4byte	.LFE2
 2721 0008 00000000 		.4byte	.LFB3
 2722 000c 30000000 		.4byte	.LFE3
 2723 0010 00000000 		.4byte	.LFB1
 2724 0014 20000000 		.4byte	.LFE1
 2725 0018 00000000 		.4byte	.LFB4
 2726 001c 10000000 		.4byte	.LFE4
 2727 0020 00000000 		.4byte	.LFB5
 2728 0024 14000000 		.4byte	.LFE5
 2729 0028 00000000 		.4byte	.LFB6
 2730 002c 14000000 		.4byte	.LFE6
 2731 0030 00000000 		.4byte	.LFB7
 2732 0034 28000000 		.4byte	.LFE7
 2733 0038 00000000 		.4byte	.LFB8
 2734 003c 2C000000 		.4byte	.LFE8
 2735 0040 00000000 		.4byte	.LFB9
 2736 0044 10000000 		.4byte	.LFE9
 2737 0048 00000000 		.4byte	.LFB10
 2738 004c 1C000000 		.4byte	.LFE10
 2739 0050 00000000 		.4byte	.LFB11
 2740 0054 18000000 		.4byte	.LFE11
 2741 0058 00000000 		.4byte	.LFB12
 2742 005c 10000000 		.4byte	.LFE12
 2743 0060 00000000 		.4byte	.LFB13
 2744 0064 10000000 		.4byte	.LFE13
 2745 0068 00000000 		.4byte	.LFB14
 2746 006c 1C000000 		.4byte	.LFE14
 2747 0070 00000000 		.4byte	.LFB15
 2748 0074 1C000000 		.4byte	.LFE15
 2749 0078 00000000 		.4byte	.LFB16
 2750 007c 5C000000 		.4byte	.LFE16
 2751 0080 00000000 		.4byte	.LFB17
 2752 0084 40000000 		.4byte	.LFE17
 2753 0088 00000000 		.4byte	.LFB18
 2754 008c 48000000 		.4byte	.LFE18
 2755 0090 00000000 		.4byte	0
 2756 0094 00000000 		.4byte	0
 2757              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 65


 2758              	.Ldebug_line0:
 2759 0000 98020000 		.section	.debug_str,"MS",%progbits,1
 2759      02005500 
 2759      00000201 
 2759      FB0E0D00 
 2759      01010101 
 2760              	.LASF58:
 2761 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2761      5341525F 
 2761      5365715F 
 2761      315F6F66 
 2761      66736574 
 2762              	.LASF10:
 2763 0015 75696E74 		.ascii	"uint16\000"
 2763      313600
 2764              	.LASF26:
 2765 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2765      5341525F 
 2765      5365715F 
 2765      315F496E 
 2765      697400
 2766              	.LASF49:
 2767 002f 61646347 		.ascii	"adcGain\000"
 2767      61696E00 
 2768              	.LASF24:
 2769 0037 636F756E 		.ascii	"counts\000"
 2769      747300
 2770              	.LASF30:
 2771 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2771      5341525F 
 2771      5365715F 
 2771      315F5374 
 2771      61727443 
 2772              	.LASF45:
 2773 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2773      5341525F 
 2773      5365715F 
 2773      315F5365 
 2773      74536174 
 2774              	.LASF64:
 2775 0072 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2775      43313120 
 2775      352E342E 
 2775      31203230 
 2775      31363036 
 2776 00a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2776      20726576 
 2776      6973696F 
 2776      6E203233 
 2776      37373135 
 2777 00d8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2777      66756E63 
 2777      74696F6E 
 2777      2D736563 
 2777      74696F6E 
 2778              	.LASF28:
 2779 0100 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 66


 2779      5341525F 
 2779      5365715F 
 2779      315F5374 
 2779      61727400 
 2780              	.LASF7:
 2781 0114 6C6F6E67 		.ascii	"long long unsigned int\000"
 2781      206C6F6E 
 2781      6720756E 
 2781      7369676E 
 2781      65642069 
 2782              	.LASF27:
 2783 012b 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2783      5341525F 
 2783      5365715F 
 2783      315F456E 
 2783      61626C65 
 2784              	.LASF25:
 2785 0140 4144435F 		.ascii	"ADC_SAR_Seq_1_InputsPlacement\000"
 2785      5341525F 
 2785      5365715F 
 2785      315F496E 
 2785      70757473 
 2786              	.LASF34:
 2787 015e 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2787      5341525F 
 2787      5365715F 
 2787      315F4765 
 2787      74526573 
 2788              	.LASF6:
 2789 0178 6C6F6E67 		.ascii	"long long int\000"
 2789      206C6F6E 
 2789      6720696E 
 2789      7400
 2790              	.LASF0:
 2791 0186 7369676E 		.ascii	"signed char\000"
 2791      65642063 
 2791      68617200 
 2792              	.LASF42:
 2793 0192 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2793      5341525F 
 2793      5365715F 
 2793      315F5365 
 2793      74486967 
 2794              	.LASF13:
 2795 01ad 696E7433 		.ascii	"int32\000"
 2795      3200
 2796              	.LASF53:
 2797 01b3 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2797      5341525F 
 2797      5365715F 
 2797      315F436F 
 2797      756E7473 
 2798              	.LASF4:
 2799 01d1 6C6F6E67 		.ascii	"long int\000"
 2799      20696E74 
 2799      00
 2800              	.LASF66:
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 67


 2801 01da 433A5C55 		.ascii	"C:\\Users\\austc\\OneDrive\\Documents\\Altium\\Moto"
 2801      73657273 
 2801      5C617573 
 2801      74635C4F 
 2801      6E654472 
 2802 0207 722D556E 		.ascii	"r-Unit-Firmware-A-2019-2020\\Motor Unit\\Motor Boar"
 2802      69742D46 
 2802      69726D77 
 2802      6172652D 
 2802      412D3230 
 2803 0238 64205265 		.ascii	"d Rev2.cydsn\000"
 2803      76322E63 
 2803      7964736E 
 2803      00
 2804              	.LASF9:
 2805 0245 75696E74 		.ascii	"uint8\000"
 2805      3800
 2806              	.LASF62:
 2807 024b 43794465 		.ascii	"CyDelayUs\000"
 2807      6C617955 
 2807      7300
 2808              	.LASF16:
 2809 0255 646F7562 		.ascii	"double\000"
 2809      6C6500
 2810              	.LASF11:
 2811 025c 75696E74 		.ascii	"uint32\000"
 2811      333200
 2812              	.LASF39:
 2813 0263 6D61736B 		.ascii	"mask\000"
 2813      00
 2814              	.LASF50:
 2815 0268 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2815      5341525F 
 2815      5365715F 
 2815      315F436F 
 2815      756E7473 
 2816              	.LASF35:
 2817 0286 7265744D 		.ascii	"retMode\000"
 2817      6F646500 
 2818              	.LASF57:
 2819 028e 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2819      5341525F 
 2819      5365715F 
 2819      315F696E 
 2819      69745661 
 2820              	.LASF8:
 2821 02a4 756E7369 		.ascii	"unsigned int\000"
 2821      676E6564 
 2821      20696E74 
 2821      00
 2822              	.LASF67:
 2823 02b1 75566F6C 		.ascii	"uVolts\000"
 2823      747300
 2824              	.LASF5:
 2825 02b8 6C6F6E67 		.ascii	"long unsigned int\000"
 2825      20756E73 
 2825      69676E65 
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 68


 2825      6420696E 
 2825      7400
 2826              	.LASF55:
 2827 02ca 766F6C74 		.ascii	"volts\000"
 2827      7300
 2828              	.LASF23:
 2829 02d0 746D7052 		.ascii	"tmpRegVal\000"
 2829      65675661 
 2829      6C00
 2830              	.LASF3:
 2831 02da 73686F72 		.ascii	"short unsigned int\000"
 2831      7420756E 
 2831      7369676E 
 2831      65642069 
 2831      6E7400
 2832              	.LASF61:
 2833 02ed 4379496E 		.ascii	"CyIntSetVector\000"
 2833      74536574 
 2833      56656374 
 2833      6F7200
 2834              	.LASF56:
 2835 02fc 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2835      5341525F 
 2835      5365715F 
 2835      315F6368 
 2835      616E6E65 
 2836              	.LASF52:
 2837 0319 6D566F6C 		.ascii	"mVolts\000"
 2837      747300
 2838              	.LASF19:
 2839 0320 72656733 		.ascii	"reg32\000"
 2839      3200
 2840              	.LASF14:
 2841 0326 666C6F61 		.ascii	"float32\000"
 2841      74333200 
 2842              	.LASF21:
 2843 032e 73697A65 		.ascii	"sizetype\000"
 2843      74797065 
 2843      00
 2844              	.LASF41:
 2845 0337 6C6F774C 		.ascii	"lowLimit\000"
 2845      696D6974 
 2845      00
 2846              	.LASF20:
 2847 0340 6C6F6E67 		.ascii	"long double\000"
 2847      20646F75 
 2847      626C6500 
 2848              	.LASF33:
 2849 034c 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2849      5341525F 
 2849      5365715F 
 2849      315F4973 
 2849      456E6443 
 2850              	.LASF31:
 2851 036a 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2851      5341525F 
 2851      5365715F 
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 69


 2851      315F5374 
 2851      6F70436F 
 2852              	.LASF17:
 2853 0384 696E7436 		.ascii	"int64\000"
 2853      3400
 2854              	.LASF60:
 2855 038a 4379496E 		.ascii	"CyIntSetPriority\000"
 2855      74536574 
 2855      5072696F 
 2855      72697479 
 2855      00
 2856              	.LASF65:
 2857 039b 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2857      72617465 
 2857      645F536F 
 2857      75726365 
 2857      5C50536F 
 2858              	.LASF15:
 2859 03c2 666C6F61 		.ascii	"float\000"
 2859      7400
 2860              	.LASF48:
 2861 03c8 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2861      5341525F 
 2861      5365715F 
 2861      315F5365 
 2861      74476169 
 2862              	.LASF29:
 2863 03de 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2863      5341525F 
 2863      5365715F 
 2863      315F5374 
 2863      6F7000
 2864              	.LASF43:
 2865 03f1 68696768 		.ascii	"highLimit\000"
 2865      4C696D69 
 2865      7400
 2866              	.LASF63:
 2867 03fb 43794861 		.ascii	"CyHalt\000"
 2867      6C7400
 2868              	.LASF1:
 2869 0402 756E7369 		.ascii	"unsigned char\000"
 2869      676E6564 
 2869      20636861 
 2869      7200
 2870              	.LASF2:
 2871 0410 73686F72 		.ascii	"short int\000"
 2871      7420696E 
 2871      7400
 2872              	.LASF54:
 2873 041a 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2873      5341525F 
 2873      5365715F 
 2873      315F436F 
 2873      756E7473 
 2874              	.LASF38:
 2875 0437 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2875      5341525F 
ARM GAS  C:\Users\austc\AppData\Local\Temp\ccx87Xsn.s 			page 70


 2875      5365715F 
 2875      315F5365 
 2875      74436861 
 2876              	.LASF22:
 2877 0451 63684E75 		.ascii	"chNum\000"
 2877      6D00
 2878              	.LASF36:
 2879 0457 6368616E 		.ascii	"chan\000"
 2879      00
 2880              	.LASF18:
 2881 045c 63686172 		.ascii	"char\000"
 2881      00
 2882              	.LASF40:
 2883 0461 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2883      5341525F 
 2883      5365715F 
 2883      315F5365 
 2883      744C6F77 
 2884              	.LASF47:
 2885 047b 6F666673 		.ascii	"offset\000"
 2885      657400
 2886              	.LASF51:
 2887 0482 61646343 		.ascii	"adcCounts\000"
 2887      6F756E74 
 2887      7300
 2888              	.LASF59:
 2889 048c 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2889      5341525F 
 2889      5365715F 
 2889      315F636F 
 2889      756E7473 
 2890              	.LASF32:
 2891 04aa 73746174 		.ascii	"status\000"
 2891      757300
 2892              	.LASF46:
 2893 04b1 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2893      5341525F 
 2893      5365715F 
 2893      315F5365 
 2893      744F6666 
 2894              	.LASF12:
 2895 04c9 696E7431 		.ascii	"int16\000"
 2895      3600
 2896              	.LASF44:
 2897 04cf 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2897      5341525F 
 2897      5365715F 
 2897      315F5365 
 2897      744C696D 
 2898              	.LASF37:
 2899 04ea 72657375 		.ascii	"result\000"
 2899      6C7400
 2900              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
