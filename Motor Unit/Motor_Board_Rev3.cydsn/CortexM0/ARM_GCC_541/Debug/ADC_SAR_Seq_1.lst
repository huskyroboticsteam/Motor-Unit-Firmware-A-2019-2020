ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_Seq_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_SAR_Seq_1_Init
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_SAR_Seq_1_Init, %function
  25              	ADC_SAR_Seq_1_Init:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  19:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  20:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  27:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  28:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 2


  31:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u };
  34:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  35:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  38:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  40:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  45:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  48:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  51:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  62:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  65:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  67:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  70:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  73:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  74:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  77:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  79:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  83:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  84:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  87:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 3


  88:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  89:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  90:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  93:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  28              		.loc 1 95 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  96:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 100:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 4


 137:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 170:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  36              		.loc 1 172 0
  37 0002 0321     		movs	r1, #3
  38 0004 1120     		movs	r0, #17
  39 0006 FFF7FEFF 		bl	CyIntSetPriority
  40              	.LVL0:
 173:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  41              		.loc 1 173 0
  42 000a 2349     		ldr	r1, .L6
  43 000c 1120     		movs	r0, #17
  44 000e FFF7FEFF 		bl	CyIntSetVector
  45              	.LVL1:
 174:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 176:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  46              		.loc 1 177 0
  47 0012 0122     		movs	r2, #1
  48 0014 214B     		ldr	r3, .L6+4
  49 0016 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Enable the SAR internal pump when global pump is enabled */
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 5


 180:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (((ADC_SAR_Seq_1_PUMP_CTRL_REG & ADC_SAR_Seq_1_PUMP_CTRL_ENABLED) != 0u) ? 
  50              		.loc 1 180 0
  51 0018 214B     		ldr	r3, .L6+8
  52 001a 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  53              		.loc 1 178 0
  54 001c 002B     		cmp	r3, #0
  55 001e 01DA     		bge	.L5
  56 0020 2049     		ldr	r1, .L6+12
  57 0022 00E0     		b	.L2
  58              	.L5:
  59 0024 2049     		ldr	r1, .L6+16
  60              	.L2:
 178:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 is_stmt 0 discriminator 4
  62 0026 214A     		ldr	r2, .L6+20
  63 0028 1368     		ldr	r3, [r2]
  64 002a 0B43     		orrs	r3, r1
  65 002c 1360     		str	r3, [r2]
 181:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  66              		.loc 1 182 0 is_stmt 1 discriminator 4
  67 002e 204A     		ldr	r2, .L6+24
  68 0030 204B     		ldr	r3, .L6+28
  69 0032 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  70              		.loc 1 183 0 discriminator 4
  71 0034 204A     		ldr	r2, .L6+32
  72 0036 214B     		ldr	r3, .L6+36
  73 0038 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  74              		.loc 1 184 0 discriminator 4
  75 003a 0023     		movs	r3, #0
  76 003c 204A     		ldr	r2, .L6+40
  77 003e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  78              		.loc 1 185 0 discriminator 4
  79 0040 204A     		ldr	r2, .L6+44
  80 0042 2149     		ldr	r1, .L6+48
  81 0044 0A60     		str	r2, [r1]
 186:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  82              		.loc 1 186 0 discriminator 4
  83 0046 2149     		ldr	r1, .L6+52
  84 0048 0A60     		str	r2, [r1]
 187:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 188:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
  85              		.loc 1 190 0 discriminator 4
  86 004a 2149     		ldr	r1, .L6+56
  87 004c 0A68     		ldr	r2, [r1]
  88 004e 8020     		movs	r0, #128
  89 0050 4002     		lsls	r0, r0, #9
  90 0052 0243     		orrs	r2, r0
  91 0054 0A60     		str	r2, [r1]
 191:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 6


 193:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 197:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  92              		.loc 1 197 0 discriminator 4
  93 0056 1F4A     		ldr	r2, .L6+60
  94 0058 1360     		str	r3, [r2]
 198:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  95              		.loc 1 198 0 discriminator 4
  96 005a 1F4A     		ldr	r2, .L6+64
  97 005c 1360     		str	r3, [r2]
 199:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
  98              		.loc 1 199 0 discriminator 4
  99 005e 0122     		movs	r2, #1
 100 0060 1E4B     		ldr	r3, .L6+68
 101 0062 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 201:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
 203:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 205:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 102              		.loc 1 206 0 discriminator 4
 103 0064 1E4A     		ldr	r2, .L6+72
 104 0066 1168     		ldr	r1, [r2]
 105              	.LVL2:
 106 0068 1E4B     		ldr	r3, .L6+76
 107 006a 0B40     		ands	r3, r1
 207:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 208:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 209:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 214:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else
 216:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_DCEN;
 221:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DLY_INC;
 108              		.loc 1 221 0 discriminator 4
 109 006c 8021     		movs	r1, #128
 110              	.LVL3:
 111 006e 8905     		lsls	r1, r1, #22
 112 0070 0B43     		orrs	r3, r1
 113              	.LVL4:
 222:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ((ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    (ADC_SAR_Seq_1_DEFAULT_VREF_SEL == ADC_SAR_Seq_1__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER == ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 226:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 114              		.loc 1 226 0 discriminator 4
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 7


 115 0072 1360     		str	r3, [r2]
 116              	.LVL5:
 227:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 228:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 117              		.loc 1 232 0 discriminator 4
 118 0074 0023     		movs	r3, #0
 119              	.LVL6:
 120 0076 0BE0     		b	.L3
 121              	.LVL7:
 122              	.L4:
 233:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 235:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 239:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 240:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 249:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 123              		.loc 1 253 0
 124 0078 9A00     		lsls	r2, r3, #2
 125 007a 1B49     		ldr	r1, .L6+80
 126 007c 5018     		adds	r0, r2, r1
 127 007e 0021     		movs	r1, #0
 128 0080 0160     		str	r1, [r0]
 129              	.LVL8:
 254:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 255:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 256:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 8


 269:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 270:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 275:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 276:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 282:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 283:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 285:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 289:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 291:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 292:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 295:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 130              		.loc 1 298 0
 131 0082 5C00     		lsls	r4, r3, #1
 132 0084 1948     		ldr	r0, .L6+84
 133 0086 2152     		strh	r1, [r4, r0]
 299:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 309:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) +
 134              		.loc 1 311 0
 135 0088 1948     		ldr	r0, .L6+88
 136 008a 1A49     		ldr	r1, .L6+92
 137 008c 5050     		str	r0, [r2, r1]
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 138              		.loc 1 232 0
 139 008e 0133     		adds	r3, r3, #1
 140              	.LVL9:
 141              	.L3:
 232:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 9


 142              		.loc 1 232 0 is_stmt 0 discriminator 1
 143 0090 002B     		cmp	r3, #0
 144 0092 F1D0     		beq	.L4
 312:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 313:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 145              		.loc 1 314 0 is_stmt 1
 146              		@ sp needed
 147 0094 10BD     		pop	{r4, pc}
 148              	.L7:
 149 0096 C046     		.align	2
 150              	.L6:
 151 0098 00000000 		.word	ADC_SAR_Seq_1_ISR
 152 009c 20003A40 		.word	1077542944
 153 00a0 80033A40 		.word	1077543808
 154 00a4 C0021051 		.word	1360003776
 155 00a8 C0020051 		.word	1358955200
 156 00ac 00003A40 		.word	1077542912
 157 00b0 8C000080 		.word	-2147483508
 158 00b4 04003A40 		.word	1077542916
 159 00b8 0000FF07 		.word	134152192
 160 00bc 18003A40 		.word	1077542936
 161 00c0 1C003A40 		.word	1077542940
 162 00c4 02000200 		.word	131074
 163 00c8 10003A40 		.word	1077542928
 164 00cc 14003A40 		.word	1077542932
 165 00d0 00033A40 		.word	1077543680
 166 00d4 28023A40 		.word	1077543464
 167 00d8 38023A40 		.word	1077543480
 168 00dc 18023A40 		.word	1077543448
 169 00e0 30003A40 		.word	1077542960
 170 00e4 FEFFFFDF 		.word	-536870914
 171 00e8 80003A40 		.word	1077543040
 172 00ec 00000000 		.word	ADC_SAR_Seq_1_offset
 173 00f0 204E0000 		.word	20000
 174 00f4 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 175              		.cfi_endproc
 176              	.LFE2:
 177              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 178              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 179              		.align	2
 180              		.global	ADC_SAR_Seq_1_Enable
 181              		.code	16
 182              		.thumb_func
 183              		.type	ADC_SAR_Seq_1_Enable, %function
 184              	ADC_SAR_Seq_1_Enable:
 185              	.LFB3:
 315:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 316:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 320:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 323:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 10


 325:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 326:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 329:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 186              		.loc 1 331 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 10B5     		push	{r4, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 4, -8
 193              		.cfi_offset 14, -4
 332:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if (0u == (ADC_SAR_Seq_1_SAR_CTRL_REG & ADC_SAR_Seq_1_ENABLE))
 194              		.loc 1 332 0
 195 0002 094B     		ldr	r3, .L11
 196 0004 1B68     		ldr	r3, [r3]
 197 0006 002B     		cmp	r3, #0
 198 0008 0CDB     		blt	.L8
 199              	.L10:
 333:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 334:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             while (0u != (ADC_SAR_Seq_1_SAR_STATUS_REG & ADC_SAR_Seq_1_STATUS_BUSY))
 200              		.loc 1 336 0 discriminator 1
 201 000a 084B     		ldr	r3, .L11+4
 202 000c 1B68     		ldr	r3, [r3]
 203 000e 002B     		cmp	r3, #0
 204 0010 FBDB     		blt	.L10
 337:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* (ADC_SAR_Seq_1_CY_SAR_IP_VER != ADC_SAR_Seq_1_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 342:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 205              		.loc 1 342 0
 206 0012 054A     		ldr	r2, .L11
 207 0014 1368     		ldr	r3, [r2]
 208 0016 8021     		movs	r1, #128
 209 0018 0906     		lsls	r1, r1, #24
 210 001a 0B43     		orrs	r3, r1
 211 001c 1360     		str	r3, [r2]
 343:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         
 344:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);         
 212              		.loc 1 345 0
 213 001e 0A20     		movs	r0, #10
 214 0020 FFF7FEFF 		bl	CyDelayUs
 215              	.LVL10:
 216              	.L8:
 346:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 217              		.loc 1 347 0
 218              		@ sp needed
 219 0024 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 11


 220              	.L12:
 221 0026 C046     		.align	2
 222              	.L11:
 223 0028 00003A40 		.word	1077542912
 224 002c 08023A40 		.word	1077543432
 225              		.cfi_endproc
 226              	.LFE3:
 227              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 228              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 229              		.align	2
 230              		.global	ADC_SAR_Seq_1_Start
 231              		.code	16
 232              		.thumb_func
 233              		.type	ADC_SAR_Seq_1_Start, %function
 234              	ADC_SAR_Seq_1_Start:
 235              	.LFB1:
  64:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
 236              		.loc 1 64 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 10B5     		push	{r4, lr}
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 4, -8
 243              		.cfi_offset 14, -4
  66:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 244              		.loc 1 66 0
 245 0002 064B     		ldr	r3, .L15
 246 0004 1B78     		ldrb	r3, [r3]
 247 0006 002B     		cmp	r3, #0
 248 0008 04D1     		bne	.L14
  68:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 249              		.loc 1 68 0
 250 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 251              	.LVL11:
  69:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 252              		.loc 1 69 0
 253 000e 0122     		movs	r2, #1
 254 0010 024B     		ldr	r3, .L15
 255 0012 1A70     		strb	r2, [r3]
 256              	.L14:
  71:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 257              		.loc 1 71 0
 258 0014 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 259              	.LVL12:
  72:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 260              		.loc 1 72 0
 261              		@ sp needed
 262 0018 10BD     		pop	{r4, pc}
 263              	.L16:
 264 001a C046     		.align	2
 265              	.L15:
 266 001c 00000000 		.word	.LANCHOR0
 267              		.cfi_endproc
 268              	.LFE1:
 269              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 270              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 12


 271              		.align	2
 272              		.global	ADC_SAR_Seq_1_Stop
 273              		.code	16
 274              		.thumb_func
 275              		.type	ADC_SAR_Seq_1_Stop, %function
 276              	ADC_SAR_Seq_1_Stop:
 277              	.LFB4:
 348:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 349:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 350:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 352:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 354:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 358:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 361:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 363:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 364:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 278              		.loc 1 366 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 367:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 283              		.loc 1 367 0
 284 0000 024A     		ldr	r2, .L18
 285 0002 1368     		ldr	r3, [r2]
 286 0004 5B00     		lsls	r3, r3, #1
 287 0006 5B08     		lsrs	r3, r3, #1
 288 0008 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 289              		.loc 1 368 0
 290              		@ sp needed
 291 000a 7047     		bx	lr
 292              	.L19:
 293              		.align	2
 294              	.L18:
 295 000c 00003A40 		.word	1077542912
 296              		.cfi_endproc
 297              	.LFE4:
 298              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 299              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 300              		.align	2
 301              		.global	ADC_SAR_Seq_1_StartConvert
 302              		.code	16
 303              		.thumb_func
 304              		.type	ADC_SAR_Seq_1_StartConvert, %function
 305              	ADC_SAR_Seq_1_StartConvert:
 306              	.LFB5:
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 13


 369:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 370:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 371:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 375:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 387:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 390:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 307              		.loc 1 392 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 393:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 312              		.loc 1 394 0
 313 0000 034A     		ldr	r2, .L21
 314 0002 1368     		ldr	r3, [r2]
 315 0004 8021     		movs	r1, #128
 316 0006 4902     		lsls	r1, r1, #9
 317 0008 0B43     		orrs	r3, r1
 318 000a 1360     		str	r3, [r2]
 395:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 399:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 319              		.loc 1 399 0
 320              		@ sp needed
 321 000c 7047     		bx	lr
 322              	.L22:
 323 000e C046     		.align	2
 324              	.L21:
 325 0010 04003A40 		.word	1077542916
 326              		.cfi_endproc
 327              	.LFE5:
 328              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 329              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 330              		.align	2
 331              		.global	ADC_SAR_Seq_1_StopConvert
 332              		.code	16
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 14


 333              		.thumb_func
 334              		.type	ADC_SAR_Seq_1_StopConvert, %function
 335              	ADC_SAR_Seq_1_StopConvert:
 336              	.LFB6:
 400:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 401:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 402:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 406:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 409:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 412:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 415:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 337              		.loc 1 417 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 418:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 342              		.loc 1 419 0
 343 0000 024A     		ldr	r2, .L24
 344 0002 1168     		ldr	r1, [r2]
 345 0004 024B     		ldr	r3, .L24+4
 346 0006 0B40     		ands	r3, r1
 347 0008 1360     		str	r3, [r2]
 420:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 348              		.loc 1 421 0
 349              		@ sp needed
 350 000a 7047     		bx	lr
 351              	.L25:
 352              		.align	2
 353              	.L24:
 354 000c 04003A40 		.word	1077542916
 355 0010 FFFFFEFF 		.word	-65537
 356              		.cfi_endproc
 357              	.LFE6:
 358              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 359              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 360              		.align	2
 361              		.global	ADC_SAR_Seq_1_IsEndConversion
 362              		.code	16
 363              		.thumb_func
 364              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 365              	ADC_SAR_Seq_1_IsEndConversion:
 366              	.LFB7:
 422:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 15


 423:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 437:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 445:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 449:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 367              		.loc 1 451 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372              	.LVL13:
 373 0000 0200     		movs	r2, r0
 374              	.LVL14:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 453:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 454:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 375              		.loc 1 454 0
 376 0002 8307     		lsls	r3, r0, #30
 377 0004 0CD0     		beq	.L30
 378              	.LVL15:
 379              	.L29:
 455:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 380              		.loc 1 458 0 discriminator 2
 381 0006 074B     		ldr	r3, .L31
 382 0008 1B68     		ldr	r3, [r3]
 383 000a 0120     		movs	r0, #1
 384 000c 1840     		ands	r0, r3
 385              	.LVL16:
 459:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 386              		.loc 1 459 0 discriminator 2
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 16


 387 000e 01D1     		bne	.L28
 388              		.loc 1 459 0 is_stmt 0 discriminator 1
 389 0010 9307     		lsls	r3, r2, #30
 390 0012 F8D4     		bmi	.L29
 391              	.L28:
 460:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 461:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 392              		.loc 1 461 0 is_stmt 1
 393 0014 0028     		cmp	r0, #0
 394 0016 04D0     		beq	.L27
 462:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 395              		.loc 1 464 0
 396 0018 0122     		movs	r2, #1
 397              	.LVL17:
 398 001a 024B     		ldr	r3, .L31
 399 001c 1A60     		str	r2, [r3]
 400 001e 00E0     		b	.L27
 401              	.LVL18:
 402              	.L30:
 452:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 403              		.loc 1 452 0
 404 0020 0020     		movs	r0, #0
 405              	.LVL19:
 406              	.L27:
 465:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 468:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 473:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 477:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 485:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 486:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 407              		.loc 1 486 0
 408              		@ sp needed
 409 0022 7047     		bx	lr
 410              	.L32:
 411              		.align	2
 412              	.L31:
 413 0024 10023A40 		.word	1077543440
 414              		.cfi_endproc
 415              	.LFE7:
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 17


 416              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 417              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 418              		.align	2
 419              		.global	ADC_SAR_Seq_1_GetResult16
 420              		.code	16
 421              		.thumb_func
 422              		.type	ADC_SAR_Seq_1_GetResult16, %function
 423              	ADC_SAR_Seq_1_GetResult16:
 424              	.LFB8:
 487:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 488:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 493:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 496:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 500:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 503:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 425              		.loc 1 505 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429              	.LVL20:
 430 0000 10B5     		push	{r4, lr}
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 4, -8
 433              		.cfi_offset 14, -4
 434 0002 041E     		subs	r4, r0, #0
 506:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 508:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 435              		.loc 1 509 0
 436 0004 02D0     		beq	.L34
 437              		.loc 1 509 0 is_stmt 0 discriminator 1
 438 0006 0020     		movs	r0, #0
 439              	.LVL21:
 440 0008 FFF7FEFF 		bl	CyHalt
 441              	.LVL22:
 442              	.L34:
 510:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 443              		.loc 1 511 0 is_stmt 1
 444 000c 002C     		cmp	r4, #0
 445 000e 07D1     		bne	.L36
 512:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 18


 446              		.loc 1 513 0
 447 0010 A400     		lsls	r4, r4, #2
 448              	.LVL23:
 449 0012 054B     		ldr	r3, .L37
 450 0014 9C46     		mov	ip, r3
 451 0016 6444     		add	r4, r4, ip
 452 0018 2068     		ldr	r0, [r4]
 453 001a 0004     		lsls	r0, r0, #16
 454 001c 000C     		lsrs	r0, r0, #16
 455              	.LVL24:
 456 001e 00E0     		b	.L35
 457              	.LVL25:
 458              	.L36:
 514:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 459              		.loc 1 521 0
 460 0020 0020     		movs	r0, #0
 461              	.LVL26:
 462              	.L35:
 522:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 525:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 463              		.loc 1 525 0
 464 0022 00B2     		sxth	r0, r0
 465              	.LVL27:
 526:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 466              		.loc 1 526 0
 467              		@ sp needed
 468 0024 10BD     		pop	{r4, pc}
 469              	.L38:
 470 0026 C046     		.align	2
 471              	.L37:
 472 0028 80013A40 		.word	1077543296
 473              		.cfi_endproc
 474              	.LFE8:
 475              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 476              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 477              		.align	2
 478              		.global	ADC_SAR_Seq_1_SetChanMask
 479              		.code	16
 480              		.thumb_func
 481              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 482              	ADC_SAR_Seq_1_SetChanMask:
 483              	.LFB9:
 527:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 528:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 529:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 19


 533:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 536:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 484              		.loc 1 550 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489              	.LVL28:
 551:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 490              		.loc 1 551 0
 491 0000 0123     		movs	r3, #1
 492 0002 1840     		ands	r0, r3
 493              	.LVL29:
 494 0004 014B     		ldr	r3, .L40
 495 0006 1860     		str	r0, [r3]
 552:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 496              		.loc 1 552 0
 497              		@ sp needed
 498 0008 7047     		bx	lr
 499              	.L41:
 500 000a C046     		.align	2
 501              	.L40:
 502 000c 20003A40 		.word	1077542944
 503              		.cfi_endproc
 504              	.LFE9:
 505              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 506              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 507              		.align	2
 508              		.global	ADC_SAR_Seq_1_SetLowLimit
 509              		.code	16
 510              		.thumb_func
 511              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 512              	ADC_SAR_Seq_1_SetLowLimit:
 513              	.LFB10:
 553:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 554:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 557:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 20


 560:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 573:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 575:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 576:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 581:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 589:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 514              		.loc 1 594 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519              	.LVL30:
 595:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 520              		.loc 1 595 0
 521 0000 054A     		ldr	r2, .L43
 522 0002 1368     		ldr	r3, [r2]
 523 0004 1B0C     		lsrs	r3, r3, #16
 524 0006 1B04     		lsls	r3, r3, #16
 525 0008 1360     		str	r3, [r2]
 596:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 526              		.loc 1 596 0
 527 000a 1368     		ldr	r3, [r2]
 528 000c 0004     		lsls	r0, r0, #16
 529              	.LVL31:
 530 000e 000C     		lsrs	r0, r0, #16
 531 0010 1843     		orrs	r0, r3
 532 0012 1060     		str	r0, [r2]
 597:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 21


 533              		.loc 1 597 0
 534              		@ sp needed
 535 0014 7047     		bx	lr
 536              	.L44:
 537 0016 C046     		.align	2
 538              	.L43:
 539 0018 18003A40 		.word	1077542936
 540              		.cfi_endproc
 541              	.LFE10:
 542              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 543              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 544              		.align	2
 545              		.global	ADC_SAR_Seq_1_SetHighLimit
 546              		.code	16
 547              		.thumb_func
 548              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 549              	ADC_SAR_Seq_1_SetHighLimit:
 550              	.LFB11:
 598:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 599:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 600:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 604:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 607:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 610:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 613:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 551              		.loc 1 615 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556              	.LVL32:
 616:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 557              		.loc 1 616 0
 558 0000 044A     		ldr	r2, .L46
 559 0002 1368     		ldr	r3, [r2]
 560 0004 1B04     		lsls	r3, r3, #16
 561 0006 1B0C     		lsrs	r3, r3, #16
 562 0008 1360     		str	r3, [r2]
 617:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 563              		.loc 1 617 0
 564 000a 1368     		ldr	r3, [r2]
 565 000c 0004     		lsls	r0, r0, #16
 566              	.LVL33:
 567 000e 1843     		orrs	r0, r3
 568 0010 1060     		str	r0, [r2]
 618:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 22


 569              		.loc 1 618 0
 570              		@ sp needed
 571 0012 7047     		bx	lr
 572              	.L47:
 573              		.align	2
 574              	.L46:
 575 0014 18003A40 		.word	1077542936
 576              		.cfi_endproc
 577              	.LFE11:
 578              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 579              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 580              		.align	2
 581              		.global	ADC_SAR_Seq_1_SetLimitMask
 582              		.code	16
 583              		.thumb_func
 584              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 585              	ADC_SAR_Seq_1_SetLimitMask:
 586              	.LFB12:
 619:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 620:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 621:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 625:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 628:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 634:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 587              		.loc 1 639 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592              	.LVL34:
 640:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 593              		.loc 1 640 0
 594 0000 0123     		movs	r3, #1
 595 0002 1840     		ands	r0, r3
 596              	.LVL35:
 597 0004 014B     		ldr	r3, .L49
 598 0006 1860     		str	r0, [r3]
 641:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 599              		.loc 1 641 0
 600              		@ sp needed
 601 0008 7047     		bx	lr
 602              	.L50:
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 23


 603 000a C046     		.align	2
 604              	.L49:
 605 000c 38023A40 		.word	1077543480
 606              		.cfi_endproc
 607              	.LFE12:
 608              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 609              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 610              		.align	2
 611              		.global	ADC_SAR_Seq_1_SetSatMask
 612              		.code	16
 613              		.thumb_func
 614              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 615              	ADC_SAR_Seq_1_SetSatMask:
 616              	.LFB13:
 642:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 643:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 644:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 648:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 651:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 660:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 617              		.loc 1 662 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 622              	.LVL36:
 663:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 623              		.loc 1 663 0
 624 0000 0123     		movs	r3, #1
 625 0002 1840     		ands	r0, r3
 626              	.LVL37:
 627 0004 014B     		ldr	r3, .L52
 628 0006 1860     		str	r0, [r3]
 664:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 629              		.loc 1 664 0
 630              		@ sp needed
 631 0008 7047     		bx	lr
 632              	.L53:
 633 000a C046     		.align	2
 634              	.L52:
 635 000c 28023A40 		.word	1077543464
 636              		.cfi_endproc
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 24


 637              	.LFE13:
 638              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 639              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 640              		.align	2
 641              		.global	ADC_SAR_Seq_1_SetOffset
 642              		.code	16
 643              		.thumb_func
 644              		.type	ADC_SAR_Seq_1_SetOffset, %function
 645              	ADC_SAR_Seq_1_SetOffset:
 646              	.LFB14:
 665:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 671:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 677:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 682:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 685:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 688:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 647              		.loc 1 690 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              	.LVL38:
 652 0000 70B5     		push	{r4, r5, r6, lr}
 653              		.cfi_def_cfa_offset 16
 654              		.cfi_offset 4, -16
 655              		.cfi_offset 5, -12
 656              		.cfi_offset 6, -8
 657              		.cfi_offset 14, -4
 658 0002 0400     		movs	r4, r0
 659 0004 0D00     		movs	r5, r1
 691:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 660              		.loc 1 692 0
 661 0006 0028     		cmp	r0, #0
 662 0008 02D0     		beq	.L55
 663              		.loc 1 692 0 is_stmt 0 discriminator 1
 664 000a 0020     		movs	r0, #0
 665              	.LVL39:
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 25


 666 000c FFF7FEFF 		bl	CyHalt
 667              	.LVL40:
 668              	.L55:
 693:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 694:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 669              		.loc 1 694 0 is_stmt 1
 670 0010 6400     		lsls	r4, r4, #1
 671              	.LVL41:
 672 0012 014B     		ldr	r3, .L56
 673 0014 E552     		strh	r5, [r4, r3]
 695:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 674              		.loc 1 695 0
 675              		@ sp needed
 676 0016 70BD     		pop	{r4, r5, r6, pc}
 677              	.L57:
 678              		.align	2
 679              	.L56:
 680 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 681              		.cfi_endproc
 682              	.LFE14:
 683              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 684              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 685              		.align	2
 686              		.global	ADC_SAR_Seq_1_SetGain
 687              		.code	16
 688              		.thumb_func
 689              		.type	ADC_SAR_Seq_1_SetGain, %function
 690              	ADC_SAR_Seq_1_SetGain:
 691              	.LFB15:
 696:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 697:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 700:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 702:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 711:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 715:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 718:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 722:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 26


 724:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 692              		.loc 1 724 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696              	.LVL42:
 697 0000 70B5     		push	{r4, r5, r6, lr}
 698              		.cfi_def_cfa_offset 16
 699              		.cfi_offset 4, -16
 700              		.cfi_offset 5, -12
 701              		.cfi_offset 6, -8
 702              		.cfi_offset 14, -4
 703 0002 0400     		movs	r4, r0
 704 0004 0D00     		movs	r5, r1
 725:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 705              		.loc 1 726 0
 706 0006 0028     		cmp	r0, #0
 707 0008 02D0     		beq	.L59
 708              		.loc 1 726 0 is_stmt 0 discriminator 1
 709 000a 0020     		movs	r0, #0
 710              	.LVL43:
 711 000c FFF7FEFF 		bl	CyHalt
 712              	.LVL44:
 713              	.L59:
 727:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 728:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 714              		.loc 1 728 0 is_stmt 1
 715 0010 A400     		lsls	r4, r4, #2
 716              	.LVL45:
 717 0012 014B     		ldr	r3, .L60
 718 0014 E550     		str	r5, [r4, r3]
 729:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 719              		.loc 1 729 0
 720              		@ sp needed
 721              	.LVL46:
 722 0016 70BD     		pop	{r4, r5, r6, pc}
 723              	.L61:
 724              		.align	2
 725              	.L60:
 726 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 727              		.cfi_endproc
 728              	.LFE15:
 729              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 730              		.global	__aeabi_idiv
 731              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 732              		.align	2
 733              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 734              		.code	16
 735              		.thumb_func
 736              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 737              	ADC_SAR_Seq_1_CountsTo_mVolts:
 738              	.LFB16:
 730:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 731:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 732:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 27


 734:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 735:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 739              		.loc 1 757 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              	.LVL47:
 744 0000 70B5     		push	{r4, r5, r6, lr}
 745              		.cfi_def_cfa_offset 16
 746              		.cfi_offset 4, -16
 747              		.cfi_offset 5, -12
 748              		.cfi_offset 6, -8
 749              		.cfi_offset 14, -4
 750 0002 0400     		movs	r4, r0
 751 0004 0D00     		movs	r5, r1
 758:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 760:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 752              		.loc 1 761 0
 753 0006 0028     		cmp	r0, #0
 754 0008 02D0     		beq	.L63
 755              		.loc 1 761 0 is_stmt 0 discriminator 1
 756 000a 0020     		movs	r0, #0
 757              	.LVL48:
 758 000c FFF7FEFF 		bl	CyHalt
 759              	.LVL49:
 760              	.L63:
 762:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 28


 769:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 771:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 761              		.loc 1 772 0 is_stmt 1
 762 0010 6300     		lsls	r3, r4, #1
 763 0012 0F4A     		ldr	r2, .L66
 764 0014 995A     		ldrh	r1, [r3, r2]
 765 0016 09B2     		sxth	r1, r1
 766 0018 691A     		subs	r1, r5, r1
 767 001a 09B2     		sxth	r1, r1
 768              	.LVL50:
 773:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ?
 769              		.loc 1 774 0
 770 001c 0D48     		ldr	r0, .L66+4
 771 001e 4843     		muls	r0, r1
 775:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 772              		.loc 1 775 0
 773 0020 0029     		cmp	r1, #0
 774 0022 06DD     		ble	.L64
 775              		.loc 1 775 0 is_stmt 0 discriminator 1
 776 0024 A300     		lsls	r3, r4, #2
 777 0026 0C4A     		ldr	r2, .L66+8
 778 0028 9A58     		ldr	r2, [r3, r2]
 779 002a D30F     		lsrs	r3, r2, #31
 780 002c 9A18     		adds	r2, r3, r2
 781 002e 5310     		asrs	r3, r2, #1
 782 0030 06E0     		b	.L65
 783              	.L64:
 784              		.loc 1 775 0 discriminator 2
 785 0032 A300     		lsls	r3, r4, #2
 786 0034 084A     		ldr	r2, .L66+8
 787 0036 9A58     		ldr	r2, [r3, r2]
 788 0038 D30F     		lsrs	r3, r2, #31
 789 003a 9A18     		adds	r2, r3, r2
 790 003c 5210     		asrs	r2, r2, #1
 791 003e 5342     		rsbs	r3, r2, #0
 792              	.L65:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 793              		.loc 1 774 0 is_stmt 1
 794 0040 1818     		adds	r0, r3, r0
 776:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 795              		.loc 1 776 0
 796 0042 A400     		lsls	r4, r4, #2
 797              	.LVL51:
 798 0044 044B     		ldr	r3, .L66+8
 799 0046 E158     		ldr	r1, [r4, r3]
 800              	.LVL52:
 801 0048 FFF7FEFF 		bl	__aeabi_idiv
 802              	.LVL53:
 774:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 803              		.loc 1 774 0
 804 004c 00B2     		sxth	r0, r0
 805              	.LVL54:
 777:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 778:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 29


 779:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 806              		.loc 1 779 0
 807              		@ sp needed
 808 004e 70BD     		pop	{r4, r5, r6, pc}
 809              	.L67:
 810              		.align	2
 811              	.L66:
 812 0050 00000000 		.word	ADC_SAR_Seq_1_offset
 813 0054 10270000 		.word	10000
 814 0058 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 815              		.cfi_endproc
 816              	.LFE16:
 817              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 818              		.global	__aeabi_lmul
 819              		.global	__aeabi_ldivmod
 820              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 821              		.align	2
 822              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 823              		.code	16
 824              		.thumb_func
 825              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 826              	ADC_SAR_Seq_1_CountsTo_uVolts:
 827              	.LFB17:
 780:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 781:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 782:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 828              		.loc 1 811 0
 829              		.cfi_startproc
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 30


 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              	.LVL55:
 833 0000 70B5     		push	{r4, r5, r6, lr}
 834              		.cfi_def_cfa_offset 16
 835              		.cfi_offset 4, -16
 836              		.cfi_offset 5, -12
 837              		.cfi_offset 6, -8
 838              		.cfi_offset 14, -4
 839 0002 0500     		movs	r5, r0
 840 0004 0C00     		movs	r4, r1
 812:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 814:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 841              		.loc 1 815 0
 842 0006 0028     		cmp	r0, #0
 843 0008 02D0     		beq	.L69
 844              		.loc 1 815 0 is_stmt 0 discriminator 1
 845 000a 0020     		movs	r0, #0
 846              	.LVL56:
 847 000c FFF7FEFF 		bl	CyHalt
 848              	.LVL57:
 849              	.L69:
 816:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 817:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 825:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 850              		.loc 1 826 0 is_stmt 1
 851 0010 6A00     		lsls	r2, r5, #1
 852 0012 084B     		ldr	r3, .L70
 853 0014 D05A     		ldrh	r0, [r2, r3]
 854 0016 00B2     		sxth	r0, r0
 855 0018 201A     		subs	r0, r4, r0
 856 001a 00B2     		sxth	r0, r0
 857              	.LVL58:
 827:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 828:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 858              		.loc 1 828 0
 859 001c C117     		asrs	r1, r0, #31
 860 001e 064A     		ldr	r2, .L70+4
 861 0020 0023     		movs	r3, #0
 862 0022 FFF7FEFF 		bl	__aeabi_lmul
 863              	.LVL59:
 864 0026 AD00     		lsls	r5, r5, #2
 865              	.LVL60:
 866 0028 044B     		ldr	r3, .L70+8
 867 002a EA58     		ldr	r2, [r5, r3]
 868 002c D317     		asrs	r3, r2, #31
 869 002e FFF7FEFF 		bl	__aeabi_ldivmod
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 31


 870              	.LVL61:
 829:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 830:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 831:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 871              		.loc 1 831 0
 872              		@ sp needed
 873 0032 70BD     		pop	{r4, r5, r6, pc}
 874              	.L71:
 875              		.align	2
 876              	.L70:
 877 0034 00000000 		.word	ADC_SAR_Seq_1_offset
 878 0038 80969800 		.word	10000000
 879 003c 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 880              		.cfi_endproc
 881              	.LFE17:
 882              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 883              		.global	__aeabi_i2f
 884              		.global	__aeabi_fmul
 885              		.global	__aeabi_fdiv
 886              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 887              		.align	2
 888              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 889              		.code	16
 890              		.thumb_func
 891              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 892              	ADC_SAR_Seq_1_CountsTo_Volts:
 893              	.LFB18:
 832:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 833:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 834:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 894              		.loc 1 856 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              	.LVL62:
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 32


 899 0000 70B5     		push	{r4, r5, r6, lr}
 900              		.cfi_def_cfa_offset 16
 901              		.cfi_offset 4, -16
 902              		.cfi_offset 5, -12
 903              		.cfi_offset 6, -8
 904              		.cfi_offset 14, -4
 905 0002 0400     		movs	r4, r0
 906 0004 0D00     		movs	r5, r1
 857:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 859:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 907              		.loc 1 860 0
 908 0006 0028     		cmp	r0, #0
 909 0008 02D0     		beq	.L73
 910              		.loc 1 860 0 is_stmt 0 discriminator 1
 911 000a 0020     		movs	r0, #0
 912              	.LVL63:
 913 000c FFF7FEFF 		bl	CyHalt
 914              	.LVL64:
 915              	.L73:
 861:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 862:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 870:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 916              		.loc 1 871 0 is_stmt 1
 917 0010 6200     		lsls	r2, r4, #1
 918 0012 0A4B     		ldr	r3, .L74
 919 0014 D05A     		ldrh	r0, [r2, r3]
 920 0016 00B2     		sxth	r0, r0
 921 0018 281A     		subs	r0, r5, r0
 922 001a 00B2     		sxth	r0, r0
 923              	.LVL65:
 872:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 873:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 924              		.loc 1 873 0
 925 001c FFF7FEFF 		bl	__aeabi_i2f
 926              	.LVL66:
 927 0020 0749     		ldr	r1, .L74+4
 928 0022 FFF7FEFF 		bl	__aeabi_fmul
 929              	.LVL67:
 930 0026 051C     		adds	r5, r0, #0
 931 0028 A400     		lsls	r4, r4, #2
 932              	.LVL68:
 933 002a 064B     		ldr	r3, .L74+8
 934 002c E058     		ldr	r0, [r4, r3]
 935 002e FFF7FEFF 		bl	__aeabi_i2f
 936              	.LVL69:
 937 0032 011C     		adds	r1, r0, #0
 938 0034 281C     		adds	r0, r5, #0
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 33


 939 0036 FFF7FEFF 		bl	__aeabi_fdiv
 940              	.LVL70:
 874:Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 875:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 876:Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 941              		.loc 1 876 0
 942              		@ sp needed
 943 003a 70BD     		pop	{r4, r5, r6, pc}
 944              	.L75:
 945              		.align	2
 946              	.L74:
 947 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 948 0040 00002041 		.word	1092616192
 949 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 950              		.cfi_endproc
 951              	.LFE18:
 952              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 953              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
 954              		.comm	ADC_SAR_Seq_1_offset,2,4
 955              		.global	ADC_SAR_Seq_1_initVar
 956              		.bss
 957              		.set	.LANCHOR0,. + 0
 958              		.type	ADC_SAR_Seq_1_initVar, %object
 959              		.size	ADC_SAR_Seq_1_initVar, 1
 960              	ADC_SAR_Seq_1_initVar:
 961 0000 00       		.space	1
 962              		.text
 963              	.Letext0:
 964              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 965              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 966              		.section	.debug_info,"",%progbits
 967              	.Ldebug_info0:
 968 0000 75050000 		.4byte	0x575
 969 0004 0400     		.2byte	0x4
 970 0006 00000000 		.4byte	.Ldebug_abbrev0
 971 000a 04       		.byte	0x4
 972 000b 01       		.uleb128 0x1
 973 000c 72000000 		.4byte	.LASF63
 974 0010 0C       		.byte	0xc
 975 0011 90030000 		.4byte	.LASF64
 976 0015 73020000 		.4byte	.LASF65
 977 0019 00000000 		.4byte	.Ldebug_ranges0+0
 978 001d 00000000 		.4byte	0
 979 0021 00000000 		.4byte	.Ldebug_line0
 980 0025 02       		.uleb128 0x2
 981 0026 01       		.byte	0x1
 982 0027 06       		.byte	0x6
 983 0028 68010000 		.4byte	.LASF0
 984 002c 02       		.uleb128 0x2
 985 002d 01       		.byte	0x1
 986 002e 08       		.byte	0x8
 987 002f F7030000 		.4byte	.LASF1
 988 0033 02       		.uleb128 0x2
 989 0034 02       		.byte	0x2
 990 0035 05       		.byte	0x5
 991 0036 05040000 		.4byte	.LASF2
 992 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 34


 993 003b 02       		.byte	0x2
 994 003c 07       		.byte	0x7
 995 003d 51020000 		.4byte	.LASF3
 996 0041 02       		.uleb128 0x2
 997 0042 04       		.byte	0x4
 998 0043 05       		.byte	0x5
 999 0044 B3010000 		.4byte	.LASF4
 1000 0048 02       		.uleb128 0x2
 1001 0049 04       		.byte	0x4
 1002 004a 07       		.byte	0x7
 1003 004b 2F020000 		.4byte	.LASF5
 1004 004f 02       		.uleb128 0x2
 1005 0050 08       		.byte	0x8
 1006 0051 05       		.byte	0x5
 1007 0052 5A010000 		.4byte	.LASF6
 1008 0056 02       		.uleb128 0x2
 1009 0057 08       		.byte	0x8
 1010 0058 07       		.byte	0x7
 1011 0059 14010000 		.4byte	.LASF7
 1012 005d 03       		.uleb128 0x3
 1013 005e 04       		.byte	0x4
 1014 005f 05       		.byte	0x5
 1015 0060 696E7400 		.ascii	"int\000"
 1016 0064 02       		.uleb128 0x2
 1017 0065 04       		.byte	0x4
 1018 0066 07       		.byte	0x7
 1019 0067 1B020000 		.4byte	.LASF8
 1020 006b 04       		.uleb128 0x4
 1021 006c BC010000 		.4byte	.LASF9
 1022 0070 02       		.byte	0x2
 1023 0071 E401     		.2byte	0x1e4
 1024 0073 2C000000 		.4byte	0x2c
 1025 0077 04       		.uleb128 0x4
 1026 0078 15000000 		.4byte	.LASF10
 1027 007c 02       		.byte	0x2
 1028 007d E501     		.2byte	0x1e5
 1029 007f 3A000000 		.4byte	0x3a
 1030 0083 04       		.uleb128 0x4
 1031 0084 D3010000 		.4byte	.LASF11
 1032 0088 02       		.byte	0x2
 1033 0089 E601     		.2byte	0x1e6
 1034 008b 48000000 		.4byte	0x48
 1035 008f 04       		.uleb128 0x4
 1036 0090 BE040000 		.4byte	.LASF12
 1037 0094 02       		.byte	0x2
 1038 0095 E801     		.2byte	0x1e8
 1039 0097 33000000 		.4byte	0x33
 1040 009b 04       		.uleb128 0x4
 1041 009c 8F010000 		.4byte	.LASF13
 1042 00a0 02       		.byte	0x2
 1043 00a1 E901     		.2byte	0x1e9
 1044 00a3 41000000 		.4byte	0x41
 1045 00a7 04       		.uleb128 0x4
 1046 00a8 1B030000 		.4byte	.LASF14
 1047 00ac 02       		.byte	0x2
 1048 00ad EA01     		.2byte	0x1ea
 1049 00af B3000000 		.4byte	0xb3
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 35


 1050 00b3 02       		.uleb128 0x2
 1051 00b4 04       		.byte	0x4
 1052 00b5 04       		.byte	0x4
 1053 00b6 B7030000 		.4byte	.LASF15
 1054 00ba 02       		.uleb128 0x2
 1055 00bb 08       		.byte	0x8
 1056 00bc 04       		.byte	0x4
 1057 00bd CC010000 		.4byte	.LASF16
 1058 00c1 04       		.uleb128 0x4
 1059 00c2 79030000 		.4byte	.LASF17
 1060 00c6 02       		.byte	0x2
 1061 00c7 EF01     		.2byte	0x1ef
 1062 00c9 4F000000 		.4byte	0x4f
 1063 00cd 02       		.uleb128 0x2
 1064 00ce 01       		.byte	0x1
 1065 00cf 08       		.byte	0x8
 1066 00d0 51040000 		.4byte	.LASF18
 1067 00d4 04       		.uleb128 0x4
 1068 00d5 15030000 		.4byte	.LASF19
 1069 00d9 02       		.byte	0x2
 1070 00da 9002     		.2byte	0x290
 1071 00dc E0000000 		.4byte	0xe0
 1072 00e0 05       		.uleb128 0x5
 1073 00e1 83000000 		.4byte	0x83
 1074 00e5 02       		.uleb128 0x2
 1075 00e6 08       		.byte	0x8
 1076 00e7 04       		.byte	0x4
 1077 00e8 35030000 		.4byte	.LASF20
 1078 00ec 02       		.uleb128 0x2
 1079 00ed 04       		.byte	0x4
 1080 00ee 07       		.byte	0x7
 1081 00ef 23030000 		.4byte	.LASF21
 1082 00f3 06       		.uleb128 0x6
 1083 00f4 1C000000 		.4byte	.LASF25
 1084 00f8 01       		.byte	0x1
 1085 00f9 5E       		.byte	0x5e
 1086 00fa 00000000 		.4byte	.LFB2
 1087 00fe F8000000 		.4byte	.LFE2-.LFB2
 1088 0102 01       		.uleb128 0x1
 1089 0103 9C       		.byte	0x9c
 1090 0104 5D010000 		.4byte	0x15d
 1091 0108 07       		.uleb128 0x7
 1092 0109 46040000 		.4byte	.LASF22
 1093 010d 01       		.byte	0x1
 1094 010e 60       		.byte	0x60
 1095 010f 83000000 		.4byte	0x83
 1096 0113 00000000 		.4byte	.LLST0
 1097 0117 07       		.uleb128 0x7
 1098 0118 47020000 		.4byte	.LASF23
 1099 011c 01       		.byte	0x1
 1100 011d 61       		.byte	0x61
 1101 011e 83000000 		.4byte	0x83
 1102 0122 1F000000 		.4byte	.LLST1
 1103 0126 07       		.uleb128 0x7
 1104 0127 37000000 		.4byte	.LASF24
 1105 012b 01       		.byte	0x1
 1106 012c 62       		.byte	0x62
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 36


 1107 012d 9B000000 		.4byte	0x9b
 1108 0131 5B000000 		.4byte	.LLST2
 1109 0135 08       		.uleb128 0x8
 1110 0136 0A000000 		.4byte	.LVL0
 1111 013a 4C050000 		.4byte	0x54c
 1112 013e 4D010000 		.4byte	0x14d
 1113 0142 09       		.uleb128 0x9
 1114 0143 01       		.uleb128 0x1
 1115 0144 50       		.byte	0x50
 1116 0145 01       		.uleb128 0x1
 1117 0146 41       		.byte	0x41
 1118 0147 09       		.uleb128 0x9
 1119 0148 01       		.uleb128 0x1
 1120 0149 51       		.byte	0x51
 1121 014a 01       		.uleb128 0x1
 1122 014b 33       		.byte	0x33
 1123 014c 00       		.byte	0
 1124 014d 0A       		.uleb128 0xa
 1125 014e 12000000 		.4byte	.LVL1
 1126 0152 57050000 		.4byte	0x557
 1127 0156 09       		.uleb128 0x9
 1128 0157 01       		.uleb128 0x1
 1129 0158 50       		.byte	0x50
 1130 0159 01       		.uleb128 0x1
 1131 015a 41       		.byte	0x41
 1132 015b 00       		.byte	0
 1133 015c 00       		.byte	0
 1134 015d 0B       		.uleb128 0xb
 1135 015e 2B010000 		.4byte	.LASF26
 1136 0162 01       		.byte	0x1
 1137 0163 4A01     		.2byte	0x14a
 1138 0165 00000000 		.4byte	.LFB3
 1139 0169 30000000 		.4byte	.LFE3-.LFB3
 1140 016d 01       		.uleb128 0x1
 1141 016e 9C       		.byte	0x9c
 1142 016f 83010000 		.4byte	0x183
 1143 0173 0A       		.uleb128 0xa
 1144 0174 24000000 		.4byte	.LVL10
 1145 0178 62050000 		.4byte	0x562
 1146 017c 09       		.uleb128 0x9
 1147 017d 01       		.uleb128 0x1
 1148 017e 50       		.byte	0x50
 1149 017f 01       		.uleb128 0x1
 1150 0180 3A       		.byte	0x3a
 1151 0181 00       		.byte	0
 1152 0182 00       		.byte	0
 1153 0183 06       		.uleb128 0x6
 1154 0184 00010000 		.4byte	.LASF27
 1155 0188 01       		.byte	0x1
 1156 0189 3F       		.byte	0x3f
 1157 018a 00000000 		.4byte	.LFB1
 1158 018e 20000000 		.4byte	.LFE1-.LFB1
 1159 0192 01       		.uleb128 0x1
 1160 0193 9C       		.byte	0x9c
 1161 0194 AB010000 		.4byte	0x1ab
 1162 0198 0C       		.uleb128 0xc
 1163 0199 0E000000 		.4byte	.LVL11
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 37


 1164 019d F3000000 		.4byte	0xf3
 1165 01a1 0C       		.uleb128 0xc
 1166 01a2 18000000 		.4byte	.LVL12
 1167 01a6 5D010000 		.4byte	0x15d
 1168 01aa 00       		.byte	0
 1169 01ab 0D       		.uleb128 0xd
 1170 01ac D3030000 		.4byte	.LASF28
 1171 01b0 01       		.byte	0x1
 1172 01b1 6D01     		.2byte	0x16d
 1173 01b3 00000000 		.4byte	.LFB4
 1174 01b7 10000000 		.4byte	.LFE4-.LFB4
 1175 01bb 01       		.uleb128 0x1
 1176 01bc 9C       		.byte	0x9c
 1177 01bd 0D       		.uleb128 0xd
 1178 01be 3E000000 		.4byte	.LASF29
 1179 01c2 01       		.byte	0x1
 1180 01c3 8701     		.2byte	0x187
 1181 01c5 00000000 		.4byte	.LFB5
 1182 01c9 14000000 		.4byte	.LFE5-.LFB5
 1183 01cd 01       		.uleb128 0x1
 1184 01ce 9C       		.byte	0x9c
 1185 01cf 0D       		.uleb128 0xd
 1186 01d0 5F030000 		.4byte	.LASF30
 1187 01d4 01       		.byte	0x1
 1188 01d5 A001     		.2byte	0x1a0
 1189 01d7 00000000 		.4byte	.LFB6
 1190 01db 14000000 		.4byte	.LFE6-.LFB6
 1191 01df 01       		.uleb128 0x1
 1192 01e0 9C       		.byte	0x9c
 1193 01e1 0E       		.uleb128 0xe
 1194 01e2 41030000 		.4byte	.LASF32
 1195 01e6 01       		.byte	0x1
 1196 01e7 C201     		.2byte	0x1c2
 1197 01e9 83000000 		.4byte	0x83
 1198 01ed 00000000 		.4byte	.LFB7
 1199 01f1 28000000 		.4byte	.LFE7-.LFB7
 1200 01f5 01       		.uleb128 0x1
 1201 01f6 9C       		.byte	0x9c
 1202 01f7 1C020000 		.4byte	0x21c
 1203 01fb 0F       		.uleb128 0xf
 1204 01fc FD010000 		.4byte	.LASF34
 1205 0200 01       		.byte	0x1
 1206 0201 C201     		.2byte	0x1c2
 1207 0203 83000000 		.4byte	0x83
 1208 0207 71000000 		.4byte	.LLST3
 1209 020b 10       		.uleb128 0x10
 1210 020c 9F040000 		.4byte	.LASF31
 1211 0210 01       		.byte	0x1
 1212 0211 C401     		.2byte	0x1c4
 1213 0213 83000000 		.4byte	0x83
 1214 0217 B6000000 		.4byte	.LLST4
 1215 021b 00       		.byte	0
 1216 021c 0E       		.uleb128 0xe
 1217 021d 40010000 		.4byte	.LASF33
 1218 0221 01       		.byte	0x1
 1219 0222 F801     		.2byte	0x1f8
 1220 0224 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 38


 1221 0228 00000000 		.4byte	.LFB8
 1222 022c 2C000000 		.4byte	.LFE8-.LFB8
 1223 0230 01       		.uleb128 0x1
 1224 0231 9C       		.byte	0x9c
 1225 0232 66020000 		.4byte	0x266
 1226 0236 0F       		.uleb128 0xf
 1227 0237 4C040000 		.4byte	.LASF35
 1228 023b 01       		.byte	0x1
 1229 023c F801     		.2byte	0x1f8
 1230 023e 83000000 		.4byte	0x83
 1231 0242 EC000000 		.4byte	.LLST5
 1232 0246 10       		.uleb128 0x10
 1233 0247 DF040000 		.4byte	.LASF36
 1234 024b 01       		.byte	0x1
 1235 024c FA01     		.2byte	0x1fa
 1236 024e 83000000 		.4byte	0x83
 1237 0252 31010000 		.4byte	.LLST6
 1238 0256 0A       		.uleb128 0xa
 1239 0257 0C000000 		.4byte	.LVL22
 1240 025b 6D050000 		.4byte	0x56d
 1241 025f 09       		.uleb128 0x9
 1242 0260 01       		.uleb128 0x1
 1243 0261 50       		.byte	0x50
 1244 0262 01       		.uleb128 0x1
 1245 0263 30       		.byte	0x30
 1246 0264 00       		.byte	0
 1247 0265 00       		.byte	0
 1248 0266 0B       		.uleb128 0xb
 1249 0267 2C040000 		.4byte	.LASF37
 1250 026b 01       		.byte	0x1
 1251 026c 2502     		.2byte	0x225
 1252 026e 00000000 		.4byte	.LFB9
 1253 0272 10000000 		.4byte	.LFE9-.LFB9
 1254 0276 01       		.uleb128 0x1
 1255 0277 9C       		.byte	0x9c
 1256 0278 8D020000 		.4byte	0x28d
 1257 027c 0F       		.uleb128 0xf
 1258 027d DA010000 		.4byte	.LASF38
 1259 0281 01       		.byte	0x1
 1260 0282 2502     		.2byte	0x225
 1261 0284 83000000 		.4byte	0x83
 1262 0288 4F010000 		.4byte	.LLST7
 1263 028c 00       		.byte	0
 1264 028d 0B       		.uleb128 0xb
 1265 028e 56040000 		.4byte	.LASF39
 1266 0292 01       		.byte	0x1
 1267 0293 5102     		.2byte	0x251
 1268 0295 00000000 		.4byte	.LFB10
 1269 0299 1C000000 		.4byte	.LFE10-.LFB10
 1270 029d 01       		.uleb128 0x1
 1271 029e 9C       		.byte	0x9c
 1272 029f B4020000 		.4byte	0x2b4
 1273 02a3 0F       		.uleb128 0xf
 1274 02a4 2C030000 		.4byte	.LASF40
 1275 02a8 01       		.byte	0x1
 1276 02a9 5102     		.2byte	0x251
 1277 02ab 83000000 		.4byte	0x83
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 39


 1278 02af 70010000 		.4byte	.LLST8
 1279 02b3 00       		.byte	0
 1280 02b4 0B       		.uleb128 0xb
 1281 02b5 74010000 		.4byte	.LASF41
 1282 02b9 01       		.byte	0x1
 1283 02ba 6602     		.2byte	0x266
 1284 02bc 00000000 		.4byte	.LFB11
 1285 02c0 18000000 		.4byte	.LFE11-.LFB11
 1286 02c4 01       		.uleb128 0x1
 1287 02c5 9C       		.byte	0x9c
 1288 02c6 DB020000 		.4byte	0x2db
 1289 02ca 0F       		.uleb128 0xf
 1290 02cb E6030000 		.4byte	.LASF42
 1291 02cf 01       		.byte	0x1
 1292 02d0 6602     		.2byte	0x266
 1293 02d2 83000000 		.4byte	0x83
 1294 02d6 91010000 		.4byte	.LLST9
 1295 02da 00       		.byte	0
 1296 02db 0B       		.uleb128 0xb
 1297 02dc C4040000 		.4byte	.LASF43
 1298 02e0 01       		.byte	0x1
 1299 02e1 7E02     		.2byte	0x27e
 1300 02e3 00000000 		.4byte	.LFB12
 1301 02e7 10000000 		.4byte	.LFE12-.LFB12
 1302 02eb 01       		.uleb128 0x1
 1303 02ec 9C       		.byte	0x9c
 1304 02ed 02030000 		.4byte	0x302
 1305 02f1 0F       		.uleb128 0xf
 1306 02f2 DA010000 		.4byte	.LASF38
 1307 02f6 01       		.byte	0x1
 1308 02f7 7E02     		.2byte	0x27e
 1309 02f9 83000000 		.4byte	0x83
 1310 02fd B2010000 		.4byte	.LLST10
 1311 0301 00       		.byte	0
 1312 0302 0B       		.uleb128 0xb
 1313 0303 59000000 		.4byte	.LASF44
 1314 0307 01       		.byte	0x1
 1315 0308 9502     		.2byte	0x295
 1316 030a 00000000 		.4byte	.LFB13
 1317 030e 10000000 		.4byte	.LFE13-.LFB13
 1318 0312 01       		.uleb128 0x1
 1319 0313 9C       		.byte	0x9c
 1320 0314 29030000 		.4byte	0x329
 1321 0318 0F       		.uleb128 0xf
 1322 0319 DA010000 		.4byte	.LASF38
 1323 031d 01       		.byte	0x1
 1324 031e 9502     		.2byte	0x295
 1325 0320 83000000 		.4byte	0x83
 1326 0324 D3010000 		.4byte	.LLST11
 1327 0328 00       		.byte	0
 1328 0329 0B       		.uleb128 0xb
 1329 032a A6040000 		.4byte	.LASF45
 1330 032e 01       		.byte	0x1
 1331 032f B102     		.2byte	0x2b1
 1332 0331 00000000 		.4byte	.LFB14
 1333 0335 1C000000 		.4byte	.LFE14-.LFB14
 1334 0339 01       		.uleb128 0x1
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 40


 1335 033a 9C       		.byte	0x9c
 1336 033b 6F030000 		.4byte	0x36f
 1337 033f 0F       		.uleb128 0xf
 1338 0340 4C040000 		.4byte	.LASF35
 1339 0344 01       		.byte	0x1
 1340 0345 B102     		.2byte	0x2b1
 1341 0347 83000000 		.4byte	0x83
 1342 034b F4010000 		.4byte	.LLST12
 1343 034f 0F       		.uleb128 0xf
 1344 0350 70040000 		.4byte	.LASF46
 1345 0354 01       		.byte	0x1
 1346 0355 B102     		.2byte	0x2b1
 1347 0357 8F000000 		.4byte	0x8f
 1348 035b 20020000 		.4byte	.LLST13
 1349 035f 0A       		.uleb128 0xa
 1350 0360 10000000 		.4byte	.LVL40
 1351 0364 6D050000 		.4byte	0x56d
 1352 0368 09       		.uleb128 0x9
 1353 0369 01       		.uleb128 0x1
 1354 036a 50       		.byte	0x50
 1355 036b 01       		.uleb128 0x1
 1356 036c 30       		.byte	0x30
 1357 036d 00       		.byte	0
 1358 036e 00       		.byte	0
 1359 036f 0B       		.uleb128 0xb
 1360 0370 BD030000 		.4byte	.LASF47
 1361 0374 01       		.byte	0x1
 1362 0375 D302     		.2byte	0x2d3
 1363 0377 00000000 		.4byte	.LFB15
 1364 037b 1C000000 		.4byte	.LFE15-.LFB15
 1365 037f 01       		.uleb128 0x1
 1366 0380 9C       		.byte	0x9c
 1367 0381 B5030000 		.4byte	0x3b5
 1368 0385 0F       		.uleb128 0xf
 1369 0386 4C040000 		.4byte	.LASF35
 1370 038a 01       		.byte	0x1
 1371 038b D302     		.2byte	0x2d3
 1372 038d 83000000 		.4byte	0x83
 1373 0391 41020000 		.4byte	.LLST14
 1374 0395 0F       		.uleb128 0xf
 1375 0396 2F000000 		.4byte	.LASF48
 1376 039a 01       		.byte	0x1
 1377 039b D302     		.2byte	0x2d3
 1378 039d 9B000000 		.4byte	0x9b
 1379 03a1 6D020000 		.4byte	.LLST15
 1380 03a5 0A       		.uleb128 0xa
 1381 03a6 10000000 		.4byte	.LVL44
 1382 03aa 6D050000 		.4byte	0x56d
 1383 03ae 09       		.uleb128 0x9
 1384 03af 01       		.uleb128 0x1
 1385 03b0 50       		.byte	0x50
 1386 03b1 01       		.uleb128 0x1
 1387 03b2 30       		.byte	0x30
 1388 03b3 00       		.byte	0
 1389 03b4 00       		.byte	0
 1390 03b5 11       		.uleb128 0x11
 1391 03b6 DF010000 		.4byte	.LASF49
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 41


 1392 03ba 01       		.byte	0x1
 1393 03bb F402     		.2byte	0x2f4
 1394 03bd 8F000000 		.4byte	0x8f
 1395 03c1 00000000 		.4byte	.LFB16
 1396 03c5 5C000000 		.4byte	.LFE16-.LFB16
 1397 03c9 01       		.uleb128 0x1
 1398 03ca 9C       		.byte	0x9c
 1399 03cb 0D040000 		.4byte	0x40d
 1400 03cf 0F       		.uleb128 0xf
 1401 03d0 4C040000 		.4byte	.LASF35
 1402 03d4 01       		.byte	0x1
 1403 03d5 F402     		.2byte	0x2f4
 1404 03d7 83000000 		.4byte	0x83
 1405 03db 9D020000 		.4byte	.LLST16
 1406 03df 0F       		.uleb128 0xf
 1407 03e0 77040000 		.4byte	.LASF50
 1408 03e4 01       		.byte	0x1
 1409 03e5 F402     		.2byte	0x2f4
 1410 03e7 8F000000 		.4byte	0x8f
 1411 03eb C9020000 		.4byte	.LLST17
 1412 03ef 12       		.uleb128 0x12
 1413 03f0 0E030000 		.4byte	.LASF51
 1414 03f4 01       		.byte	0x1
 1415 03f5 F602     		.2byte	0x2f6
 1416 03f7 8F000000 		.4byte	0x8f
 1417 03fb 01       		.uleb128 0x1
 1418 03fc 50       		.byte	0x50
 1419 03fd 0A       		.uleb128 0xa
 1420 03fe 10000000 		.4byte	.LVL49
 1421 0402 6D050000 		.4byte	0x56d
 1422 0406 09       		.uleb128 0x9
 1423 0407 01       		.uleb128 0x1
 1424 0408 50       		.byte	0x50
 1425 0409 01       		.uleb128 0x1
 1426 040a 30       		.byte	0x30
 1427 040b 00       		.byte	0
 1428 040c 00       		.byte	0
 1429 040d 11       		.uleb128 0x11
 1430 040e 95010000 		.4byte	.LASF52
 1431 0412 01       		.byte	0x1
 1432 0413 2A03     		.2byte	0x32a
 1433 0415 9B000000 		.4byte	0x9b
 1434 0419 00000000 		.4byte	.LFB17
 1435 041d 40000000 		.4byte	.LFE17-.LFB17
 1436 0421 01       		.uleb128 0x1
 1437 0422 9C       		.byte	0x9c
 1438 0423 63040000 		.4byte	0x463
 1439 0427 0F       		.uleb128 0xf
 1440 0428 4C040000 		.4byte	.LASF35
 1441 042c 01       		.byte	0x1
 1442 042d 2A03     		.2byte	0x32a
 1443 042f 83000000 		.4byte	0x83
 1444 0433 F5020000 		.4byte	.LLST18
 1445 0437 0F       		.uleb128 0xf
 1446 0438 77040000 		.4byte	.LASF50
 1447 043c 01       		.byte	0x1
 1448 043d 2A03     		.2byte	0x32a
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 42


 1449 043f 8F000000 		.4byte	0x8f
 1450 0443 21030000 		.4byte	.LLST19
 1451 0447 13       		.uleb128 0x13
 1452 0448 28020000 		.4byte	.LASF66
 1453 044c 01       		.byte	0x1
 1454 044d 2C03     		.2byte	0x32c
 1455 044f C1000000 		.4byte	0xc1
 1456 0453 0A       		.uleb128 0xa
 1457 0454 10000000 		.4byte	.LVL57
 1458 0458 6D050000 		.4byte	0x56d
 1459 045c 09       		.uleb128 0x9
 1460 045d 01       		.uleb128 0x1
 1461 045e 50       		.byte	0x50
 1462 045f 01       		.uleb128 0x1
 1463 0460 30       		.byte	0x30
 1464 0461 00       		.byte	0
 1465 0462 00       		.byte	0
 1466 0463 11       		.uleb128 0x11
 1467 0464 0F040000 		.4byte	.LASF53
 1468 0468 01       		.byte	0x1
 1469 0469 5703     		.2byte	0x357
 1470 046b A7000000 		.4byte	0xa7
 1471 046f 00000000 		.4byte	.LFB18
 1472 0473 48000000 		.4byte	.LFE18-.LFB18
 1473 0477 01       		.uleb128 0x1
 1474 0478 9C       		.byte	0x9c
 1475 0479 BB040000 		.4byte	0x4bb
 1476 047d 0F       		.uleb128 0xf
 1477 047e 4C040000 		.4byte	.LASF35
 1478 0482 01       		.byte	0x1
 1479 0483 5703     		.2byte	0x357
 1480 0485 83000000 		.4byte	0x83
 1481 0489 4D030000 		.4byte	.LLST20
 1482 048d 0F       		.uleb128 0xf
 1483 048e 77040000 		.4byte	.LASF50
 1484 0492 01       		.byte	0x1
 1485 0493 5703     		.2byte	0x357
 1486 0495 8F000000 		.4byte	0x8f
 1487 0499 79030000 		.4byte	.LLST21
 1488 049d 12       		.uleb128 0x12
 1489 049e 41020000 		.4byte	.LASF54
 1490 04a2 01       		.byte	0x1
 1491 04a3 5903     		.2byte	0x359
 1492 04a5 A7000000 		.4byte	0xa7
 1493 04a9 01       		.uleb128 0x1
 1494 04aa 50       		.byte	0x50
 1495 04ab 0A       		.uleb128 0xa
 1496 04ac 10000000 		.4byte	.LVL64
 1497 04b0 6D050000 		.4byte	0x56d
 1498 04b4 09       		.uleb128 0x9
 1499 04b5 01       		.uleb128 0x1
 1500 04b6 50       		.byte	0x50
 1501 04b7 01       		.uleb128 0x1
 1502 04b8 30       		.byte	0x30
 1503 04b9 00       		.byte	0
 1504 04ba 00       		.byte	0
 1505 04bb 14       		.uleb128 0x14
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 43


 1506 04bc CB040000 		.4byte	0x4cb
 1507 04c0 CB040000 		.4byte	0x4cb
 1508 04c4 15       		.uleb128 0x15
 1509 04c5 EC000000 		.4byte	0xec
 1510 04c9 00       		.byte	0
 1511 04ca 00       		.byte	0
 1512 04cb 16       		.uleb128 0x16
 1513 04cc 83000000 		.4byte	0x83
 1514 04d0 17       		.uleb128 0x17
 1515 04d1 F1020000 		.4byte	.LASF55
 1516 04d5 01       		.byte	0x1
 1517 04d6 21       		.byte	0x21
 1518 04d7 E0040000 		.4byte	0x4e0
 1519 04db 04       		.byte	0x4
 1520 04dc 00       		.byte	0
 1521 04dd 00       		.byte	0
 1522 04de 00       		.byte	0
 1523 04df 00       		.byte	0
 1524 04e0 16       		.uleb128 0x16
 1525 04e1 BB040000 		.4byte	0x4bb
 1526 04e5 18       		.uleb128 0x18
 1527 04e6 05020000 		.4byte	.LASF56
 1528 04ea 01       		.byte	0x1
 1529 04eb 18       		.byte	0x18
 1530 04ec 6B000000 		.4byte	0x6b
 1531 04f0 05       		.uleb128 0x5
 1532 04f1 03       		.byte	0x3
 1533 04f2 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1534 04f6 14       		.uleb128 0x14
 1535 04f7 06050000 		.4byte	0x506
 1536 04fb 06050000 		.4byte	0x506
 1537 04ff 15       		.uleb128 0x15
 1538 0500 EC000000 		.4byte	0xec
 1539 0504 00       		.byte	0
 1540 0505 00       		.byte	0
 1541 0506 05       		.uleb128 0x5
 1542 0507 8F000000 		.4byte	0x8f
 1543 050b 18       		.uleb128 0x18
 1544 050c 00000000 		.4byte	.LASF57
 1545 0510 01       		.byte	0x1
 1546 0511 19       		.byte	0x19
 1547 0512 1C050000 		.4byte	0x51c
 1548 0516 05       		.uleb128 0x5
 1549 0517 03       		.byte	0x3
 1550 0518 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1551 051c 05       		.uleb128 0x5
 1552 051d F6040000 		.4byte	0x4f6
 1553 0521 14       		.uleb128 0x14
 1554 0522 31050000 		.4byte	0x531
 1555 0526 31050000 		.4byte	0x531
 1556 052a 15       		.uleb128 0x15
 1557 052b EC000000 		.4byte	0xec
 1558 052f 00       		.byte	0
 1559 0530 00       		.byte	0
 1560 0531 05       		.uleb128 0x5
 1561 0532 9B000000 		.4byte	0x9b
 1562 0536 18       		.uleb128 0x18
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 44


 1563 0537 81040000 		.4byte	.LASF58
 1564 053b 01       		.byte	0x1
 1565 053c 1A       		.byte	0x1a
 1566 053d 47050000 		.4byte	0x547
 1567 0541 05       		.uleb128 0x5
 1568 0542 03       		.byte	0x3
 1569 0543 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1570 0547 05       		.uleb128 0x5
 1571 0548 21050000 		.4byte	0x521
 1572 054c 19       		.uleb128 0x19
 1573 054d 7F030000 		.4byte	.LASF59
 1574 0551 7F030000 		.4byte	.LASF59
 1575 0555 03       		.byte	0x3
 1576 0556 C0       		.byte	0xc0
 1577 0557 19       		.uleb128 0x19
 1578 0558 64020000 		.4byte	.LASF60
 1579 055c 64020000 		.4byte	.LASF60
 1580 0560 03       		.byte	0x3
 1581 0561 BD       		.byte	0xbd
 1582 0562 19       		.uleb128 0x19
 1583 0563 C2010000 		.4byte	.LASF61
 1584 0567 C2010000 		.4byte	.LASF61
 1585 056b 03       		.byte	0x3
 1586 056c DA       		.byte	0xda
 1587 056d 19       		.uleb128 0x19
 1588 056e F0030000 		.4byte	.LASF62
 1589 0572 F0030000 		.4byte	.LASF62
 1590 0576 03       		.byte	0x3
 1591 0577 E7       		.byte	0xe7
 1592 0578 00       		.byte	0
 1593              		.section	.debug_abbrev,"",%progbits
 1594              	.Ldebug_abbrev0:
 1595 0000 01       		.uleb128 0x1
 1596 0001 11       		.uleb128 0x11
 1597 0002 01       		.byte	0x1
 1598 0003 25       		.uleb128 0x25
 1599 0004 0E       		.uleb128 0xe
 1600 0005 13       		.uleb128 0x13
 1601 0006 0B       		.uleb128 0xb
 1602 0007 03       		.uleb128 0x3
 1603 0008 0E       		.uleb128 0xe
 1604 0009 1B       		.uleb128 0x1b
 1605 000a 0E       		.uleb128 0xe
 1606 000b 55       		.uleb128 0x55
 1607 000c 17       		.uleb128 0x17
 1608 000d 11       		.uleb128 0x11
 1609 000e 01       		.uleb128 0x1
 1610 000f 10       		.uleb128 0x10
 1611 0010 17       		.uleb128 0x17
 1612 0011 00       		.byte	0
 1613 0012 00       		.byte	0
 1614 0013 02       		.uleb128 0x2
 1615 0014 24       		.uleb128 0x24
 1616 0015 00       		.byte	0
 1617 0016 0B       		.uleb128 0xb
 1618 0017 0B       		.uleb128 0xb
 1619 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 45


 1620 0019 0B       		.uleb128 0xb
 1621 001a 03       		.uleb128 0x3
 1622 001b 0E       		.uleb128 0xe
 1623 001c 00       		.byte	0
 1624 001d 00       		.byte	0
 1625 001e 03       		.uleb128 0x3
 1626 001f 24       		.uleb128 0x24
 1627 0020 00       		.byte	0
 1628 0021 0B       		.uleb128 0xb
 1629 0022 0B       		.uleb128 0xb
 1630 0023 3E       		.uleb128 0x3e
 1631 0024 0B       		.uleb128 0xb
 1632 0025 03       		.uleb128 0x3
 1633 0026 08       		.uleb128 0x8
 1634 0027 00       		.byte	0
 1635 0028 00       		.byte	0
 1636 0029 04       		.uleb128 0x4
 1637 002a 16       		.uleb128 0x16
 1638 002b 00       		.byte	0
 1639 002c 03       		.uleb128 0x3
 1640 002d 0E       		.uleb128 0xe
 1641 002e 3A       		.uleb128 0x3a
 1642 002f 0B       		.uleb128 0xb
 1643 0030 3B       		.uleb128 0x3b
 1644 0031 05       		.uleb128 0x5
 1645 0032 49       		.uleb128 0x49
 1646 0033 13       		.uleb128 0x13
 1647 0034 00       		.byte	0
 1648 0035 00       		.byte	0
 1649 0036 05       		.uleb128 0x5
 1650 0037 35       		.uleb128 0x35
 1651 0038 00       		.byte	0
 1652 0039 49       		.uleb128 0x49
 1653 003a 13       		.uleb128 0x13
 1654 003b 00       		.byte	0
 1655 003c 00       		.byte	0
 1656 003d 06       		.uleb128 0x6
 1657 003e 2E       		.uleb128 0x2e
 1658 003f 01       		.byte	0x1
 1659 0040 3F       		.uleb128 0x3f
 1660 0041 19       		.uleb128 0x19
 1661 0042 03       		.uleb128 0x3
 1662 0043 0E       		.uleb128 0xe
 1663 0044 3A       		.uleb128 0x3a
 1664 0045 0B       		.uleb128 0xb
 1665 0046 3B       		.uleb128 0x3b
 1666 0047 0B       		.uleb128 0xb
 1667 0048 27       		.uleb128 0x27
 1668 0049 19       		.uleb128 0x19
 1669 004a 11       		.uleb128 0x11
 1670 004b 01       		.uleb128 0x1
 1671 004c 12       		.uleb128 0x12
 1672 004d 06       		.uleb128 0x6
 1673 004e 40       		.uleb128 0x40
 1674 004f 18       		.uleb128 0x18
 1675 0050 9742     		.uleb128 0x2117
 1676 0052 19       		.uleb128 0x19
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 46


 1677 0053 01       		.uleb128 0x1
 1678 0054 13       		.uleb128 0x13
 1679 0055 00       		.byte	0
 1680 0056 00       		.byte	0
 1681 0057 07       		.uleb128 0x7
 1682 0058 34       		.uleb128 0x34
 1683 0059 00       		.byte	0
 1684 005a 03       		.uleb128 0x3
 1685 005b 0E       		.uleb128 0xe
 1686 005c 3A       		.uleb128 0x3a
 1687 005d 0B       		.uleb128 0xb
 1688 005e 3B       		.uleb128 0x3b
 1689 005f 0B       		.uleb128 0xb
 1690 0060 49       		.uleb128 0x49
 1691 0061 13       		.uleb128 0x13
 1692 0062 02       		.uleb128 0x2
 1693 0063 17       		.uleb128 0x17
 1694 0064 00       		.byte	0
 1695 0065 00       		.byte	0
 1696 0066 08       		.uleb128 0x8
 1697 0067 898201   		.uleb128 0x4109
 1698 006a 01       		.byte	0x1
 1699 006b 11       		.uleb128 0x11
 1700 006c 01       		.uleb128 0x1
 1701 006d 31       		.uleb128 0x31
 1702 006e 13       		.uleb128 0x13
 1703 006f 01       		.uleb128 0x1
 1704 0070 13       		.uleb128 0x13
 1705 0071 00       		.byte	0
 1706 0072 00       		.byte	0
 1707 0073 09       		.uleb128 0x9
 1708 0074 8A8201   		.uleb128 0x410a
 1709 0077 00       		.byte	0
 1710 0078 02       		.uleb128 0x2
 1711 0079 18       		.uleb128 0x18
 1712 007a 9142     		.uleb128 0x2111
 1713 007c 18       		.uleb128 0x18
 1714 007d 00       		.byte	0
 1715 007e 00       		.byte	0
 1716 007f 0A       		.uleb128 0xa
 1717 0080 898201   		.uleb128 0x4109
 1718 0083 01       		.byte	0x1
 1719 0084 11       		.uleb128 0x11
 1720 0085 01       		.uleb128 0x1
 1721 0086 31       		.uleb128 0x31
 1722 0087 13       		.uleb128 0x13
 1723 0088 00       		.byte	0
 1724 0089 00       		.byte	0
 1725 008a 0B       		.uleb128 0xb
 1726 008b 2E       		.uleb128 0x2e
 1727 008c 01       		.byte	0x1
 1728 008d 3F       		.uleb128 0x3f
 1729 008e 19       		.uleb128 0x19
 1730 008f 03       		.uleb128 0x3
 1731 0090 0E       		.uleb128 0xe
 1732 0091 3A       		.uleb128 0x3a
 1733 0092 0B       		.uleb128 0xb
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 47


 1734 0093 3B       		.uleb128 0x3b
 1735 0094 05       		.uleb128 0x5
 1736 0095 27       		.uleb128 0x27
 1737 0096 19       		.uleb128 0x19
 1738 0097 11       		.uleb128 0x11
 1739 0098 01       		.uleb128 0x1
 1740 0099 12       		.uleb128 0x12
 1741 009a 06       		.uleb128 0x6
 1742 009b 40       		.uleb128 0x40
 1743 009c 18       		.uleb128 0x18
 1744 009d 9742     		.uleb128 0x2117
 1745 009f 19       		.uleb128 0x19
 1746 00a0 01       		.uleb128 0x1
 1747 00a1 13       		.uleb128 0x13
 1748 00a2 00       		.byte	0
 1749 00a3 00       		.byte	0
 1750 00a4 0C       		.uleb128 0xc
 1751 00a5 898201   		.uleb128 0x4109
 1752 00a8 00       		.byte	0
 1753 00a9 11       		.uleb128 0x11
 1754 00aa 01       		.uleb128 0x1
 1755 00ab 31       		.uleb128 0x31
 1756 00ac 13       		.uleb128 0x13
 1757 00ad 00       		.byte	0
 1758 00ae 00       		.byte	0
 1759 00af 0D       		.uleb128 0xd
 1760 00b0 2E       		.uleb128 0x2e
 1761 00b1 00       		.byte	0
 1762 00b2 3F       		.uleb128 0x3f
 1763 00b3 19       		.uleb128 0x19
 1764 00b4 03       		.uleb128 0x3
 1765 00b5 0E       		.uleb128 0xe
 1766 00b6 3A       		.uleb128 0x3a
 1767 00b7 0B       		.uleb128 0xb
 1768 00b8 3B       		.uleb128 0x3b
 1769 00b9 05       		.uleb128 0x5
 1770 00ba 27       		.uleb128 0x27
 1771 00bb 19       		.uleb128 0x19
 1772 00bc 11       		.uleb128 0x11
 1773 00bd 01       		.uleb128 0x1
 1774 00be 12       		.uleb128 0x12
 1775 00bf 06       		.uleb128 0x6
 1776 00c0 40       		.uleb128 0x40
 1777 00c1 18       		.uleb128 0x18
 1778 00c2 9742     		.uleb128 0x2117
 1779 00c4 19       		.uleb128 0x19
 1780 00c5 00       		.byte	0
 1781 00c6 00       		.byte	0
 1782 00c7 0E       		.uleb128 0xe
 1783 00c8 2E       		.uleb128 0x2e
 1784 00c9 01       		.byte	0x1
 1785 00ca 3F       		.uleb128 0x3f
 1786 00cb 19       		.uleb128 0x19
 1787 00cc 03       		.uleb128 0x3
 1788 00cd 0E       		.uleb128 0xe
 1789 00ce 3A       		.uleb128 0x3a
 1790 00cf 0B       		.uleb128 0xb
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 48


 1791 00d0 3B       		.uleb128 0x3b
 1792 00d1 05       		.uleb128 0x5
 1793 00d2 27       		.uleb128 0x27
 1794 00d3 19       		.uleb128 0x19
 1795 00d4 49       		.uleb128 0x49
 1796 00d5 13       		.uleb128 0x13
 1797 00d6 11       		.uleb128 0x11
 1798 00d7 01       		.uleb128 0x1
 1799 00d8 12       		.uleb128 0x12
 1800 00d9 06       		.uleb128 0x6
 1801 00da 40       		.uleb128 0x40
 1802 00db 18       		.uleb128 0x18
 1803 00dc 9742     		.uleb128 0x2117
 1804 00de 19       		.uleb128 0x19
 1805 00df 01       		.uleb128 0x1
 1806 00e0 13       		.uleb128 0x13
 1807 00e1 00       		.byte	0
 1808 00e2 00       		.byte	0
 1809 00e3 0F       		.uleb128 0xf
 1810 00e4 05       		.uleb128 0x5
 1811 00e5 00       		.byte	0
 1812 00e6 03       		.uleb128 0x3
 1813 00e7 0E       		.uleb128 0xe
 1814 00e8 3A       		.uleb128 0x3a
 1815 00e9 0B       		.uleb128 0xb
 1816 00ea 3B       		.uleb128 0x3b
 1817 00eb 05       		.uleb128 0x5
 1818 00ec 49       		.uleb128 0x49
 1819 00ed 13       		.uleb128 0x13
 1820 00ee 02       		.uleb128 0x2
 1821 00ef 17       		.uleb128 0x17
 1822 00f0 00       		.byte	0
 1823 00f1 00       		.byte	0
 1824 00f2 10       		.uleb128 0x10
 1825 00f3 34       		.uleb128 0x34
 1826 00f4 00       		.byte	0
 1827 00f5 03       		.uleb128 0x3
 1828 00f6 0E       		.uleb128 0xe
 1829 00f7 3A       		.uleb128 0x3a
 1830 00f8 0B       		.uleb128 0xb
 1831 00f9 3B       		.uleb128 0x3b
 1832 00fa 05       		.uleb128 0x5
 1833 00fb 49       		.uleb128 0x49
 1834 00fc 13       		.uleb128 0x13
 1835 00fd 02       		.uleb128 0x2
 1836 00fe 17       		.uleb128 0x17
 1837 00ff 00       		.byte	0
 1838 0100 00       		.byte	0
 1839 0101 11       		.uleb128 0x11
 1840 0102 2E       		.uleb128 0x2e
 1841 0103 01       		.byte	0x1
 1842 0104 3F       		.uleb128 0x3f
 1843 0105 19       		.uleb128 0x19
 1844 0106 03       		.uleb128 0x3
 1845 0107 0E       		.uleb128 0xe
 1846 0108 3A       		.uleb128 0x3a
 1847 0109 0B       		.uleb128 0xb
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 49


 1848 010a 3B       		.uleb128 0x3b
 1849 010b 05       		.uleb128 0x5
 1850 010c 27       		.uleb128 0x27
 1851 010d 19       		.uleb128 0x19
 1852 010e 49       		.uleb128 0x49
 1853 010f 13       		.uleb128 0x13
 1854 0110 11       		.uleb128 0x11
 1855 0111 01       		.uleb128 0x1
 1856 0112 12       		.uleb128 0x12
 1857 0113 06       		.uleb128 0x6
 1858 0114 40       		.uleb128 0x40
 1859 0115 18       		.uleb128 0x18
 1860 0116 9642     		.uleb128 0x2116
 1861 0118 19       		.uleb128 0x19
 1862 0119 01       		.uleb128 0x1
 1863 011a 13       		.uleb128 0x13
 1864 011b 00       		.byte	0
 1865 011c 00       		.byte	0
 1866 011d 12       		.uleb128 0x12
 1867 011e 34       		.uleb128 0x34
 1868 011f 00       		.byte	0
 1869 0120 03       		.uleb128 0x3
 1870 0121 0E       		.uleb128 0xe
 1871 0122 3A       		.uleb128 0x3a
 1872 0123 0B       		.uleb128 0xb
 1873 0124 3B       		.uleb128 0x3b
 1874 0125 05       		.uleb128 0x5
 1875 0126 49       		.uleb128 0x49
 1876 0127 13       		.uleb128 0x13
 1877 0128 02       		.uleb128 0x2
 1878 0129 18       		.uleb128 0x18
 1879 012a 00       		.byte	0
 1880 012b 00       		.byte	0
 1881 012c 13       		.uleb128 0x13
 1882 012d 34       		.uleb128 0x34
 1883 012e 00       		.byte	0
 1884 012f 03       		.uleb128 0x3
 1885 0130 0E       		.uleb128 0xe
 1886 0131 3A       		.uleb128 0x3a
 1887 0132 0B       		.uleb128 0xb
 1888 0133 3B       		.uleb128 0x3b
 1889 0134 05       		.uleb128 0x5
 1890 0135 49       		.uleb128 0x49
 1891 0136 13       		.uleb128 0x13
 1892 0137 00       		.byte	0
 1893 0138 00       		.byte	0
 1894 0139 14       		.uleb128 0x14
 1895 013a 01       		.uleb128 0x1
 1896 013b 01       		.byte	0x1
 1897 013c 49       		.uleb128 0x49
 1898 013d 13       		.uleb128 0x13
 1899 013e 01       		.uleb128 0x1
 1900 013f 13       		.uleb128 0x13
 1901 0140 00       		.byte	0
 1902 0141 00       		.byte	0
 1903 0142 15       		.uleb128 0x15
 1904 0143 21       		.uleb128 0x21
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 50


 1905 0144 00       		.byte	0
 1906 0145 49       		.uleb128 0x49
 1907 0146 13       		.uleb128 0x13
 1908 0147 2F       		.uleb128 0x2f
 1909 0148 0B       		.uleb128 0xb
 1910 0149 00       		.byte	0
 1911 014a 00       		.byte	0
 1912 014b 16       		.uleb128 0x16
 1913 014c 26       		.uleb128 0x26
 1914 014d 00       		.byte	0
 1915 014e 49       		.uleb128 0x49
 1916 014f 13       		.uleb128 0x13
 1917 0150 00       		.byte	0
 1918 0151 00       		.byte	0
 1919 0152 17       		.uleb128 0x17
 1920 0153 34       		.uleb128 0x34
 1921 0154 00       		.byte	0
 1922 0155 03       		.uleb128 0x3
 1923 0156 0E       		.uleb128 0xe
 1924 0157 3A       		.uleb128 0x3a
 1925 0158 0B       		.uleb128 0xb
 1926 0159 3B       		.uleb128 0x3b
 1927 015a 0B       		.uleb128 0xb
 1928 015b 49       		.uleb128 0x49
 1929 015c 13       		.uleb128 0x13
 1930 015d 1C       		.uleb128 0x1c
 1931 015e 0A       		.uleb128 0xa
 1932 015f 00       		.byte	0
 1933 0160 00       		.byte	0
 1934 0161 18       		.uleb128 0x18
 1935 0162 34       		.uleb128 0x34
 1936 0163 00       		.byte	0
 1937 0164 03       		.uleb128 0x3
 1938 0165 0E       		.uleb128 0xe
 1939 0166 3A       		.uleb128 0x3a
 1940 0167 0B       		.uleb128 0xb
 1941 0168 3B       		.uleb128 0x3b
 1942 0169 0B       		.uleb128 0xb
 1943 016a 49       		.uleb128 0x49
 1944 016b 13       		.uleb128 0x13
 1945 016c 3F       		.uleb128 0x3f
 1946 016d 19       		.uleb128 0x19
 1947 016e 02       		.uleb128 0x2
 1948 016f 18       		.uleb128 0x18
 1949 0170 00       		.byte	0
 1950 0171 00       		.byte	0
 1951 0172 19       		.uleb128 0x19
 1952 0173 2E       		.uleb128 0x2e
 1953 0174 00       		.byte	0
 1954 0175 3F       		.uleb128 0x3f
 1955 0176 19       		.uleb128 0x19
 1956 0177 3C       		.uleb128 0x3c
 1957 0178 19       		.uleb128 0x19
 1958 0179 6E       		.uleb128 0x6e
 1959 017a 0E       		.uleb128 0xe
 1960 017b 03       		.uleb128 0x3
 1961 017c 0E       		.uleb128 0xe
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 51


 1962 017d 3A       		.uleb128 0x3a
 1963 017e 0B       		.uleb128 0xb
 1964 017f 3B       		.uleb128 0x3b
 1965 0180 0B       		.uleb128 0xb
 1966 0181 00       		.byte	0
 1967 0182 00       		.byte	0
 1968 0183 00       		.byte	0
 1969              		.section	.debug_loc,"",%progbits
 1970              	.Ldebug_loc0:
 1971              	.LLST0:
 1972 0000 74000000 		.4byte	.LVL5
 1973 0004 78000000 		.4byte	.LVL7
 1974 0008 0200     		.2byte	0x2
 1975 000a 30       		.byte	0x30
 1976 000b 9F       		.byte	0x9f
 1977 000c 78000000 		.4byte	.LVL7
 1978 0010 F8000000 		.4byte	.LFE2
 1979 0014 0100     		.2byte	0x1
 1980 0016 53       		.byte	0x53
 1981 0017 00000000 		.4byte	0
 1982 001b 00000000 		.4byte	0
 1983              	.LLST1:
 1984 001f 68000000 		.4byte	.LVL2
 1985 0023 6E000000 		.4byte	.LVL3
 1986 0027 0700     		.2byte	0x7
 1987 0029 71       		.byte	0x71
 1988 002a 00       		.sleb128 0
 1989 002b 40       		.byte	0x40
 1990 002c 49       		.byte	0x49
 1991 002d 24       		.byte	0x24
 1992 002e 21       		.byte	0x21
 1993 002f 9F       		.byte	0x9f
 1994 0030 72000000 		.4byte	.LVL4
 1995 0034 76000000 		.4byte	.LVL6
 1996 0038 0100     		.2byte	0x1
 1997 003a 53       		.byte	0x53
 1998 003b 76000000 		.4byte	.LVL6
 1999 003f 78000000 		.4byte	.LVL7
 2000 0043 0200     		.2byte	0x2
 2001 0045 72       		.byte	0x72
 2002 0046 00       		.sleb128 0
 2003 0047 78000000 		.4byte	.LVL7
 2004 004b 90000000 		.4byte	.LVL9
 2005 004f 0200     		.2byte	0x2
 2006 0051 30       		.byte	0x30
 2007 0052 9F       		.byte	0x9f
 2008 0053 00000000 		.4byte	0
 2009 0057 00000000 		.4byte	0
 2010              	.LLST2:
 2011 005b 82000000 		.4byte	.LVL8
 2012 005f 90000000 		.4byte	.LVL9
 2013 0063 0400     		.2byte	0x4
 2014 0065 0A       		.byte	0xa
 2015 0066 0010     		.2byte	0x1000
 2016 0068 9F       		.byte	0x9f
 2017 0069 00000000 		.4byte	0
 2018 006d 00000000 		.4byte	0
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 52


 2019              	.LLST3:
 2020 0071 00000000 		.4byte	.LVL13
 2021 0075 06000000 		.4byte	.LVL15
 2022 0079 0100     		.2byte	0x1
 2023 007b 50       		.byte	0x50
 2024 007c 06000000 		.4byte	.LVL15
 2025 0080 1A000000 		.4byte	.LVL17
 2026 0084 0100     		.2byte	0x1
 2027 0086 52       		.byte	0x52
 2028 0087 1A000000 		.4byte	.LVL17
 2029 008b 20000000 		.4byte	.LVL18
 2030 008f 0400     		.2byte	0x4
 2031 0091 F3       		.byte	0xf3
 2032 0092 01       		.uleb128 0x1
 2033 0093 50       		.byte	0x50
 2034 0094 9F       		.byte	0x9f
 2035 0095 20000000 		.4byte	.LVL18
 2036 0099 22000000 		.4byte	.LVL19
 2037 009d 0100     		.2byte	0x1
 2038 009f 50       		.byte	0x50
 2039 00a0 22000000 		.4byte	.LVL19
 2040 00a4 28000000 		.4byte	.LFE7
 2041 00a8 0400     		.2byte	0x4
 2042 00aa F3       		.byte	0xf3
 2043 00ab 01       		.uleb128 0x1
 2044 00ac 50       		.byte	0x50
 2045 00ad 9F       		.byte	0x9f
 2046 00ae 00000000 		.4byte	0
 2047 00b2 00000000 		.4byte	0
 2048              	.LLST4:
 2049 00b6 02000000 		.4byte	.LVL14
 2050 00ba 06000000 		.4byte	.LVL15
 2051 00be 0200     		.2byte	0x2
 2052 00c0 30       		.byte	0x30
 2053 00c1 9F       		.byte	0x9f
 2054 00c2 0E000000 		.4byte	.LVL16
 2055 00c6 20000000 		.4byte	.LVL18
 2056 00ca 0100     		.2byte	0x1
 2057 00cc 50       		.byte	0x50
 2058 00cd 20000000 		.4byte	.LVL18
 2059 00d1 22000000 		.4byte	.LVL19
 2060 00d5 0200     		.2byte	0x2
 2061 00d7 30       		.byte	0x30
 2062 00d8 9F       		.byte	0x9f
 2063 00d9 22000000 		.4byte	.LVL19
 2064 00dd 28000000 		.4byte	.LFE7
 2065 00e1 0100     		.2byte	0x1
 2066 00e3 50       		.byte	0x50
 2067 00e4 00000000 		.4byte	0
 2068 00e8 00000000 		.4byte	0
 2069              	.LLST5:
 2070 00ec 00000000 		.4byte	.LVL20
 2071 00f0 08000000 		.4byte	.LVL21
 2072 00f4 0100     		.2byte	0x1
 2073 00f6 50       		.byte	0x50
 2074 00f7 08000000 		.4byte	.LVL21
 2075 00fb 12000000 		.4byte	.LVL23
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 53


 2076 00ff 0100     		.2byte	0x1
 2077 0101 54       		.byte	0x54
 2078 0102 12000000 		.4byte	.LVL23
 2079 0106 20000000 		.4byte	.LVL25
 2080 010a 0400     		.2byte	0x4
 2081 010c F3       		.byte	0xf3
 2082 010d 01       		.uleb128 0x1
 2083 010e 50       		.byte	0x50
 2084 010f 9F       		.byte	0x9f
 2085 0110 20000000 		.4byte	.LVL25
 2086 0114 22000000 		.4byte	.LVL26
 2087 0118 0100     		.2byte	0x1
 2088 011a 54       		.byte	0x54
 2089 011b 22000000 		.4byte	.LVL26
 2090 011f 2C000000 		.4byte	.LFE8
 2091 0123 0400     		.2byte	0x4
 2092 0125 F3       		.byte	0xf3
 2093 0126 01       		.uleb128 0x1
 2094 0127 50       		.byte	0x50
 2095 0128 9F       		.byte	0x9f
 2096 0129 00000000 		.4byte	0
 2097 012d 00000000 		.4byte	0
 2098              	.LLST6:
 2099 0131 1E000000 		.4byte	.LVL24
 2100 0135 20000000 		.4byte	.LVL25
 2101 0139 0100     		.2byte	0x1
 2102 013b 50       		.byte	0x50
 2103 013c 22000000 		.4byte	.LVL26
 2104 0140 24000000 		.4byte	.LVL27
 2105 0144 0100     		.2byte	0x1
 2106 0146 50       		.byte	0x50
 2107 0147 00000000 		.4byte	0
 2108 014b 00000000 		.4byte	0
 2109              	.LLST7:
 2110 014f 00000000 		.4byte	.LVL28
 2111 0153 04000000 		.4byte	.LVL29
 2112 0157 0100     		.2byte	0x1
 2113 0159 50       		.byte	0x50
 2114 015a 04000000 		.4byte	.LVL29
 2115 015e 10000000 		.4byte	.LFE9
 2116 0162 0400     		.2byte	0x4
 2117 0164 F3       		.byte	0xf3
 2118 0165 01       		.uleb128 0x1
 2119 0166 50       		.byte	0x50
 2120 0167 9F       		.byte	0x9f
 2121 0168 00000000 		.4byte	0
 2122 016c 00000000 		.4byte	0
 2123              	.LLST8:
 2124 0170 00000000 		.4byte	.LVL30
 2125 0174 0E000000 		.4byte	.LVL31
 2126 0178 0100     		.2byte	0x1
 2127 017a 50       		.byte	0x50
 2128 017b 0E000000 		.4byte	.LVL31
 2129 017f 1C000000 		.4byte	.LFE10
 2130 0183 0400     		.2byte	0x4
 2131 0185 F3       		.byte	0xf3
 2132 0186 01       		.uleb128 0x1
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 54


 2133 0187 50       		.byte	0x50
 2134 0188 9F       		.byte	0x9f
 2135 0189 00000000 		.4byte	0
 2136 018d 00000000 		.4byte	0
 2137              	.LLST9:
 2138 0191 00000000 		.4byte	.LVL32
 2139 0195 0E000000 		.4byte	.LVL33
 2140 0199 0100     		.2byte	0x1
 2141 019b 50       		.byte	0x50
 2142 019c 0E000000 		.4byte	.LVL33
 2143 01a0 18000000 		.4byte	.LFE11
 2144 01a4 0400     		.2byte	0x4
 2145 01a6 F3       		.byte	0xf3
 2146 01a7 01       		.uleb128 0x1
 2147 01a8 50       		.byte	0x50
 2148 01a9 9F       		.byte	0x9f
 2149 01aa 00000000 		.4byte	0
 2150 01ae 00000000 		.4byte	0
 2151              	.LLST10:
 2152 01b2 00000000 		.4byte	.LVL34
 2153 01b6 04000000 		.4byte	.LVL35
 2154 01ba 0100     		.2byte	0x1
 2155 01bc 50       		.byte	0x50
 2156 01bd 04000000 		.4byte	.LVL35
 2157 01c1 10000000 		.4byte	.LFE12
 2158 01c5 0400     		.2byte	0x4
 2159 01c7 F3       		.byte	0xf3
 2160 01c8 01       		.uleb128 0x1
 2161 01c9 50       		.byte	0x50
 2162 01ca 9F       		.byte	0x9f
 2163 01cb 00000000 		.4byte	0
 2164 01cf 00000000 		.4byte	0
 2165              	.LLST11:
 2166 01d3 00000000 		.4byte	.LVL36
 2167 01d7 04000000 		.4byte	.LVL37
 2168 01db 0100     		.2byte	0x1
 2169 01dd 50       		.byte	0x50
 2170 01de 04000000 		.4byte	.LVL37
 2171 01e2 10000000 		.4byte	.LFE13
 2172 01e6 0400     		.2byte	0x4
 2173 01e8 F3       		.byte	0xf3
 2174 01e9 01       		.uleb128 0x1
 2175 01ea 50       		.byte	0x50
 2176 01eb 9F       		.byte	0x9f
 2177 01ec 00000000 		.4byte	0
 2178 01f0 00000000 		.4byte	0
 2179              	.LLST12:
 2180 01f4 00000000 		.4byte	.LVL38
 2181 01f8 0C000000 		.4byte	.LVL39
 2182 01fc 0100     		.2byte	0x1
 2183 01fe 50       		.byte	0x50
 2184 01ff 0C000000 		.4byte	.LVL39
 2185 0203 12000000 		.4byte	.LVL41
 2186 0207 0100     		.2byte	0x1
 2187 0209 54       		.byte	0x54
 2188 020a 12000000 		.4byte	.LVL41
 2189 020e 1C000000 		.4byte	.LFE14
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 55


 2190 0212 0400     		.2byte	0x4
 2191 0214 F3       		.byte	0xf3
 2192 0215 01       		.uleb128 0x1
 2193 0216 50       		.byte	0x50
 2194 0217 9F       		.byte	0x9f
 2195 0218 00000000 		.4byte	0
 2196 021c 00000000 		.4byte	0
 2197              	.LLST13:
 2198 0220 00000000 		.4byte	.LVL38
 2199 0224 0F000000 		.4byte	.LVL40-1
 2200 0228 0100     		.2byte	0x1
 2201 022a 51       		.byte	0x51
 2202 022b 0F000000 		.4byte	.LVL40-1
 2203 022f 1C000000 		.4byte	.LFE14
 2204 0233 0400     		.2byte	0x4
 2205 0235 F3       		.byte	0xf3
 2206 0236 01       		.uleb128 0x1
 2207 0237 51       		.byte	0x51
 2208 0238 9F       		.byte	0x9f
 2209 0239 00000000 		.4byte	0
 2210 023d 00000000 		.4byte	0
 2211              	.LLST14:
 2212 0241 00000000 		.4byte	.LVL42
 2213 0245 0C000000 		.4byte	.LVL43
 2214 0249 0100     		.2byte	0x1
 2215 024b 50       		.byte	0x50
 2216 024c 0C000000 		.4byte	.LVL43
 2217 0250 12000000 		.4byte	.LVL45
 2218 0254 0100     		.2byte	0x1
 2219 0256 54       		.byte	0x54
 2220 0257 12000000 		.4byte	.LVL45
 2221 025b 1C000000 		.4byte	.LFE15
 2222 025f 0400     		.2byte	0x4
 2223 0261 F3       		.byte	0xf3
 2224 0262 01       		.uleb128 0x1
 2225 0263 50       		.byte	0x50
 2226 0264 9F       		.byte	0x9f
 2227 0265 00000000 		.4byte	0
 2228 0269 00000000 		.4byte	0
 2229              	.LLST15:
 2230 026d 00000000 		.4byte	.LVL42
 2231 0271 0F000000 		.4byte	.LVL44-1
 2232 0275 0100     		.2byte	0x1
 2233 0277 51       		.byte	0x51
 2234 0278 0F000000 		.4byte	.LVL44-1
 2235 027c 16000000 		.4byte	.LVL46
 2236 0280 0100     		.2byte	0x1
 2237 0282 55       		.byte	0x55
 2238 0283 16000000 		.4byte	.LVL46
 2239 0287 1C000000 		.4byte	.LFE15
 2240 028b 0800     		.2byte	0x8
 2241 028d F3       		.byte	0xf3
 2242 028e 01       		.uleb128 0x1
 2243 028f 50       		.byte	0x50
 2244 0290 32       		.byte	0x32
 2245 0291 24       		.byte	0x24
 2246 0292 73       		.byte	0x73
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 56


 2247 0293 00       		.sleb128 0
 2248 0294 22       		.byte	0x22
 2249 0295 00000000 		.4byte	0
 2250 0299 00000000 		.4byte	0
 2251              	.LLST16:
 2252 029d 00000000 		.4byte	.LVL47
 2253 02a1 0C000000 		.4byte	.LVL48
 2254 02a5 0100     		.2byte	0x1
 2255 02a7 50       		.byte	0x50
 2256 02a8 0C000000 		.4byte	.LVL48
 2257 02ac 44000000 		.4byte	.LVL51
 2258 02b0 0100     		.2byte	0x1
 2259 02b2 54       		.byte	0x54
 2260 02b3 44000000 		.4byte	.LVL51
 2261 02b7 5C000000 		.4byte	.LFE16
 2262 02bb 0400     		.2byte	0x4
 2263 02bd F3       		.byte	0xf3
 2264 02be 01       		.uleb128 0x1
 2265 02bf 50       		.byte	0x50
 2266 02c0 9F       		.byte	0x9f
 2267 02c1 00000000 		.4byte	0
 2268 02c5 00000000 		.4byte	0
 2269              	.LLST17:
 2270 02c9 00000000 		.4byte	.LVL47
 2271 02cd 0F000000 		.4byte	.LVL49-1
 2272 02d1 0100     		.2byte	0x1
 2273 02d3 51       		.byte	0x51
 2274 02d4 0F000000 		.4byte	.LVL49-1
 2275 02d8 1C000000 		.4byte	.LVL50
 2276 02dc 0400     		.2byte	0x4
 2277 02de F3       		.byte	0xf3
 2278 02df 01       		.uleb128 0x1
 2279 02e0 51       		.byte	0x51
 2280 02e1 9F       		.byte	0x9f
 2281 02e2 1C000000 		.4byte	.LVL50
 2282 02e6 48000000 		.4byte	.LVL52
 2283 02ea 0100     		.2byte	0x1
 2284 02ec 51       		.byte	0x51
 2285 02ed 00000000 		.4byte	0
 2286 02f1 00000000 		.4byte	0
 2287              	.LLST18:
 2288 02f5 00000000 		.4byte	.LVL55
 2289 02f9 0C000000 		.4byte	.LVL56
 2290 02fd 0100     		.2byte	0x1
 2291 02ff 50       		.byte	0x50
 2292 0300 0C000000 		.4byte	.LVL56
 2293 0304 28000000 		.4byte	.LVL60
 2294 0308 0100     		.2byte	0x1
 2295 030a 55       		.byte	0x55
 2296 030b 28000000 		.4byte	.LVL60
 2297 030f 40000000 		.4byte	.LFE17
 2298 0313 0400     		.2byte	0x4
 2299 0315 F3       		.byte	0xf3
 2300 0316 01       		.uleb128 0x1
 2301 0317 50       		.byte	0x50
 2302 0318 9F       		.byte	0x9f
 2303 0319 00000000 		.4byte	0
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 57


 2304 031d 00000000 		.4byte	0
 2305              	.LLST19:
 2306 0321 00000000 		.4byte	.LVL55
 2307 0325 0F000000 		.4byte	.LVL57-1
 2308 0329 0100     		.2byte	0x1
 2309 032b 51       		.byte	0x51
 2310 032c 0F000000 		.4byte	.LVL57-1
 2311 0330 1C000000 		.4byte	.LVL58
 2312 0334 0400     		.2byte	0x4
 2313 0336 F3       		.byte	0xf3
 2314 0337 01       		.uleb128 0x1
 2315 0338 51       		.byte	0x51
 2316 0339 9F       		.byte	0x9f
 2317 033a 1C000000 		.4byte	.LVL58
 2318 033e 25000000 		.4byte	.LVL59-1
 2319 0342 0100     		.2byte	0x1
 2320 0344 50       		.byte	0x50
 2321 0345 00000000 		.4byte	0
 2322 0349 00000000 		.4byte	0
 2323              	.LLST20:
 2324 034d 00000000 		.4byte	.LVL62
 2325 0351 0C000000 		.4byte	.LVL63
 2326 0355 0100     		.2byte	0x1
 2327 0357 50       		.byte	0x50
 2328 0358 0C000000 		.4byte	.LVL63
 2329 035c 2A000000 		.4byte	.LVL68
 2330 0360 0100     		.2byte	0x1
 2331 0362 54       		.byte	0x54
 2332 0363 2A000000 		.4byte	.LVL68
 2333 0367 48000000 		.4byte	.LFE18
 2334 036b 0400     		.2byte	0x4
 2335 036d F3       		.byte	0xf3
 2336 036e 01       		.uleb128 0x1
 2337 036f 50       		.byte	0x50
 2338 0370 9F       		.byte	0x9f
 2339 0371 00000000 		.4byte	0
 2340 0375 00000000 		.4byte	0
 2341              	.LLST21:
 2342 0379 00000000 		.4byte	.LVL62
 2343 037d 0F000000 		.4byte	.LVL64-1
 2344 0381 0100     		.2byte	0x1
 2345 0383 51       		.byte	0x51
 2346 0384 0F000000 		.4byte	.LVL64-1
 2347 0388 1C000000 		.4byte	.LVL65
 2348 038c 0400     		.2byte	0x4
 2349 038e F3       		.byte	0xf3
 2350 038f 01       		.uleb128 0x1
 2351 0390 51       		.byte	0x51
 2352 0391 9F       		.byte	0x9f
 2353 0392 1C000000 		.4byte	.LVL65
 2354 0396 1F000000 		.4byte	.LVL66-1
 2355 039a 0100     		.2byte	0x1
 2356 039c 50       		.byte	0x50
 2357 039d 00000000 		.4byte	0
 2358 03a1 00000000 		.4byte	0
 2359              		.section	.debug_aranges,"",%progbits
 2360 0000 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 58


 2361 0004 0200     		.2byte	0x2
 2362 0006 00000000 		.4byte	.Ldebug_info0
 2363 000a 04       		.byte	0x4
 2364 000b 00       		.byte	0
 2365 000c 0000     		.2byte	0
 2366 000e 0000     		.2byte	0
 2367 0010 00000000 		.4byte	.LFB2
 2368 0014 F8000000 		.4byte	.LFE2-.LFB2
 2369 0018 00000000 		.4byte	.LFB3
 2370 001c 30000000 		.4byte	.LFE3-.LFB3
 2371 0020 00000000 		.4byte	.LFB1
 2372 0024 20000000 		.4byte	.LFE1-.LFB1
 2373 0028 00000000 		.4byte	.LFB4
 2374 002c 10000000 		.4byte	.LFE4-.LFB4
 2375 0030 00000000 		.4byte	.LFB5
 2376 0034 14000000 		.4byte	.LFE5-.LFB5
 2377 0038 00000000 		.4byte	.LFB6
 2378 003c 14000000 		.4byte	.LFE6-.LFB6
 2379 0040 00000000 		.4byte	.LFB7
 2380 0044 28000000 		.4byte	.LFE7-.LFB7
 2381 0048 00000000 		.4byte	.LFB8
 2382 004c 2C000000 		.4byte	.LFE8-.LFB8
 2383 0050 00000000 		.4byte	.LFB9
 2384 0054 10000000 		.4byte	.LFE9-.LFB9
 2385 0058 00000000 		.4byte	.LFB10
 2386 005c 1C000000 		.4byte	.LFE10-.LFB10
 2387 0060 00000000 		.4byte	.LFB11
 2388 0064 18000000 		.4byte	.LFE11-.LFB11
 2389 0068 00000000 		.4byte	.LFB12
 2390 006c 10000000 		.4byte	.LFE12-.LFB12
 2391 0070 00000000 		.4byte	.LFB13
 2392 0074 10000000 		.4byte	.LFE13-.LFB13
 2393 0078 00000000 		.4byte	.LFB14
 2394 007c 1C000000 		.4byte	.LFE14-.LFB14
 2395 0080 00000000 		.4byte	.LFB15
 2396 0084 1C000000 		.4byte	.LFE15-.LFB15
 2397 0088 00000000 		.4byte	.LFB16
 2398 008c 5C000000 		.4byte	.LFE16-.LFB16
 2399 0090 00000000 		.4byte	.LFB17
 2400 0094 40000000 		.4byte	.LFE17-.LFB17
 2401 0098 00000000 		.4byte	.LFB18
 2402 009c 48000000 		.4byte	.LFE18-.LFB18
 2403 00a0 00000000 		.4byte	0
 2404 00a4 00000000 		.4byte	0
 2405              		.section	.debug_ranges,"",%progbits
 2406              	.Ldebug_ranges0:
 2407 0000 00000000 		.4byte	.LFB2
 2408 0004 F8000000 		.4byte	.LFE2
 2409 0008 00000000 		.4byte	.LFB3
 2410 000c 30000000 		.4byte	.LFE3
 2411 0010 00000000 		.4byte	.LFB1
 2412 0014 20000000 		.4byte	.LFE1
 2413 0018 00000000 		.4byte	.LFB4
 2414 001c 10000000 		.4byte	.LFE4
 2415 0020 00000000 		.4byte	.LFB5
 2416 0024 14000000 		.4byte	.LFE5
 2417 0028 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 59


 2418 002c 14000000 		.4byte	.LFE6
 2419 0030 00000000 		.4byte	.LFB7
 2420 0034 28000000 		.4byte	.LFE7
 2421 0038 00000000 		.4byte	.LFB8
 2422 003c 2C000000 		.4byte	.LFE8
 2423 0040 00000000 		.4byte	.LFB9
 2424 0044 10000000 		.4byte	.LFE9
 2425 0048 00000000 		.4byte	.LFB10
 2426 004c 1C000000 		.4byte	.LFE10
 2427 0050 00000000 		.4byte	.LFB11
 2428 0054 18000000 		.4byte	.LFE11
 2429 0058 00000000 		.4byte	.LFB12
 2430 005c 10000000 		.4byte	.LFE12
 2431 0060 00000000 		.4byte	.LFB13
 2432 0064 10000000 		.4byte	.LFE13
 2433 0068 00000000 		.4byte	.LFB14
 2434 006c 1C000000 		.4byte	.LFE14
 2435 0070 00000000 		.4byte	.LFB15
 2436 0074 1C000000 		.4byte	.LFE15
 2437 0078 00000000 		.4byte	.LFB16
 2438 007c 5C000000 		.4byte	.LFE16
 2439 0080 00000000 		.4byte	.LFB17
 2440 0084 40000000 		.4byte	.LFE17
 2441 0088 00000000 		.4byte	.LFB18
 2442 008c 48000000 		.4byte	.LFE18
 2443 0090 00000000 		.4byte	0
 2444 0094 00000000 		.4byte	0
 2445              		.section	.debug_line,"",%progbits
 2446              	.Ldebug_line0:
 2447 0000 76020000 		.section	.debug_str,"MS",%progbits,1
 2447      02005500 
 2447      00000201 
 2447      FB0E0D00 
 2447      01010101 
 2448              	.LASF57:
 2449 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2449      5341525F 
 2449      5365715F 
 2449      315F6F66 
 2449      66736574 
 2450              	.LASF10:
 2451 0015 75696E74 		.ascii	"uint16\000"
 2451      313600
 2452              	.LASF25:
 2453 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2453      5341525F 
 2453      5365715F 
 2453      315F496E 
 2453      697400
 2454              	.LASF48:
 2455 002f 61646347 		.ascii	"adcGain\000"
 2455      61696E00 
 2456              	.LASF24:
 2457 0037 636F756E 		.ascii	"counts\000"
 2457      747300
 2458              	.LASF29:
 2459 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 60


 2459      5341525F 
 2459      5365715F 
 2459      315F5374 
 2459      61727443 
 2460              	.LASF44:
 2461 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2461      5341525F 
 2461      5365715F 
 2461      315F5365 
 2461      74536174 
 2462              	.LASF63:
 2463 0072 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2463      43313120 
 2463      352E342E 
 2463      31203230 
 2463      31363036 
 2464 00a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2464      20726576 
 2464      6973696F 
 2464      6E203233 
 2464      37373135 
 2465 00d8 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2465      66756E63 
 2465      74696F6E 
 2465      2D736563 
 2465      74696F6E 
 2466              	.LASF27:
 2467 0100 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2467      5341525F 
 2467      5365715F 
 2467      315F5374 
 2467      61727400 
 2468              	.LASF7:
 2469 0114 6C6F6E67 		.ascii	"long long unsigned int\000"
 2469      206C6F6E 
 2469      6720756E 
 2469      7369676E 
 2469      65642069 
 2470              	.LASF26:
 2471 012b 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2471      5341525F 
 2471      5365715F 
 2471      315F456E 
 2471      61626C65 
 2472              	.LASF33:
 2473 0140 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2473      5341525F 
 2473      5365715F 
 2473      315F4765 
 2473      74526573 
 2474              	.LASF6:
 2475 015a 6C6F6E67 		.ascii	"long long int\000"
 2475      206C6F6E 
 2475      6720696E 
 2475      7400
 2476              	.LASF0:
 2477 0168 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 61


 2477      65642063 
 2477      68617200 
 2478              	.LASF41:
 2479 0174 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2479      5341525F 
 2479      5365715F 
 2479      315F5365 
 2479      74486967 
 2480              	.LASF13:
 2481 018f 696E7433 		.ascii	"int32\000"
 2481      3200
 2482              	.LASF52:
 2483 0195 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2483      5341525F 
 2483      5365715F 
 2483      315F436F 
 2483      756E7473 
 2484              	.LASF4:
 2485 01b3 6C6F6E67 		.ascii	"long int\000"
 2485      20696E74 
 2485      00
 2486              	.LASF9:
 2487 01bc 75696E74 		.ascii	"uint8\000"
 2487      3800
 2488              	.LASF61:
 2489 01c2 43794465 		.ascii	"CyDelayUs\000"
 2489      6C617955 
 2489      7300
 2490              	.LASF16:
 2491 01cc 646F7562 		.ascii	"double\000"
 2491      6C6500
 2492              	.LASF11:
 2493 01d3 75696E74 		.ascii	"uint32\000"
 2493      333200
 2494              	.LASF38:
 2495 01da 6D61736B 		.ascii	"mask\000"
 2495      00
 2496              	.LASF49:
 2497 01df 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2497      5341525F 
 2497      5365715F 
 2497      315F436F 
 2497      756E7473 
 2498              	.LASF34:
 2499 01fd 7265744D 		.ascii	"retMode\000"
 2499      6F646500 
 2500              	.LASF56:
 2501 0205 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2501      5341525F 
 2501      5365715F 
 2501      315F696E 
 2501      69745661 
 2502              	.LASF8:
 2503 021b 756E7369 		.ascii	"unsigned int\000"
 2503      676E6564 
 2503      20696E74 
 2503      00
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 62


 2504              	.LASF66:
 2505 0228 75566F6C 		.ascii	"uVolts\000"
 2505      747300
 2506              	.LASF5:
 2507 022f 6C6F6E67 		.ascii	"long unsigned int\000"
 2507      20756E73 
 2507      69676E65 
 2507      6420696E 
 2507      7400
 2508              	.LASF54:
 2509 0241 766F6C74 		.ascii	"volts\000"
 2509      7300
 2510              	.LASF23:
 2511 0247 746D7052 		.ascii	"tmpRegVal\000"
 2511      65675661 
 2511      6C00
 2512              	.LASF3:
 2513 0251 73686F72 		.ascii	"short unsigned int\000"
 2513      7420756E 
 2513      7369676E 
 2513      65642069 
 2513      6E7400
 2514              	.LASF60:
 2515 0264 4379496E 		.ascii	"CyIntSetVector\000"
 2515      74536574 
 2515      56656374 
 2515      6F7200
 2516              	.LASF65:
 2517 0273 433A5C55 		.ascii	"C:\\Users\\Austcha\\Documents\\Husky Robotics\\Moto"
 2517      73657273 
 2517      5C417573 
 2517      74636861 
 2517      5C446F63 
 2518 02a1 7220426F 		.ascii	"r Boards\\Rev3\\Motor-Unit-Firmware-A-2019-2020\\Mo"
 2518      61726473 
 2518      5C526576 
 2518      335C4D6F 
 2518      746F722D 
 2519 02d1 746F7220 		.ascii	"tor Unit\\Motor_Board_Rev3.cydsn\000"
 2519      556E6974 
 2519      5C4D6F74 
 2519      6F725F42 
 2519      6F617264 
 2520              	.LASF55:
 2521 02f1 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2521      5341525F 
 2521      5365715F 
 2521      315F6368 
 2521      616E6E65 
 2522              	.LASF51:
 2523 030e 6D566F6C 		.ascii	"mVolts\000"
 2523      747300
 2524              	.LASF19:
 2525 0315 72656733 		.ascii	"reg32\000"
 2525      3200
 2526              	.LASF14:
 2527 031b 666C6F61 		.ascii	"float32\000"
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 63


 2527      74333200 
 2528              	.LASF21:
 2529 0323 73697A65 		.ascii	"sizetype\000"
 2529      74797065 
 2529      00
 2530              	.LASF40:
 2531 032c 6C6F774C 		.ascii	"lowLimit\000"
 2531      696D6974 
 2531      00
 2532              	.LASF20:
 2533 0335 6C6F6E67 		.ascii	"long double\000"
 2533      20646F75 
 2533      626C6500 
 2534              	.LASF32:
 2535 0341 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2535      5341525F 
 2535      5365715F 
 2535      315F4973 
 2535      456E6443 
 2536              	.LASF30:
 2537 035f 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2537      5341525F 
 2537      5365715F 
 2537      315F5374 
 2537      6F70436F 
 2538              	.LASF17:
 2539 0379 696E7436 		.ascii	"int64\000"
 2539      3400
 2540              	.LASF59:
 2541 037f 4379496E 		.ascii	"CyIntSetPriority\000"
 2541      74536574 
 2541      5072696F 
 2541      72697479 
 2541      00
 2542              	.LASF64:
 2543 0390 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2543      72617465 
 2543      645F536F 
 2543      75726365 
 2543      5C50536F 
 2544              	.LASF15:
 2545 03b7 666C6F61 		.ascii	"float\000"
 2545      7400
 2546              	.LASF47:
 2547 03bd 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2547      5341525F 
 2547      5365715F 
 2547      315F5365 
 2547      74476169 
 2548              	.LASF28:
 2549 03d3 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
 2549      5341525F 
 2549      5365715F 
 2549      315F5374 
 2549      6F7000
 2550              	.LASF42:
 2551 03e6 68696768 		.ascii	"highLimit\000"
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 64


 2551      4C696D69 
 2551      7400
 2552              	.LASF62:
 2553 03f0 43794861 		.ascii	"CyHalt\000"
 2553      6C7400
 2554              	.LASF1:
 2555 03f7 756E7369 		.ascii	"unsigned char\000"
 2555      676E6564 
 2555      20636861 
 2555      7200
 2556              	.LASF2:
 2557 0405 73686F72 		.ascii	"short int\000"
 2557      7420696E 
 2557      7400
 2558              	.LASF53:
 2559 040f 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2559      5341525F 
 2559      5365715F 
 2559      315F436F 
 2559      756E7473 
 2560              	.LASF37:
 2561 042c 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2561      5341525F 
 2561      5365715F 
 2561      315F5365 
 2561      74436861 
 2562              	.LASF22:
 2563 0446 63684E75 		.ascii	"chNum\000"
 2563      6D00
 2564              	.LASF35:
 2565 044c 6368616E 		.ascii	"chan\000"
 2565      00
 2566              	.LASF18:
 2567 0451 63686172 		.ascii	"char\000"
 2567      00
 2568              	.LASF39:
 2569 0456 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2569      5341525F 
 2569      5365715F 
 2569      315F5365 
 2569      744C6F77 
 2570              	.LASF46:
 2571 0470 6F666673 		.ascii	"offset\000"
 2571      657400
 2572              	.LASF50:
 2573 0477 61646343 		.ascii	"adcCounts\000"
 2573      6F756E74 
 2573      7300
 2574              	.LASF58:
 2575 0481 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2575      5341525F 
 2575      5365715F 
 2575      315F636F 
 2575      756E7473 
 2576              	.LASF31:
 2577 049f 73746174 		.ascii	"status\000"
 2577      757300
ARM GAS  C:\Users\Austcha\AppData\Local\Temp\ccLjoqH7.s 			page 65


 2578              	.LASF45:
 2579 04a6 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2579      5341525F 
 2579      5365715F 
 2579      315F5365 
 2579      744F6666 
 2580              	.LASF12:
 2581 04be 696E7431 		.ascii	"int16\000"
 2581      3600
 2582              	.LASF43:
 2583 04c4 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2583      5341525F 
 2583      5365715F 
 2583      315F5365 
 2583      744C696D 
 2584              	.LASF36:
 2585 04df 72657375 		.ascii	"result\000"
 2585      6C7400
 2586              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
